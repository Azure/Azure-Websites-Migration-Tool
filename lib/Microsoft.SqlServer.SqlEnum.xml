<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlServer.SqlEnum</name>
    </assembly>
    <members>
        <member name="P:Microsoft.SqlServer.Management.Smo.AvailableSQLServers.ResultTypes">
            <summary>
            return what types of results does this object support
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ConditionedSql">
            <summary>
            class encapsulateing a conditioned sql
            that is a sql the is neccessary only when a property is requested</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.#ctor">
            <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.SetFields(System.Collections.Specialized.StringCollection)">
            <summary>
            set the triggering fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.IsHit(System.String)">
            <summary>
            return true if the field has caused the sql to be added</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.TestHit(System.String)">
            <summary>
            test if the field would make the tsql to be added
             ( it does not look if it was already used )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.IsDefault">
            <summary>
            this sql must always be added no matter what fields are requested</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.MarkHit">
            <summary>
            mark this sql as used</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.ClearHit">
            <summary>
            mark this sql as not used</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.AddLinkMultiple(Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink)">
            <summary>
            intialize link multiple</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSql.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            <summary>
            add hit for the field from the object ( level ) obj, add record in the StamentBuilder sb</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.Fields">
            <summary>
            get the list of triggering fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.IsUsed">
            <summary>
             is this conditioned sql already used ? ( important because it can be used only once )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.AcceptsMultipleHits">
            <summary>
            can be added multiple times</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.Used">
            <summary>
            has been added at least once</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.LinkMultiple">
            <summary>
            get the link multiple </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSql.LinkFields">
            <summary>
            get the list of fields for which we need their value</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ConditionedSqlList">
            <summary>
             a list of CondtionedSql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.#ctor">
            <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.Add(Microsoft.SqlServer.Management.Smo.ConditionedSql)">
            <summary>
            add a conditioned sql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ClearHits">
            <summary>
            clear used mark for all conditioned sqls</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.AddHits(Microsoft.SqlServer.Management.Smo.SqlObjectBase,System.String,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            <summary>
            add hit for every cionditioned sql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.AddDefault(Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            <summary>
            add default conditioned sql </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.GetEnumerator">
            <summary>
            get an enumerator for foreach</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.Count">
            <summary>
            how many conditioned sql are there</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.Item(System.Int32)">
            <summary>
            int indexer</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ConditionedSqlListEnumerator">
            <summary>
             nested enumerator class
             we need that to override the behaviour of SortedList
             that exposes an IEnumerator interface</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ConditionedSqlListEnumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ConditionedSqlListEnumerator.MoveNext">
            <summary>
            move one position forward</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ConditionedSqlListEnumerator.Reset">
            <summary>
            reset the enumerator</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ConditionedSqlList.ConditionedSqlListEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            get  current conditioned sql</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlObject">
            <summary>
            SqlObject adds to SqlObjectBase logic to initialize from an xml file </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlObjectBase">
            <summary>
            main work horse for the sql enumerator. it generates the tsql for a level and 
            comunicates with the other levels </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.#ctor">
            <summary>
            Default contructor </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.SetUrn(Microsoft.SqlServer.Management.Sdk.Sfc.Urn)">
            <summary>
            set's the Urn up to this level 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.GetSqlProperty(System.String,Microsoft.SqlServer.Management.Sdk.Sfc.ObjectPropertyUsages)">
            <summary>
            get the property field if it is legal for the usage, else throw</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddFilterProperty(System.String)">
            	<summary>
             the xpath scanner has detected that this property is used in filter
            add whatever is required to support it, return value </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddOrderByProperty(System.String)">
            	<summary>
             the xpath scanner has detected that this property is used in orderby
            add whatever is required to support it, return value	</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddOrderByProperty(System.String,System.Boolean)">
            <summary>
            Add the information that the TSQL is ordered by the property name
            if overrideFlags is tru don't check if it is legal to use this property for order by</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddLinkProperty(System.String)">
            <summary>
            add whatever is required to support it, return value </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddConditionalsJustPropDependencies(System.String)">
            <summary>
            add whatever is required to support it</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddConditionals(System.String)">
            	<summary>
            add sql wich is necessary if the property: field, is requested </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.RetrieveParentRequest">
            <summary>
            Retrive the request that will be sent to the parent level. 
            we must comunicate wht info we need from the parent level here</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddLinkProperties(Microsoft.SqlServer.Management.Smo.LinkFieldType,System.Collections.ArrayList)">
            <summary>
            Add link properties in linkFields
            lft indicates which side of the link pair ( local parent ) is to be added </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.IntegrateParentResult(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            	<summary>
            combine StatementBuilder from this level with what was received in the result from the parent level</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.PrepareGetData(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            <summary>
            prepare to do main work and fill StatementBuilder with the information for this level</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.GetData(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            <summary>
            fill StatementBuilder with the information for this level </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.BuildStatement(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            <summary>
            build statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddSpecialQuery(System.String,System.String)">
            <summary>
            Add the special query to the tsql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddQueryHint(System.String)">
            <summary>
            Add the query hint to the tsql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddQueryHintToResult(Microsoft.SqlServer.Management.Smo.SqlEnumResult)">
            <summary>
            Add the query hint to the tsql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.BuildResult(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            	<summary>
            	Based on the requested result type and on the result from the parent level 
            return the requested info from this level</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.FillDataWithUseFailure(Microsoft.SqlServer.Management.Smo.SqlEnumResult,Microsoft.SqlServer.Management.Sdk.Sfc.ResultType)">
            <summary>
            Get data from Sql Server. If we fail to get into a database then ignore that database</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.FillData(Microsoft.SqlServer.Management.Sdk.Sfc.ResultType,System.Collections.Specialized.StringCollection,System.Object,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            <summary>
            n queries to prepare 
            and the last one to fill the data</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ClearHits">
            <summary>
            clear all the conditional tsql which was activated for the fields in this request</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddPropertyForFilter(System.String)">
            <summary>
            name property is used in filter</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddConstantForFilter(System.String)">
            <summary>	
            FilterDecoder reports that a constant is used in filter
            gives client a chance to modify it</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ResolveLocalLinkLinks">
            <summary>
            resolve all links which can be resolved at the local level</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.StoreInitialState">
            <summary>
            pre initialize the object with the static info. ( resolve local links )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.RestoreInitialState">
            <summary>
            get the object in a clean state remove whatever was changed to resolve the current request</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ResolveComputedField(System.String)">
            <summary>
            a computed field has been used. 
            return its dynamically calculated value</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.PostProcess(Microsoft.SqlServer.Management.Sdk.Sfc.EnumResult)">
            <summary>
            execute any PostProcess actions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.GetAliasPropertyName(System.String)">
            <summary>
            get the property name acording with the alias rules set in the request</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddOrderByInDatabase">
            <summary>
            add the order by clause when the tsql runs inside one database</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.AddOrderByAcrossDatabases">
            <summary>
            add the order by clause when the tsql runs across databases</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectBase.GetFixedFilterValue(System.String)">
            <summary>
            get the filter value the we know for sure the is equal to a fixed constannt value</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.StatementBuilder">
            <summary>
            The TSQL place holder + information that will be later transformed in TSQL</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ParentLink">
            <summary>
            how the current level links with the parent level </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.RequestParentSelect">
            <summary>
            Storeage for a parent select ( when we need the tsql for the parent level, usually to insert it in prefix ) </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.OrderByRedirect">
            <summary>
            used to translate an order by on post process fields to other, supporting fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.SpecialQuery">
            <summary>
            stores a query used to test a condition , for example that a table needed to resolve this level
            exists, if that fails then the empty set is returned rather then exception</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.QueryHint">
            <summary>
            Gets query hint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ConditionedSqlList">
            <summary>
            prefix, postfix etc, that must be added when certain fields are requested</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.PropertyLinkList">
            <summary>
            links for properties</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.PostProcessList">
            <summary>
            post processes for the level</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.Distinct">
            <summary>
            the result must be distinct</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.SqlRequest">
            <summary>
            the SqlRequest that this level must resolve</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ObjectName">
            <summary>
            Level name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ResultTypes">
            <summary>
            reports the ResultTypes supported by this level</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.ResourceAssembly">
            <summary>
            virtual function that returns the assembly in which this object has the configuration file</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectBase.CalculateParentRequest">
            <summary>
             Returns true if we are in the process of building
             a parent request
             Returns false if we are building a result</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.Initialize(System.Object,Microsoft.SqlServer.Management.Sdk.Sfc.XPathExpressionBlock)">
            <summary>
            initialize the connection info and xpath information </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.LoadInitData(System.String,Microsoft.SqlServer.Management.Common.ServerVersion,Microsoft.SqlServer.Management.Common.DatabaseEngineType,Microsoft.SqlServer.Management.Common.DatabaseEngineEdition)">
            <summary>
            load the specified file for the specified version </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.LoadInitData(System.IO.Stream,Microsoft.SqlServer.Management.Common.ServerVersion,Microsoft.SqlServer.Management.Common.DatabaseEngineType,Microsoft.SqlServer.Management.Common.DatabaseEngineEdition)">
            <summary>
            Creates a SqlObject based on config from the given stream. Note that "include" tags will only work for resources defined in the current resource assembly.
            </summary>
            <param name="xml"></param>
            <param name="ver"></param>
            <param name="databaseEngineType"></param>
            <param name="databaseEngineEdition"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.LoadInitDataFromAssembly(System.Reflection.Assembly,System.String,Microsoft.SqlServer.Management.Common.ServerVersion,Microsoft.SqlServer.Management.Common.DatabaseEngineType,Microsoft.SqlServer.Management.Common.DatabaseEngineEdition)">
            <summary>
            load the specified file for the specified version from the specified assembly </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.LoadAndStore(Microsoft.SqlServer.Management.Smo.XmlReadDoc,System.Reflection.Assembly,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
            <summary>
            load from the specfied xml doc in the assemblyObject assembly the fields
            specified in requestedFields; also after loading initialize static links between 
            the properties. </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObject.Load(Microsoft.SqlServer.Management.Smo.XmlReadDoc,System.Reflection.Assembly,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
            <summary>
            load from the specfied xml doc in the assemblyObject assembly the fields
            specified in requestedFields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseLevel.IsDatabaseNameOrDerivate(System.String)">
            <summary>
             returns true if the field is 
             the database name or derived from it
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseLevel.CleanupFilter">
            <summary>
             cleans database filter to avoid a join if only DatabaseName
             and Urn which we assume is composed from DatabaseName are requested
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DataProvider">
            <summary>
            exeposes the results as a tsql as a DataTable or a data reader
            executes necessary postprocesses and type conversions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.#ctor(Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            <summary>
            initialize with SatatementBuilder, default retrive mode is DataReader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.#ctor(Microsoft.SqlServer.Management.Smo.StatementBuilder,Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode)">
            <summary>
            initialize with SatatementBuilder, and retrive mode</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.Init(Microsoft.SqlServer.Management.Smo.StatementBuilder,Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode)">
            <summary>
            initialize with StatementBuilder, and retrive mode
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.SetConnectionAndQuery(Microsoft.SqlServer.Management.Smo.ExecuteSql,System.String)">
            <summary>
            the means to execute the query ( execSql ) and the query ( query )
            it executes the query and gets a data reader
            if retrive mode is DataTable it proceeds to fill it</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.InitRowDataManipulation(System.Collections.ArrayList,System.Collections.SortedList)">
            <summary>
            init data structures so that row manipulation is done eficiently</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.InitSchemaTable(System.Collections.ArrayList)">
            <summary>
             Creates a empty DataTable that reflects the schema of the retrieved data.
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetTrigeredValue(System.Int32)">
            <summary>
            get the value for the ordinal column i
            the column is triggered rather than requested by user</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetDataFromStorage(System.Int32)">
            <summary>
            get the value for ordinal column i
            the column was directly requested by the user</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.SetDataInStorage(System.Int32,System.Object)">
            <summary>
            update the data at ordinal i</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.ReadInternal">
            <summary>
            advance one row</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.ManipulateRowDataPostProcess">
            <summary>
            executes post process for this row</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.ManipulateRowDataType">
            <summary>
            execute type conversions for this row</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.ManipulateRowData">
            <summary>
            manipulates row data: post process + type conversions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.Close">
            <summary>
            clear internal data, cancel any data reader pipe, close reader, disconnect </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetSchemaTable">
            <summary>
            get empty DataTable describing the schema
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.NextResult">
            <summary>
            nop, always returns false</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.Read">
            <summary>
            advances to next row, closes in case of failure</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetTable">
            <summary>
            get the DataTable filled with the result data</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.Dispose">
            <summary>
            dispose the object</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.AdjustIndex(System.Int32)">
            <summary>
            makes shure any access outside the user requested properties
            results in an out of range exception
            triggered properties should not be available</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetBoolean(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetByte(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetChar(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetData(System.Int32)">
            <summary>
            not supported, always null</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetDataTypeName(System.Int32)">
            <summary>
            get type name for column at ordinal i</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetDateTime(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetDecimal(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetDouble(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetFieldType(System.Int32)">
            <summary>
            get type for column at ordinal i</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetFloat(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetGuid(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetInt16(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetInt32(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetInt64(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetName(System.Int32)">
            <summary>
            get column name for ordinal i</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetOrdinal(System.String)">
            <summary>
            get ordinal for column name</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetString(System.Int32)">
            <summary>
            get data for column i as the given type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetValue(System.Int32)">
            <summary>
            get data for column i as Object</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.GetValues(System.Object[])">
            <summary>
            get data for the row as an array of Object</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DataProvider.IsDBNull(System.Int32)">
            <summary>
            true if the data for ordinal i is null</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.Depth">
            <summary>
            always 1
             </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.IsClosed">
            <summary>
            is DataReader closed
             </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.RecordsAffected">
            <summary>
             Returns the number of records affected. Will always be -1.
             </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.TableRowCount">
            <summary>
            Returns the number of rows in the table.
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.FieldCount">
            <summary>
            number of columns</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.Item(System.Int32)">
            <summary>
            int indexer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DataProvider.Item(System.String)">
            <summary>
            string indexer</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode">
            <summary>
            describes how the data will be retrived</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode.RetriveDataReader">
            <summary>
            as a DataReadet</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode.RetriveDataTable">
            <summary>
            as a DataTable</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo">
            used by function CheckDdlHeader and ReadNameFromDdl
            to return headerInformation
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.scriptForCreate">
            true if the script contains a CREATE keyword, false eitherwise
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexCreate">
            index in text where the CREATE keyword starts
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.scriptContainsOrAlter">
            true if the script contains a OR ALTER keyword, false otherwise
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexOrAlterStart">
            index in text where the OR ALTER keyword starts
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexOrAlterEnd">
            index in text where the OR ALTER keyword ends
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexNameStart">
            index in text where the name starts, this is the full name including schema
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexNameEnd">
            first index that is not part of the name anymore, this also includes the proc number
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.objectType">
            the type of object for text ex.:PROC, TRIGGER, VIEW etc.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.schema">
            schema as extracted from the header
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.name">
            name as extracted from the header
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.database">
            Database name as extracted from the header
            Will only be meaningful when we have a three part name, currently only
            the name of the table on which a trigger is created
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.procedureNumber">
            if the text is a procedure with the number specified, it will 
            contain semicolon + number. ex.:";1" ";2" or ";3" etc.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexNameStartSecondary">
            start index of a name of an object used inside the text
            currently used for the table triger
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.indexNameEndSecondary">
            one beyond end index of a name of an object used inside the text
            currently used for the table triger
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.schemaSecondary">
            schema as extracted from inside the header
            currently used for the schema of a table inside the triger text
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.nameSecondary">
            name as extracted from inside the header
            currently used for the name of a table inside the triger text
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo.databaseSecondary">
            database name as extracted from inside the header
            currently used for the name of a table inside the triger text
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DdlTextParser">
            <summary>
            encapsulates parsing text of database text objects</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.#cctor">
            <summary>
            default constructor , initializes grammars</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.ReadNameFromDdl(System.Text.RegularExpressions.Match@,System.Boolean,Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo@)">
            <summary>
            get index name start, index name end ( includes the eventual procedure number )  and 
            the name and eventually procedure number 
            the parsing is based on quoted identifier status</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.ReadFullNameFromDdl(System.Text.RegularExpressions.Match@,System.Boolean,Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo@)">
            <summary>
            get index name start, index name end ( includes the eventual procedure number )  and 
            the name, includes eventual schema and procedure number 
            the parsing is based on quoted identifier status
            sample valid names: [sss].[nnn], "sss"."nnn", sss.nnn, [nnn], "nnn", nnn, [sss]."nnn", "sss".[nnn], [sss].[nnn];1, ...
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.CheckDdlHeader(System.String,System.Boolean,Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo@)">
            <summary>
            based on forAlter the text for create it must start with create,for alter it must start with create or alter
            return index for name,( includes schema, name, proc number ) the name, schema and proc number
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.CheckDdlHeader(System.String,System.Boolean,System.Boolean,Microsoft.SqlServer.Management.Smo.DdlTextParserHeaderInfo@)">
            <summary>
            based on forAlter the text for create it must start with create,for alter it must start with create or alter
            create or alter is supported after SqlVersion.120
            return index for name,( includes schema, name, proc number ) the name, schema and proc number
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.ParseDdlHeader(System.String)">
            <summary>
            returns the index where the header ends and the body starts
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DdlTextParser.ParseCheckOption(System.String)">
            <summary>
            return the index where the CHECK_OPTION is specified in the view text
            -1 if not found</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseCategory">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseCategory.Published">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseCategory.Subscribed">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseCategory.MergePublished">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseCategory.MergeSubscribed">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.FileGrowthType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGrowthType.KB">
            <summary>
            Default </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGrowthType.Percent">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGrowthType.None">
            <summary>
            the file is not supposed to grow</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IndexKeyType">
            <summary>
            The enumeration specifies the attributes of the Index object
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexKeyType.None">
            <summary>
            index is not a key
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexKeyType.DriPrimaryKey">
            <summary>
            index is a primary key
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexKeyType.DriUniqueKey">
            <summary>
            index is a unique key constraint
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IndexType">
            <summary>
            The enumeration specifies the type of the Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.ClusteredIndex">
            <summary>
            Clustered Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.NonClusteredIndex">
            <summary>
            Nonclustered Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.PrimaryXmlIndex">
            <summary>
            Primary XML Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.SecondaryXmlIndex">
            <summary>
            Secondary XML Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.SpatialIndex">
            <summary>
            Spatial Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.NonClusteredColumnStoreIndex">
            <summary>
            Nonclustered Columnstore Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.NonClusteredHashIndex">
            <summary>
            Nonclustered Hash Index.
            </summary> 
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.SelectiveXmlIndex">
            <summary>
            Primary Selective Xml Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.SecondarySelectiveXmlIndex">
            <summary>
            Secondary Selective Xml Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.ClusteredColumnStoreIndex">
            <summary>
            Clustered Columnstore Index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexType.HeapIndex">
            <summary>
            Heap Index.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DurabilityType">
            <summary>
            The enumeration specifies the durability type of hekaton tables
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DurabilityType.SchemaOnly">
            <summary>
            Non-Durable (SCHEMA_ONLY)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DurabilityType.SchemaAndData">
            <summary>
            Durable (SCHEMA_AND_DATA)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.None">
            <summary>
            Not a graph column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphId">
            <summary>
            The graph internal identifier column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphIdComputed">
            <summary>
            The graph internal identifier computed column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphFromId">
            <summary>
            The graph edge from identifier column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphFromObjId">
            <summary>
            The graph edge from object identifier column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphFromIdComputed">
            <summary>
            The graph edge from computed column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphToId">
            <summary>
            The graph edge to identifier column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphToObjId">
            <summary>
            The graph edge to object identifier column.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.GraphType.GraphToIdComputed">
            <summary>
            The graph edge to computed column.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LockEscalationType">
            <summary>
            The enumeration specifies the lock escalation granularity
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockEscalationType.Table">
            <summary>
            Enable lock escalation on a table level granularity
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockEscalationType.Disable">
            <summary>
            Disable lock escalation on a table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockEscalationType.Auto">
            <summary>
            Enable lock escalation for a partitioned table
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExternalDataSourceType">
            <summary>
            The enumeration specifies the external data source type for external tables
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalDataSourceType.Hadoop">
            <summary>
            Hadoop external data source type; used by Polybase.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalDataSourceType.Rdbms">
            <summary>
            Rdbms external data source type; used by Global Query (GQ).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalDataSourceType.ShardMapManager">
            <summary>
            ShardMapManager external data source type; used by Global Query (GQ).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType">
            <summary>
            The enumeration specifies the external file format types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType.None">
            <summary>
            No reject type. Applicable for GQ external tables.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType.DelimitedText">
            <summary>
            Delimited text file format.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType.RcFile">
            <summary>
            RCFILE file format.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType.Orc">
            <summary>
            ORC file format.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalFileFormatType.Parquet">
            <summary>
            Parquet file format.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExternalTableRejectType">
            <summary>
            The enumeration specifies the external table reject types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableRejectType.Value">
            <summary>
            Value reject type format.  This is the default.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableRejectType.Percentage">
            <summary>
            Percentage reject type format.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableRejectType.None">
            <summary>
            No reject type. Applicable for GQ external tables.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExternalTableDistributionType">
            <summary>
            The enumeration specifies the external table distribution. Valid for tables
            with ShardMapManager external data sources.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableDistributionType.Sharded">
            <summary>
            External table has SHARDED distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableDistributionType.Replicated">
            <summary>
            External table has REPLICATED distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableDistributionType.RoundRobin">
            <summary>
            External table has ROUND_ROBIN distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExternalTableDistributionType.None">
            <summary>
            External table doesn't have a distribution.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DwTableDistributionType">
            <summary>
            The enumeration specifies the SQL DW distributed table distribution types.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DwTableDistributionType.Undefined">
            <summary>
            A table distribution is undefined.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DwTableDistributionType.None">
            <summary>
            A table doesn't have a distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DwTableDistributionType.Hash">
            <summary>
            SQL DW table has a HASH distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DwTableDistributionType.Replicate">
            <summary>
            SQL DW table has a REPLICATE distribution.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DwTableDistributionType.RoundRobin">
            <summary>
            SQL DW table has a ROUND_ROBIN distribution.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SpatialIndexType">
            <summary>
            The Spatial Index type for the Spatial Indices
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialIndexType.None">
            <summary>
            index is not a spatial
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialIndexType.GeometryGrid">
            <summary>
            Geometric Spatial Index Type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialIndexType.GeographyGrid">
            <summary>
            Geography Grid Spatial Index Type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialIndexType.GeometryAutoGrid">
            <summary>
            Geometry Auto Grid Spatial Index Type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialIndexType.GeographyAutoGrid">
            <summary>
            Geography Auto Grid Spatial Index Type
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SpatialGeoLevelSize">
            <summary>
            The Spatial Geo Level Sizes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialGeoLevelSize.None">
            <summary>
            Index is not spatial
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialGeoLevelSize.Low">
            <summary>
            Low Size
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialGeoLevelSize.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SpatialGeoLevelSize.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PermissionState">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PermissionState.Deny">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PermissionState.Revoke">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PermissionState.Grant">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PermissionState.GrantWithGrant">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.BackupDeviceType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.CDRom">
            <summary>
            Reserved for future use. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.Disk">
            <summary>
            Device is a disk file. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.FloppyA">
            <summary>
            Device is a disk file created on removable media in the A drive. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.FloppyB">
            <summary>
            Device is a disk file created on removable media in the B drive. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.Pipe">
            <summary>
            Device identifies a named pipe. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.Tape">
            <summary>
            Device is a tape. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.Url">
            <summary>
            Device is a URL. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupDeviceType.Unknown">
            <summary>
            Bad or invalid device type. </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.UserDefinedFunctionType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedFunctionType.Inline">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedFunctionType.Scalar">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedFunctionType.Table">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedFunctionType.Unknown">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerLoginMode">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerLoginMode.Normal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerLoginMode.Integrated">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerLoginMode.Mixed">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerLoginMode.Unknown">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LockRequestStatus">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockRequestStatus.Granted">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockRequestStatus.Converting">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LockRequestStatus.Waiting">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RecoveryModel">
             <summary>
            enum values are aranget to mach sys.databases.recovery_option</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RecoveryModel.Simple">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RecoveryModel.BulkLogged">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RecoveryModel.Full">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CategoryClass">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CategoryClass.Job">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CategoryClass.Alert">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CategoryClass.Operator">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MediaTypes">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.All">
            <summary>
            Default. List all media. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.CDRom">
            <summary>
            List visible CD-ROM devices. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.FixedDisk">
            <summary>
            List visible fixed disk drive devices. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.Floppy">
            <summary>
            List visible floppy disk drive devices. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.SharedFixedDisk">
            <summary>
            List visible fixed disk drive devices shared on a clustered computer. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MediaTypes.Tape">
            <summary>
            List visible tape devices. </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LoginType">
            Specifies the type of Login.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.WindowsUser">
             <summary>
            Login is based on Windows User.
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.WindowsGroup">
             <summary>
            Login is based on Windows Group.
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.SqlLogin">
             <summary>
            Login is based on SQL login.
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.Certificate">
             <summary>
            Login is based on certificate.
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.AsymmetricKey">
             <summary>
            Login is based on asymmetric key.
             </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.ExternalUser">
            <summary>
            Login is based on External User
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LoginType.ExternalGroup">
             <summary>
            Login is based on External Group
             </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.UserType">
            <summary>
            Specifies the type of user in a database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.SqlLogin">
            <summary>
            Specifies a SQLLogin user. This is deprecated, use SQLUser instead.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.SqlUser">
            <summary>
            Specifies that the user is either a SQLLogin user or a user with password.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.Certificate">
            <summary>
            Specifies that the user login for the database is based on a certificate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.AsymmetricKey">
            <summary>
            Specifies that the user login for the database is based on an asymmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.NoLogin">
            <summary>
            Specifies that the user does not have a login for the database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserType.External">
            <summary>
            Specifies that the user is based on external authentication
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.WindowsLoginAccessType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WindowsLoginAccessType.Deny">
             <summary>
            This login has explicit deny permissions to access this server. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WindowsLoginAccessType.Grant">
             <summary>
            This login has explicit grant permissions to access this server. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WindowsLoginAccessType.NonNTLogin">
             <summary>
            The login is a standard SQL Server login; the property does not apply. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WindowsLoginAccessType.Undefined">
             <summary>
            The login has not been explicitly granted or denied permissions to access this server. </summary>
            The login may still have access through a group membership, but this is not recorded as a login property. 
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseUserAccess">
             <summary>
            enum values are aranget to mach sys.databases.user_access</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseUserAccess.Single">
            <summary>
            only one db_owner, dbcreator, or sysadmin user at a time</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseUserAccess.Restricted">
            <summary>
            only members of db_owner, dbcreator, and sysadmin roles</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseUserAccess.Multiple">
            <summary>
            all users</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ProviderAuthenticationType">
            <summary>
            Specifies the type of Authentication supported by Cryptographic Provider
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProviderAuthenticationType.Windows">
            <summary>
            Windows Authentication
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProviderAuthenticationType.Basic">
            <summary>
            Basic Authentication
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProviderAuthenticationType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MappedClassType">
            <summary>
            Specifies the class to which a Credential is mapped
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MappedClassType.None">
            <summary>
            Credential mapped to none
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MappedClassType.CryptographicProvider">
            <summary>
            Credential mapped to a cryptographic provider
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CollationVersion">
            <summary>
            Specifies the Collation Version
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version80">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version90">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version100">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version105">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version110">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version120">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version130">
            <summary>
            Collation for SQL 2016
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CollationVersion.Version140">
            <summary>
            Collation for SQL 2017
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ColumnEncryptionType">
            <summary>
            EncryptionType for a column encrypted with TCE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ColumnEncryptionType.Deterministic">
            <summary>
            Deterministic
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ColumnEncryptionType.Randomized">
            <summary>
            Randomized
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CompatibilityLevel">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version60">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version65">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version70">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version80">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version90">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version100">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version110">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version120">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version130">
            <summary>
            Compatibility level for SQL 15
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CompatibilityLevel.Version140">
            <summary>
            Compatibility level for SQL 2017
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseStatus">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Normal">
             <summary>
            Referenced database is available for use (Online).</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Restoring">
             <summary>
            Database restore is underway on the referenced database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.RecoveryPending">
             <summary>
            Database recovery is being prepared for the referenced database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Recovering">
             <summary>
            Database recovery is underway on the referenced database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Suspect">
             <summary>
            Database integrity is suspect for the referenced database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Offline">
             <summary>
            Referenced database has been placed offline by a system or user action.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Standby">
             <summary>
            Referenced database defined on a standby server.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Shutdown">
             <summary>
            Database is in Shutdown</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.EmergencyMode">
             <summary>
            Emergency mode has been initiated on the referenced database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.AutoClosed">
             <summary>
            The database has been autoclosed.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseStatus.Inaccessible">
             <summary>
            Property value that may be used for bitwisee AND operation to determine accessibility of the database (Restoring | Offline | Suspect | Recovering | RecoveryPending).</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SnapshotIsolationState">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SnapshotIsolationState.Disabled">
             <summary>
            Snapshot isolation is disabled.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SnapshotIsolationState.Enabled">
             <summary>
            Snapshot isolation is enabled.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SnapshotIsolationState.PendingOff">
             <summary>
            Snapshot isolation is in process of being disabled.      </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SnapshotIsolationState.PendingOn">
             <summary>
            Snapshot isolation is in process of being enabled.       </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DelayedDurability">
            <summary>
            Specifies the delayed durability option of the database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DelayedDurability.Disabled">
             <summary>
             Delayed durability is disabled.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DelayedDurability.Allowed">
             <summary>
             Delayed durability is allowed.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DelayedDurability.Forced">
             <summary>
             Delayed durability is forced.      
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RangeType">
            <summary>
            The RangeType  enum specifies whether the boundary values specified with 
            RangeValues are placed in the LEFT or RIGHT side of the interval. None corresponds
            to no boundary condition. Table with no partition is suitable example. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RangeType.None">
            <summary>
            RangeType is not set. 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RangeType.Left">
            <summary>
            Boundary values belong to left side of the interval.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RangeType.Right">
            <summary>
            Boundary values belong to right side of the interval.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DataCompressionType">
            <summary>
            DataCompressionType describe about the compression status of a table/index partition.
            None means no compression, Row means compression row wise,Page means compression
            applied page wise and ColumnStore is compression columnstore wise
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataCompressionType.None">
            <summary>
            No data compression for this object
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataCompressionType.Row">
            <summary>
            Row compression is set for this object
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataCompressionType.Page">
            <summary>
            Page compression is set for this object
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataCompressionType.ColumnStore">
            <summary>
            ColumnStore compression, default for columnstores
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DataCompressionType.ColumnStoreArchive">
            <summary>
            ColumnStore archival compression mode
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AbortAfterWait">
            <summary>
            Specifies the ABORT_AFTER_WAIT option of a DDL operation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AbortAfterWait.None">
            <summary>
            Abort none.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AbortAfterWait.Blockers">
            <summary>
            Abort blocking user transactions.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AbortAfterWait.Self">
            <summary>
            Abort the DDL.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AssemblySecurityLevel">
            <summary>
            Specifies the access rights for an Assembly.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AssemblySecurityLevel.Safe">
            <summary>
            Safe access only.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AssemblySecurityLevel.External">
            <summary>
            External access allowed.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AssemblySecurityLevel.Unrestricted">
            <summary>
            Unrestricted access allowed</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExternalLibraryContentType">
            <summary>
            Specifies the content type for an external library installation or alteration.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExecutionContext">
            <summary>
            Specifies the user context in which assembly code will run.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExecutionContext.Caller">
            <summary>
            Run in context of caller.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExecutionContext.Owner">
            <summary>
            Run as owner of assembly.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExecutionContext.ExecuteAsUser">
            <summary>
            Run as specified user with ExecuteAsUser property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ExecutionContext.Self">
            <summary>
            shortcut for ExecuteAsUser. resolves to user doing the alter/create</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerExecutionContext">
            <summary>
            Specifies the user context in which assembly code will run.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerExecutionContext.Caller">
            <summary>
            Run in context of caller.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerExecutionContext.ExecuteAsLogin">
            <summary>
            Run as specified login with ExecuteAsLogin property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerExecutionContext.Self">
            <summary>
            shortcut for ExecuteAsUser. resolves to user doing the alter/create</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerExecutionContext">
            <summary>
            Specifies the user context in which assembly code will run.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerExecutionContext.Caller">
            <summary>
            Run in context of caller.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerExecutionContext.ExecuteAsUser">
            <summary>
            Run as specified login with ExecuteAsLogin property.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerExecutionContext.Self">
            <summary>
            shortcut for ExecuteAsUser. resolves to user doing the alter/create</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ActivationExecutionContext">
            <summary>
            Specifies the user context for objects activation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ActivationExecutionContext.Owner">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ActivationExecutionContext.ExecuteAsUser">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ActivationExecutionContext.Self">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AssemblyAlterOptions">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AssemblyAlterOptions.None">
            <summary>
            No options specified.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AssemblyAlterOptions.NoChecks">
            TBD
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ImplementationType">
            <summary>
            Specifies the implementation type of a StoredProcedure, UserDefinedFunction,, and other objects.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ImplementationType.TransactSql">
            <summary>
            Implmemented with Transact-SQL.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ImplementationType.SqlClr">
            <summary>
            Implemented with a SQL CLR type.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.UserDefinedTypeFormat">
            <summary>
            Specifies how a UDT is stored.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedTypeFormat.Native">
            <summary>
            Store in native format.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedTypeFormat.UserDefined">
            <summary>
            Store in user defined format.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedTypeFormat.SerializedData">
            <summary>
            Compute serialized format once for this type.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.UserDefinedTypeFormat.SerializedDataWithMetadata">
            <summary>
            Store serialized format with each instance.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ResourceUsage">
            <summary>
             Specifies the available system resources for the MSSearch Service.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.Unknown">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.Background">
            <summary>
            Lowest priority. Fulltext population may take a long time.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.BelowNormal">
            <summary>
            Below normal priority. Less impact on other processes, prolong population.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.Normal">
            <summary>
            Normal priority.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.AboveNormal">
            <summary>
            Above normal. Other processes may run slower.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResourceUsage.Dedicated">
            <summary>
            Highest priority. Other processes may not be given any time if FullText is active.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.FullTextCatalogUpgradeOption">
            <summary>
             Specifies the Full Text Catalog Upgrade options</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FullTextCatalogUpgradeOption.AlwaysRebuild">
            <summary>
            This will always rebuild the FullText Indexes as part of upgrade.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FullTextCatalogUpgradeOption.AlwaysReset">
            <summary>
            This will get the metadata upgraded and reset the FullText index so user can rebuild at latter time.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FullTextCatalogUpgradeOption.ImportWithRebuild">
            <summary>
            This will import the metadata and indexes for the available FullText catalogs and for unavailable ones it will rebuild the indexes.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.StopListOption">
            <summary>
             Specifies the Stoplist options associated with a FullText Index.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.StopListOption.Off">
            <summary>
             This will not associate any fulltext stoplist with the specified FullText index.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.StopListOption.System">
            <summary>
             This will associate system default stoplist with the specified FullText index.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.StopListOption.Name">
            <summary>
             This will associate a stoplist with the specified FullText index.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RestoreType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RestoreType.Database">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RestoreType.File">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RestoreType.FileGroup">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RestoreType.VerifyOnly">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus">
            <summary>
            Specifies the population state of a Microsoft Search fulltext catalog.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Idle">
            <summary>
            No action is performed against the referenced fulltext catalog.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.CrawlinProgress">
            <summary>
            Fulltext index population is in progress for the referenced fulltext catalog.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Paused">
            <summary>
            Lack of available resource, such as disk space, has caused an interruption.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Throttled">
            <summary>
            Search service has paused the referenced fulltext index population.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Recovering">
            <summary>
            Interrupted population on the referenced fulltext catalog is resuming.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Shutdown">
            <summary>
            The referenced fulltext catalog is being deleted or not otherwise accessible.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Incremental">
            <summary>
            Incremental index population is in progress for the referenced fulltext catalog.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.UpdatingIndex">
            <summary>
            Referenced fulltext catalog is being assembled by the Search service.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.DiskFullPause">
            <summary>
            Lack of available disk space has caused an interruption.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationStatus.Notification">
            <summary>
            Fulltext catalog is processing notifications.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CatalogPopulationAction">
            <summary>
            Specifies catalog population action.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationAction.Full">
            <summary>
            Full population.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogPopulationAction.Incremental">
            <summary>
            Incremental population.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IndexPopulationAction">
            <summary>
            Specifies index population action.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationAction.Full">
            <summary>
            Full population.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationAction.Incremental">
            <summary>
            Incremental population.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationAction.Update">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.BackupSetFlag">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetFlag.MinimalLogData">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetFlag.WithSnapshot">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetFlag.ReadOnlyDatabase">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetFlag.SingleUserModeDatabase">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.BackupSetType">
            <summary>
            Backupset type :
            Full Database, Differential, Log, File or Filegroup
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.Database">
            <summary>
            Full database backupset.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.Differential">
            <summary>
            Differential backupset.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.Incremental">
            <summary>
            Differential backupset. 
            MSSQL doesn't support incremental backup.
            (present here just for backward compatibility.)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.Log">
            <summary>
            T-Log backupset.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.FileOrFileGroup">
            <summary>
            File or Filegroup backupset.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.BackupSetType.FileOrFileGroupDifferential">
            <summary>
            File or Filegroup differential backupset
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus">
            <summary>
            Specifies the population state of a full-text table index.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.None">
            <summary>
            No population</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.Full">
            <summary>
            Full population</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.Incremental">
            <summary>
            Incremental population</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.Manual">
            <summary>
            Manual CT push in progress</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.Background">
            <summary>
            Background CT push in progress</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexPopulationStatus.PausedOrThrottled">
            <summary>
            Paused or Throttled</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ChangeTracking">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ChangeTracking.Off">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ChangeTracking.Automatic">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ChangeTracking.Manual">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ReplicationOptions">
            <summary>
            The ReplicationOptions enum specifies the active replication settings for a database,</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ReplicationOptions.None">
            <summary>
            No options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ReplicationOptions.Published">
            <summary>
            Database is published.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ReplicationOptions.Subscribed">
            <summary>
            Database has subscription.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ReplicationOptions.MergePublished">
            <summary>
            Database is merge published.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ReplicationOptions.MergeSubscribed">
             <summary>
            Database has merge subscription.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PrincipalType">
            <summary>
                Specifies the type of the server or database principal</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.None">
             <summary>
            None.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.Login">
             <summary>
            Login.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.ServerRole">
             <summary>
            Server role.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.User">
             <summary>
            User.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.DatabaseRole">
             <summary>
            Database role.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrincipalType.ApplicationRole">
             <summary>
            Application role.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PrivateKeyEncryptionType">
            <summary>
                Specifies the type of encryption of a key</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrivateKeyEncryptionType.NoKey">
             <summary>
            Returned when certificate does not have a key.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrivateKeyEncryptionType.MasterKey">
             <summary>
            Enrypted with master key.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrivateKeyEncryptionType.Password">
             <summary>
            User password.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PrivateKeyEncryptionType.Provider">
            <summary>
            Encryption by provider.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm">
            <summary>
                Specifies the algorithm used to encrypt a (symmetric) key</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.CryptographicProviderDefined">
            Encryption using Cryptographic Provider
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.RC2">
            in DDL: RC2
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.RC4">
            in DDL: RC4
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.Des">
            in DDL: Des
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.TripleDes">
            in DDL: TripleDes
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.DesX">
            in DDL: DesX
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.Aes128">
            in DDL: Aes_128
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.Aes192">
            in DDL: Aes_192
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.Aes256">
            in DDL: Aes_256
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionAlgorithm.TripleDes3Key">
            in DDL: TRIPLE_DES_3KEY
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm">
            <summary>
             Specifies the algorithm used to encrypt a (asymmetric) key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.CryptographicProviderDefined">
            Encryption using Cryptographic Provider
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.Rsa512">
            in DDL: RSA_512
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.Rsa1024">
            in DDL: RSA_1024
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.Rsa2048">
            in DDL: RSA_2048
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.Rsa3072">
            in DDL: RSA_3072
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AsymmetricKeyEncryptionAlgorithm.Rsa4096">
            in DDL: RSA_4096
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CreateDispositionType">
            <summary>
            Contains the values of CREATION_DISPOSITION option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CreateDispositionType.CreateNew">
            <summary>
            Create New.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CreateDispositionType.OpenExisting">
            <summary>
            Open Existing.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType">
            <summary>
                Specifies the type of encryption of a key.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType.SymmetricKey">
            <summary>
            Encrypted by symmetric key.         </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType.Certificate">
            <summary>
            Encrypted by certificate   </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType.Password">
            <summary>
            Encrypted by password</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType.AsymmetricKey">
            <summary>
            Encrypted by asymmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SymmetricKeyEncryptionType.MasterKey">
            <summary>
            Encrypted by master key.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionAlgorithm">
            <summary>
            Specifies the algorithm used to encrypt the database encryption key
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionAlgorithm.Aes128">
            <summary>
            Aes128 Algorithm
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionAlgorithm.Aes192">
            <summary>
            Aes192 Algorithm
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionAlgorithm.Aes256">
            <summary>
            Aes256 Algorithm
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionAlgorithm.TripleDes">
            <summary>
            TripleDes Algorithm
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SynonymBaseType">
            <summary>
            Specifies the type of base object of a synonym.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.View">
            <summary>
            View
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.SqlStoredProcedure">
            <summary>
            Sql Stored Procedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.SqlScalarFunction">
            <summary>
            Sql Scalar Function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.SqlTableValuedFunction">
            <summary>
            Sql Table-valued Function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.SqlInlineTableValuedFunction">
            <summary>
            Sql Inline-table-valued Function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ExtendedStoredProcedure">
            <summary>
            Extended Stored Procedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ReplicationFilterProcedure">
            <summary>
            Replication-filter-procedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ClrStoredProcedure">
            <summary>
            Assembly (CLR) Stored Procedure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ClrScalarFunction">
            <summary>
            Assembly (CLR) Scalar Function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ClrTableValuedFunction">
            <summary>
            Assembly (CLR) Table-valued Function
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SynonymBaseType.ClrAggregateFunction">
            <summary>
            Assembly (CLR) Aggregate Function
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionType">
            <summary>
            Specifies the encryption type used to encrypt the database encryption key
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionType.ServerCertificate">
            <summary>
            Server Certificate
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionType.ServerAsymmetricKey">
            <summary>
            Server Asymmetric Key
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SequenceCacheType">
            <summary>
            Specifies the cache type of a Sequence object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SequenceCacheType.DefaultCache">
            <summary>
            To use default cache size
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SequenceCacheType.NoCache">
            <summary>
            No cache option
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SequenceCacheType.CacheWithSize">
             <summary>
            To specify the cache size
             </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState">
            <summary>
            Specifies the current encryption transition state of the database
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.None">
            <summary>
            Database encryption not defined
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.Unencrypted">
            <summary>
            Database is unencrypted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.EncryptionInProgress">
            <summary>
            Databse encryption in progress
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.Encrypted">
            <summary>
            Databse is encrypted
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.EncryptionKeyChangesInProgress">
            <summary>
            Database encryption key change in progress
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseEncryptionState.DecryptionInProgress">
            <summary>
            Database Decryption in progress 
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ObjectClass">
             <summary>
            see engine spec: CatalogViewsRef: Appendix  Universal Entity Classes
            The following table represents the domain of entity classes in the system, defined in the header file cmedscan.h.   Entity class usages include:
            sys.database_permissions 
            sys.server_permissions 
            sys.extended_properties 
            included here are only securable objects</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Database">
             <summary>
            Database.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ObjectOrColumn">
             <summary>
            An object (Table, StoredProcedure, etc), or Column.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Schema">
             <summary>
            Schema.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.User">
             <summary>
            User.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.DatabaseRole">
             <summary>
            Database role.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ApplicationRole">
             <summary>
            Application role.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.SqlAssembly">
             <summary>
            Assembly</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.UserDefinedType">
             <summary>
            User Defined Type</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.SecurityExpression">
             <summary>
            Security expression.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.XmlNamespace">
             <summary>
            XML Namespace</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.MessageType">
             <summary>
            Message Type</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ServiceContract">
             <summary>
            Message Contract</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Service">
             <summary>
            Service (Broker)</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.RemoteServiceBinding">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ServiceRoute">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.FullTextCatalog">
             <summary>
            Fulltext Catalog</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.SearchPropertyList">
             <summary>
            Search Property List</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.SymmetricKey">
             <summary>
            SymmetricKey</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Server">
             <summary>
            Server</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Login">
             <summary>
            Login</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ServerPrincipal">
             <summary>
            Login.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ServerRole">
             <summary>
            Server role.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Endpoint">
             <summary>
            Endpoint</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.Certificate">
             <summary>
            Certificate</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.FullTextStopList">
             <summary>
            Full Text Stoplist</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.AsymmetricKey">
             <summary>
            AsymmetricKey</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.AvailabilityGroup">
            <summary>
            AvailabilityGroup</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ExternalDataSource">
            <summary>
            ExternalDataSource</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ObjectClass.ExternalFileFormat">
            <summary>
            ExternalFileFormat</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PageVerify">
            <summary>
            The PageVerify enum specifies the type of integrity check performed on page reads.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PageVerify.None">
            <summary>
            No integrity check will be performed.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PageVerify.TornPageDetection">
            <summary>
                The server will check for torn pages (incomplete I/O operations).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PageVerify.Checksum">
            <summary>
                Server applies a checksum for every page.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringRole">
            <summary>
            Role the database plays in mirroring, one of:
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringRole.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringRole.Principal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringRole.Mirror">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringSafetyLevel">
            <summary>
            Safety guarantee of updates on the backup, one of:
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringSafetyLevel.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringSafetyLevel.Unknown">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringSafetyLevel.Off">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringSafetyLevel.Full">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringOption">
            <summary>
            The MirroringOption enum is used to change the state or a Database mirror.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.Off">
             <summary>
            Terminate database mirroring.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.Suspend">
             <summary>
            Suspend database mirroring.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.Resume">
             <summary>
            Resume database mirroring.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.RemoveWitness">
             <summary>
            Removes the witness.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.Failover">
             <summary>
            Initiate a failover.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringOption.ForceFailoverAndAllowDataLoss">
             <summary>
            Forces a failover</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringStatus">
            <summary>
            Role the database plays in mirroring, one of:
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.Suspended">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.Disconnected">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.Synchronizing">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.PendingFailover">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringStatus.Synchronized">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringWitnessStatus">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringWitnessStatus.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringWitnessStatus.Unknown">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringWitnessStatus.Connected">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MirroringWitnessStatus.Disconnected">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RetentionPeriodUnits">
            <summary>
            Change Tracking Retention Period Units
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RetentionPeriodUnits.None">
            <summary>
            InvalidUnits
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RetentionPeriodUnits.Minutes">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RetentionPeriodUnits.Hours">
            <summary>
            Hours
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RetentionPeriodUnits.Days">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.HttpPortTypes">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpPortTypes.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpPortTypes.Ssl">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpPortTypes.Clear">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpPortTypes.All">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EndpointState">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointState.Started">
            <summary>
            Endpoint is started.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointState.Stopped">
            <summary>
            Endpoint is stopped.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointState.Disabled">
            <summary>
            Endpoint is disabled.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlFormatOption">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlFormatOption.XmlFormat">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlFormatOption.SqlFormat">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XsdSchemaOption">
             <summary>
            Specifies if an XSD schema will be returned for a SOAP method. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XsdSchemaOption.None">
            <summary>
            Do not return an inline XSD schema with the result.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XsdSchemaOption.Standard">
             <summary>
            Return an inline XSD with the result.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ResultFormat">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResultFormat.AllResults">
            <summary>
            Return all results.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResultFormat.RowSets">
            <summary>
            Row sets only.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResultFormat.None">
            <summary>
            Row sets only.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MethodXsdSchemaOption">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MethodXsdSchemaOption.None">
            <summary>
            Do not return an inline XSD schema with the result.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MethodXsdSchemaOption.Standard">
            <summary>
            Return an inline XSD with the result.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MethodXsdSchemaOption.Default">
             <summary>
            Return according to default settings defined at the Endpoint.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.WsdlGeneratorOption">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WsdlGeneratorOption.None">
            <summary>
            Do not generate a WSDL description.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WsdlGeneratorOption.DefaultProcedure">
            <summary>
            Use default WSDL generator.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WsdlGeneratorOption.Procedure">
            <summary>
            Uses a specified procedure for WSDL generation.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PasswordHashAlgorithm">
            <summary>
            Enumerates the hash algorithms that are used to authenticate SQL Login passwords.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PasswordHashAlgorithm.None">
            <summary>
            No special algorithm used.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PasswordHashAlgorithm.SqlServer7">
            <summary>
            Use the SQL7.0 hash algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PasswordHashAlgorithm.ShaOne">
            <summary>
            Use the SHA-1 hash algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PasswordHashAlgorithm.ShaTwo">
            <summary>
            Use the SHA-2 hash algorithm.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ContainmentType">
            <summary>
            Enumerates the containment types of a database.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ContainmentType.None">
            <summary>
            Specifies that the database is not contained.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ContainmentType.Partial">
            <summary>
            Specifies that the database is partially contained.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Anonymous">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Basic">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Digest">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Integrated">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Ntlm">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.Kerberos">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HttpAuthenticationModes.All">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus">
            <summary>
            Reuse of transaction log space is currently waiting on.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Nothing">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Checkpoint">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.LogBackup">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.BackupOrRestore">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Transaction">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Mirroring">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Replication">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.SnapshotCreation">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.LogScan">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LogReuseWaitStatus.Other">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlTypeKind">
            <summary>
            Specifies the kind of xml component
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Any">
            <summary>
            'Any' type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.AnySimple">
            <summary>
            'Any simple' type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Primitive">
            <summary>
            Primitive type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Simple">
            <summary>
            Simple type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.List">
            <summary>
            List type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Union">
            <summary>
            Union type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.ComplexSimple">
            <summary>
            'Complex Simple' type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Complex">
            <summary>
            Complex type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Element">
            <summary>
            Element
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.ModelGroup">
            <summary>
            Model group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.ElementWildcard">
            <summary>
            Element wildcard
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.Attribute">
            <summary>
            Attribute
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.AttributeGroup">
            <summary>
            Attribute group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeKind.AttributeWildcard">
            <summary>
            Attribute wildcard
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RepairOptions">
            <summary>
            Specifies the repair options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.None">
             <summary>
            None.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.AllErrorMessages">
             <summary>
            Displays all reported errors per object.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.ExtendedLogicalChecks">
             <summary>
            Performs logical consistency.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.NoInformationMessages">
             <summary>
            Suppress all informational messages.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.TableLock">
             <summary>
            Obtains lock instead of using an internal database snapshot.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairOptions.EstimateOnly">
             <summary>
            Displays the amount of estimated tempdb space.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RepairStructure">
            <summary>
            Specifies the kind of repair structure
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairStructure.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairStructure.PhysicalOnly">
            <summary>
            Limits the checking to the integrity of the physical structure of the page and record headers.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.RepairStructure.DataPurity">
            <summary>
            Checks the database for the column values that are not valid or out of range.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlTypeDerivation">
            <summary>
            Specifies the xml type derivation
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeDerivation.None">
            <summary>
            Not derived
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeDerivation.Extension">
            <summary>
            Extension
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeDerivation.Restriction">
            <summary>
            Restriction
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlTypeDerivation.Substitution">
            <summary>
            Substitution
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SecondaryXmlIndexType">
            <summary>
            represents the type of the secondary xml index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecondaryXmlIndexType.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecondaryXmlIndexType.Path">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecondaryXmlIndexType.Value">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecondaryXmlIndexType.Property">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IndexedXmlPathType">
             <summary>
             represents the type of indexed path in Selective Xml Index
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexedXmlPathType.XQuery">
             <summary>
            XQuery</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.IndexedXmlPathType.Sql">
             <summary>
            Sql</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EndpointType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointType.Soap">
             <summary>
            SOAP</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointType.TSql">
             <summary>
            TSQL</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointType.ServiceBroker">
             <summary>
            SERVICE_BROKER</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointType.DatabaseMirroring">
             <summary>
            DATABASE_MIRRORING</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EndpointEncryption">
            <summary>
            EndpointEncryption 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryption.Disabled">
            The data sent over the connection is not encrypted
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryption.Supported">
            Data is encrypted if the opposite endpoint specifies either Supported or Required.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryption.Required">
            Encryption is used if the opposite endpoint is either Supported or Required.  
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm">
            <summary>
            EndpointEncryptionAlgorithm
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm.RC4">
            RC4
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm.Aes">
            AES
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm.AesRC4">
            AES RC4
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointEncryptionAlgorithm.RC4Aes">
            RC4 AES
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder">
            <summary>
            The type of connection authentication required for connections to this endpoint.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.Ntlm">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.Kerberos">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.Negotiate">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.Certificate">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.NtlmCertificate">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.KerberosCertificate">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.NegotiateCertificate">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.CertificateNtlm">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.CertificateKerberos">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.EndpointAuthenticationOrder.CertificateNegotiate">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ProtocolType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProtocolType.Http">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProtocolType.Tcp">
            TCP
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProtocolType.NamedPipes">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProtocolType.SharedMemory">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ProtocolType.Via">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerMirroringRole">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerMirroringRole.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerMirroringRole.Partner">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerMirroringRole.Witness">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerMirroringRole.All">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ForeignKeyAction">
            <summary>
            see fk syntax:
            | [ FOREIGN KEY ] 
                REFERENCES [ schema_name . ] referenced_table_name [ ( ref_column ) ] 
                [ ON DELETE { NO ACTION | CASCADE | SET NULL | SET DEFAULT } ] 
                [ ON UPDATE { NO ACTION | CASCADE | SET NULL | SET DEFAULT } ] 
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ForeignKeyAction.NoAction">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ForeignKeyAction.Cascade">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ForeignKeyAction.SetNull">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ForeignKeyAction.SetDefault">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlDocumentConstraint">
            <summary>
            Specifies types of XML document constraints
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlDocumentConstraint.Default">
            <summary>
            Use server default (will not emit CONTENT or DOCUMENT)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlDocumentConstraint.Content">
            <summary>
            An XML fragment.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.XmlDocumentConstraint.Document">
            <summary>
            Restricts an XML instance to a well-formed XML 1.0 instance.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.NSActivationState">
            <summary>
            This enum describes the state of a Notification Service application component. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.NSActivationState.EnablePending">
            <summary>
            The service or execution engine has yet to process the state of being enabled</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.NSActivationState.Enabled">
            <summary>
            The service or execution engine has processed the EnablePending state and is now enabled the component</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.NSActivationState.DisablePending">
            <summary>
            The service or execution engine has yet to process the state of being disabled</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.NSActivationState.Disabled">
            <summary>
            The service or execution engine has processed the DisablePending state and is now disabled the component</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MethodLoginType">
            <summary>
            LoginType of SoapPayloadMethod
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MethodLoginType.Mixed">
            <summary>
            Mixed mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.MethodLoginType.Windows">
            <summary>
            Windows authentication mode.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuditLevel">
            The AuditLevel property exposes SQL Server Authentication logging behavior.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditLevel.None">
            Do not log authentication attempts
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditLevel.Success">
            Log successful authentication
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditLevel.Failure">
            Log failed authentication 
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditLevel.All">
            Log all authentication attempts regardless of success or failure
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PerfMonMode">
            <summary>
            Specifies the mode in which PerfMon works
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PerfMonMode.None">
            No PerfMon Integration
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PerfMonMode.Continuous">
            Report PerfMon data continuously
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PerfMonMode.OnDemand">
            Report PerfMon data on demand
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.WorkloadGroupImportance">
            <summary>
            Specifies the Importance Type for Resource Governor Workload group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WorkloadGroupImportance.Low">
            <summary>
            Importance for workload group is Low
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WorkloadGroupImportance.Medium">
            <summary>
            Importance for workload group is Medium
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.WorkloadGroupImportance.High">
            <summary>
            Importance for workload group is High
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.FileStreamLevel">
            <summary>
            Filestream level options
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileStreamLevel.Disabled">
            Disabled
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileStreamLevel.TSqlAccess">
            T-SQL access only
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileStreamLevel.TSqlLocalFileSystemAccess">
            T-SQL and local File system access
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileStreamLevel.TSqlFullFileSystemAccess">
            T-SQL and full File system access
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PlanGuideType">
            <summary>
            Type of plan guide
            </summary>    
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PlanGuideType.Object">
            Object
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PlanGuideType.Sql">
            Sql
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PlanGuideType.Template">
            Template
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuditDestinationType">
            <summary>
            Specifies the destination type of an Audit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditDestinationType.File">
            <summary>
            Write to file
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditDestinationType.SecurityLog">
            <summary>
            Write to security log
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditDestinationType.ApplicationLog">
            <summary>
            Write to application log
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit">
            <summary>
            Specifies the unit of file size
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit.Mb">
            <summary>
            File size in MB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit.Gb">
            <summary>
            File size in GB
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditFileSizeUnit.Tb">
            <summary>
            File size in TB
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.OnFailureAction">
            <summary>
            Specifies the action that needs to be taken when the audit sink cannot perform the write
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.OnFailureAction.Continue">
            <summary>
            Audit should continue running
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.OnFailureAction.Shutdown">
            <summary>
            Audit should shut down
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.OnFailureAction.FailOperation">
            <summary>
            User operation causing failure will fail. No event loss
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuditStatusType">
            <summary>
            Specifies the state of the Audit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditStatusType.Started">
            <summary>
            Audit is running
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditStatusType.Stopped">
            <summary>
            Audit is stopped
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditStatusType.Failed">
            <summary>
            Audit failed and stopped
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuthenticationType">
            <summary>
            Specifies the authentication type of the database principals
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuthenticationType.None">
            <summary>
            Specifies a SQL user without a login, a user mapped with a certificate, or a user mapped
            with an asymmetric key.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuthenticationType.Instance">
            <summary>
            Specifies that the user is mapped to a login.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuthenticationType.Database">
            <summary>
            Specifies that the user has a password.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuthenticationType.Windows">
            <summary>
            Specifies that the user is a Windows user or group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuthenticationType.External">
            <summary>
            Specifies that the user is a External user or group.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AuditActionType">
            <summary>
            Specifies the type of action for sql server audit events
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ApplicationRoleChangePasswordGroup">
            <summary>
            APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.AuditChangeGroup">
            <summary>
            AUDIT_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.BackupRestoreGroup">
            <summary>
            BACKUP_RESTORE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.BrokerLoginGroup">
            <summary>
            BROKER_LOGIN_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseChangeGroup">
            <summary>
            DATABASE_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseLogoutGroup">
            <summary>
            DATABASE_LOGOUT_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseMirroringLoginGroup">
            <summary>
            DATABASE_MIRRORING_LOGIN_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseObjectAccessGroup">
            <summary>
            DATABASE_OBJECT_ACCESS_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseObjectChangeGroup">
            <summary>
            DATABASE_OBJECT_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseObjectOwnershipChangeGroup">
            <summary>
            DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseObjectPermissionChangeGroup">
            <summary>
            DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseOperationGroup">
            <summary>
            DATABASE_OPERATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseOwnershipChangeGroup">
            <summary>
            DATABASE_OWNERSHIP_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabasePermissionChangeGroup">
            <summary>
            DATABASE_PERMISSION_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabasePrincipalChangeGroup">
            <summary>
            DATABASE_PRINCIPAL_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabasePrincipalImpersonationGroup">
            <summary>
            DATABASE_PRINCIPAL_IMPERSONATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DatabaseRoleMemberChangeGroup">
            <summary>
            DATABASE_ROLE_MEMBER_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.DbccGroup">
            <summary>
            DBCC_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Delete">
            <summary>
            DELETE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Execute">
            <summary>
            EXECUTE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.FailedDatabaseAuthenticationGroup">
            <summary>
            FAILED_DATABASE_AUTHENTICATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.FailedLoginGroup">
            <summary>
            FAILED_LOGIN_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.FullTextGroup">
            <summary>
            FULLTEXT_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.GlobalTransactionsLoginGroup">
            <summary>
            GLOBAL_TRANSACTIONS_LOGIN_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Insert">
            <summary>
            INSERT
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.LoginChangePasswordGroup">
            <summary>
            LOGIN_CHANGE_PASSWORD_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.LogoutGroup">
            <summary>
            LOGOUT_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Receive">
            <summary>
            RECEIVE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.References">
            <summary>
            REFERENCES
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SchemaObjectAccessGroup">
            <summary>
            SCHEMA_OBJECT_ACCESS_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SchemaObjectChangeGroup">
            <summary>
            SCHEMA_OBJECT_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SchemaObjectOwnershipChangeGroup">
            <summary>
            SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SchemaObjectPermissionChangeGroup">
            <summary>
            SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Select">
            <summary>
            SELECT
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerObjectChangeGroup">
            <summary>
            SERVER_OBJECT_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerObjectOwnershipChangeGroup">
            <summary>
            SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerObjectPermissionChangeGroup">
            <summary>
            SERVER_OBJECT_PERMISSION_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerOperationGroup">
            <summary>
            SERVER_OPERATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerPermissionChangeGroup">
            <summary>
            SERVER_PERMISSION_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerPrincipalChangeGroup">
            <summary>
            SERVER_PRINCIPAL_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerPrincipalImpersonationGroup">
            <summary>
            SERVER_PRINCIPAL_IMPERSONATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerRoleMemberChangeGroup">
            <summary>
            SERVER_ROLE_MEMBER_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.ServerStateChangeGroup">
            <summary>
            SERVER_STATE_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SuccessfulDatabaseAuthenticationGroup">
            <summary>
            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.SuccessfulLoginGroup">
            <summary>
            SUCCESSFUL_LOGIN_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.TraceChangeGroup">
            <summary>
            TRACE_CHANGE_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.Update">
            <summary>
            UPDATE
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.UserChangePasswordGroup">
            <summary>
            USER_CHANGE_PASSWORD_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.UserDefinedAuditGroup">
            <summary>
            USER_DEFINED_AUDIT_GROUP
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AuditActionType.TransactionGroup">
            <summary>
            TRANSACTION_GROUP
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.FilestreamNonTransactedAccessType">
            <summary>
            Filestream non-transacted access type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FilestreamNonTransactedAccessType.Off">
            <summary>
            No access
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FilestreamNonTransactedAccessType.ReadOnly">
            <summary>
            Read-Only access
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FilestreamNonTransactedAccessType.Full">
            <summary>
            Read-Write access
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState">
            <summary>
            A rollup of the synchronization states of the availability replicas in the availability group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState.NoneSynchronizing">
            <summary>
            None of the availability replicas is synchronizing.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState.PartiallySynchronizing">
            <summary>
            At least one of the replicas is in "synchronizing" state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState.AllSynchronizing">
            <summary>
            All of the replicas are in "synchronizing" state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState.AllSynchronized">
            <summary>
            All of the replicas are in "synchronized" state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationState.Unknown">
            <summary>
            The synchronization state is unknown, this would be the case if the property is viewed on a secondary replica
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.HadrManagerStatus">
            <summary>
            The status of the HADR Manager Service
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HadrManagerStatus.PendingCommunication">
            <summary>
            The manager service hasn't started, pending communication.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HadrManagerStatus.Running">
            <summary>
            The manager service is up and running.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.HadrManagerStatus.Failed">
            <summary>
            The manager service has failed, is not running.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState">
            <summary>
            The state of the replica's readiness to process client requests for all databases replicas in the availability group residing on it.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.PendingFailover">
            <summary>
            A failover command is in progress, the replica cannot receive client requests.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.Pending">
            <summary>
            The replica is pending a switch to primary role. This is a transient state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.Online">
            <summary>
            The replica is ready to client requests.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.Offline">
            <summary>
            The availability group currently has no primary, the replica cannot receive client requests.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.Failed">
            <summary>
            The replica is unable to communicate with the Windows cluster, the replica cannot receive client requests.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.FailedNoQuorum">
            <summary>
            The availability group has lost quorum, the replica cannot receive client requests.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalState.Unknown">
            <summary>
            The operational state of this replica is unknown, the availability replica object referes to a remote instance.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryState">
            <summary>
            Represents a rollup of the recovery state of all database replicas in the availability group that reside on this availability replica.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryState.InProgress">
            <summary>
            At least one of the database replicas' state is not online.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryState.Online">
            <summary>
            All the database replicas' states are online.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryState.Unknown">
            <summary>
            The recovery health state of this replica is unknown, the availability replica object referes to a remote instance.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationState">
            <summary>
            The current synchronization state of the availability replica. This is based on the synchronization states of database
            replicas in the availaiblity group residing on the instance.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationState.NotSynchronizing">
            <summary>
            At least one database replica on is not synchronizing with the primary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationState.Synchronizing">
            <summary>
            All database replicas are at least synchronizing with the primary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationState.Synchronized">
            <summary>
            All database replicas are synchronized with the primary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationState.Unknown">
            <summary>
            The synchronization state of the replica is unknown. This will be the case for a remote secondary replica
            if the property is accessed from another secondary.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRole">
            <summary>
            The current role a replica is playing in an availability group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRole.Resolving">
            <summary>
            The replica is in a resolving state
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRole.Primary">
            <summary>
            The replica is the current primary in the availability group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRole.Secondary">
            <summary>
            The replica is a secondary in the availability group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRole.Unknown">
            <summary>
            The replica is in an unknown state.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionState">
            <summary>
            The current connection state of an availability replica.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionState.Disconnected">
            <summary>
            The replica is not currently connected to the primary (could be an indication of a communication issue).
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionState.Connected">
            <summary>
            The replica is currently connected to the primary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionState.Unknown">
            <summary>
            The replica connection state is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRole">
            <summary>
            Connection intent modes of an Availability Replica in primary role
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRole.AllowAllConnections">
            <summary>
            The availability replica in primary role will allow all connections
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRole.AllowReadWriteConnections">
            <summary>
            The availability replica in primary role will allow read/write connections
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRole.Unknown">
            <summary>
            The availability replica in the primary role is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRole">
            <summary>
            Connection intent modes of an Availability Replica in secondary role
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRole.AllowNoConnections">
            <summary>
            The availability replica in secondary role will not allow any connections
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRole.AllowReadIntentConnectionsOnly">
            <summary>
            The availability replica in secondary role will allow only read-intent connections
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRole.AllowAllConnections">
            <summary>
            The availability replica in secondary role will allow all connections.
            This is for client connections unaware of the availability replica participation in an availability group.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRole.Unknown">
            <summary>
            The availability replica in the secondary role is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaSeedingMode">
            <summary>
            Seeding mode of Availability Replica
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaSeedingMode.Automatic">
            <summary>
            Automatic mode
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaSeedingMode.Manual">
            <summary>
            Manual Mode
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinState">
            <summary>
            The join state of an Availability Replica
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinState.NotJoined">
            <summary>
            The replica is not joined.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinState.JoinedStandaloneInstance">
            <summary>
            The replica is a joined standalone instance.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinState.JoinedFailoverClusterInstance">
            <summary>
            The replica is a joined SQL Server Failover Cluster Instance.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinState.Unknown">
            <summary>
            The join state is unknown.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState">
            <summary>
            State of the Availability Group Listener IP Address
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState.Offline">
            <summary>
            Availability Group Listener IP resources is online
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState.Online">
            <summary>
             Availability Group Listener IP resources is offline
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState.OnlinePending">
            <summary>
             Availability Group Listener IP resources is online pending
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState.Failure">
            <summary>
             Availability Group Listener IP resources failed
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPState.Unknown">
            <summary>
            unknown state for Availability Group Listener IP resources
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityMode">
            <summary>
            Availability modes of Availability Replica
            The int value has to match the values defined by the engine, can be found here:
            https://docs.microsoft.com/en-us/sql/relational-databases/system-catalog-views/sys-availability-replicas-transact-sql
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityMode.AsynchronousCommit">
            <summary>
            The availability mode is ASynchronous Commit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityMode.SynchronousCommit">
            <summary>
            The availability mode is Synchronous Commit
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityMode.ConfigurationOnly">
            <summary>
            The availability mode is Configuration Only
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityMode.Unknown">
            <summary>
            The availability mode is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverMode">
            <summary>
            Failover modes of Availability Replica
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverMode.Automatic">
            <summary>
            The failover mode is automatic
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverMode.Manual">
            <summary>
            The failover mode is manual
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverMode.External">
            <summary>
            The failover mode is external, this is only applicable to External cluster type.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverMode.Unknown">
            <summary>
            The failover mode is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState">
            <summary>
            The different synchronization states a database participating in an HADR Availability Group can be in.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState.NotSynchronizing">
            <summary>
            The primary is not pushing data to the secondary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState.Synchronizing">
            <summary>
            Data movement is happening between the primary and the secondary. This will 
            be the state even if there is currently no data to be sent between the two.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState.Synchronized">
            <summary>
            The database replica is synchronized with the primary.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState.Reverting">
            <summary>
            The database replica is reverting after a failover.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationState.Initializing">
            <summary>
            The database replica is initializing after a failover.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason">
            <summary>
            The different reasons for a database replica to be in suspended state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromUser">
            <summary>
            User initiated suspend command.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromPartner">
            <summary>
            Partner initiated suspend command.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromRedo">
            <summary>
            The database replica is currently in redo mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromApply">
            <summary>
            The database replica is currently in apply mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromCapture">
            <summary>
            The database replica is currently in capture mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromRestart">
            <summary>
            The database replica is restarting.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.SuspendFromUndo">
            <summary>
            The database replica is currently in undo mode.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReason.NotApplicable">
            <summary>
            The database is not suspended.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterQuorumType">
            <summary>
            The different types of ways a cluster can decide on a quorum
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumType.NodeMajority">
            <summary>
            Quorum is decided by node majority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumType.NodeAndDiskMajority">
            <summary>
            Quorum is decided by node and disk majority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumType.NodeAndFileshareMajority">
            <summary>
            Quorum is decided by node and fileshare majority
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumType.DiskOnly">
            <summary>
            Quorum is decided by disk only vote
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumType.NotApplicable">
            <summary>
            The server is not in a Windows Cluster
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterQuorumState">
            <summary>
            The current stat of the cluster quorum
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumState.UnknownQuorumState">
            <summary>
            Cluster has unknown quorum
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumState.NormalQuorum">
            <summary>
            Cluster has quorum
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumState.ForcedQuorum">
            <summary>
            Cluster is in forced quorum state
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterQuorumState.NotApplicable">
            <summary>
            The server is not in a windows cluster
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterMemberType">
            <summary>
            The type of node in the windows cluster
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberType.Node">
            <summary>
            A node member
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberType.DiskWitness">
            <summary>
            A disk witness member
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberType.FileshareWitness">
            <summary>
            A fileshare witness member
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterMemberState">
            <summary>
            The state of a member in a Windows Cluster.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberState.Offline">
            <summary>
            The member is offline.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberState.Online">
            <summary>
            The member is online.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberState.PartiallyOnline">
            <summary>
            The member is online.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ClusterMemberState.Unknown">
            <summary>
            The member is unknown
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference">
            <summary>
            This enumeration specifies how replicas in the primary role are treated in the evaluation to pick the desired replica to perform a backup.  
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference.Primary">
            <summary>
            Backups occur only on the primary replica, wherever it is.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference.SecondaryOnly">
            <summary>
            Backups occur only on the secondary replicas. If no secondary replicas are online, backup will not be performed.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference.Secondary">
            <summary>
            Backups occur on the secondary replicas, except when the primary replica is the only replica online.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference.None">
            <summary>
            No preference is stated for backup on replicas based on its current role. Only BackupPriority and online/connected states will be considered for replica choice.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreference.Unknown">
            <summary>
            The automated backup preference is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel">
            <summary>
            The different conditions that can trigger an automatic failover in an Availability Group.
            These setting are cumulative, meaning that as the setting increases in value it encompases all the previous conditions
            and adds extra ones.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.OnServerDown">
            <summary>
            Automatic failover is triggered when the SQL Server service is down.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.OnServerUnresponsive">
            <summary>
            Automatic failover is triggered when SQL Server is down or unresponsive, or when the Avaialbility Group's primary replica is in a failed state.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.OnCriticalServerErrors">
            <summary>
            Automatic failover is triggered when any condition level of lower value is satisfied or when a critical server error occurs.
            If no setting for an Availability Group is specified, this is the default value.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.OnModerateServerErrors">
            <summary>
            Automatic failover is triggered when any condition level of lower value is satisfied or when a moderate server error occurs.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.OnAnyQualifiedFailureCondition">
            <summary>
            Automatic failover is triggered when any condition level of lower value is satisfied or when a qualifying failure condition occurs.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevel.Unknown">
            <summary>
            The failure condition level is unknown. The replica may not be able to communicate with the cluster or quorum may not be set across the Windows Server Failover Cluster.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupClusterType">
            <summary>
            Cluster type of the Availability Group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupClusterType.Wsfc">
            <summary>
            The availability group is stored in WSFC.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupClusterType.None">
            <summary>
            The availability group is cluster-independent.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.AvailabilityGroupClusterType.External">
            <summary>
            The availability group uses external cluster solutions.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.FileGroupType">
            <summary>
            Type of a filegroup file
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGroupType.RowsFileGroup">
            <summary>
            Standard rows file group
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGroupType.FileStreamDataFileGroup">
            <summary>
            A FileGroup used for file stream data
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.FileGroupType.MemoryOptimizedDataFileGroup">
            <summary>
            A FileGroup used for memory optimized data
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SecurityPredicateType">
            <summary>
            Security predicate type
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateType.Filter">
            <summary>
            A filter predicate.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateType.Block">
            <summary>
            A block predicate.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation">
            <summary>
            Security predicate operation types
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation.All">
            <summary>
            Predicate is applied for all applicable operations.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation.AfterInsert">
            <summary>
            Predicate is applied after insert operations.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation.AfterUpdate">
            <summary>
            Predicate is applied after update operations.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation.BeforeUpdate">
            <summary>
            Predicate is applied before update operations.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.SecurityPredicateOperation.BeforeDelete">
            <summary>
            Predicate is applied before delete operations.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseScopedConfigurationOnOff">
            <summary>
            Database Scoped Configuration on and off states.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseScopedConfigurationOnOff.Off">
            <summary>
            Off.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseScopedConfigurationOnOff.On">
            <summary>
            On.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseScopedConfigurationOnOff.Primary">
            <summary>
            Follow the same value as the primary (only applicable to secondaries).
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ResumableOperationStateType">
            <summary>
            Resumable Operation State: Running, Paused, None.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResumableOperationStateType.Running">
            <summary>
            Running.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResumableOperationStateType.Paused">
            <summary>
            Paused.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ResumableOperationStateType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit">
            <summary>
            Temporal retention period unit description
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Undefined">
            <summary>
            Retention undefined - non-temporal table
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Infinite">
            <summary>
            Infinite (not specified) retention
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Week">
            <summary>
            Week
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.TemporalHistoryRetentionPeriodUnit.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.CatalogCollationType">
            <summary>
            Catalog Collation Type values.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogCollationType.DatabaseDefault">
            <summary>
            Database Default, metadata Collation matches the data collation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogCollationType.ContainedDatabaseFixedCollation">
            <summary>
            Fixed Contained database metadata collation.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.CatalogCollationType.SQLLatin1GeneralCP1CIAS">
            <summary>
            Fixed SQL_Latin1_General_CP1_CI_AS metadata collation.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.ActivationOrder">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.ActivationOrder.First">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.ActivationOrder.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.ActivationOrder.Last">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.AgentLogLevels">
            <summary>
            specifies the level of information that is logged in the SQL Server Agent error log.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentLogLevels.Errors">
            <summary>
            Log errors.     </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentLogLevels.Warnings">
            <summary>
            Log warning messages.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentLogLevels.Informational">
            <summary>
            Log informational messages.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentLogLevels.All">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.AgentMailType">
            <summary>
            Specifies mail subsystems that can be used by SqlAgent
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentMailType.SqlAgentMail">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentMailType.DatabaseMail">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem">
            <summary>
            Since proxy accounts are tightly coupled with SQL Agent subsystems and we don't have a special 
            SubSystem object, but rather an enum.
            The values of this enum must match the service_id value from the engine
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.TransactSql">
            <summary>
            Starting from 1 since that's how sp_enum_sqlagent_subsystems returns it
            Transact-SQL script (T-SQL)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.ActiveScripting">
            <summary>
            ActiveX Scripting
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.CmdExec">
            <summary>
            Operating system (CmdExec)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.Snapshot">
            <summary>
            Replication snapshot
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.LogReader">
            <summary>
            Replication Transaction-Log reader
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.Distribution">
            <summary>
            Replication Distributor
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.Merge">
            <summary>
            Replication Merge
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.QueueReader">
            <summary>
            Replication Queue Reader
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.AnalysisQuery">
            <summary>
            SQL Server Analysis Services query
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.AnalysisCommand">
            <summary>
            SQL Servier Analysis Services Command
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.Ssis">
            <summary>
            SQL Server Integration Services package
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AgentSubSystem.PowerShell">
            <summary>
            PowerShell subsystem
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.AlertType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AlertType.SqlServerEvent">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AlertType.SqlServerPerformanceCondition">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AlertType.NonSqlServerEvent">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.AlertType.WmiEvent">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.CategoryType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CategoryType.LocalJob">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CategoryType.MultiServerJob">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CategoryType.None">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.CompletionAction">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionAction.Never">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionAction.OnSuccess">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionAction.OnFailure">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionAction.Always">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.Failed">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.Succeeded">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.Retry">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.Cancelled">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.InProgress">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.CompletionResult.Unknown">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals">
            Note that this enum's values MUST match the definition of enum MonthRelativeInterval in native
            code, defined in qsched.h and used by SqlAgent.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals.First">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals.Second">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals.Third">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals.Fourth">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyRelativeIntervals.Last">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes">
            Note that this enum's values MUST match the definition of enum FreqSubTypes in native
            code, defined in qsched.h and used by SqlAgent.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes.Hour">
            <summary>
            Schedule reflects an activity scheduled using an hour as the unit. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes.Minute">
            <summary>
            Schedule reflects an activity scheduled using a minute as the unit. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes.Second">
            <summary>
            Schedule reflects an activity scheduled using a second as the unit. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes.Once">
            <summary>
            Schedule reflects an activity that occurs once on a scheduled unit. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencySubDayTypes.Unknown">
            <summary>
            Subunits are invalid for the scheduled activity. </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes">
            Note that this enum's values MUST match the definition of enum FreqTypes in native
            code, defined in qsched.h and used by SqlAgent.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.AutoStart">
            <summary>
            Scheduled activity is started when SQL Server Agent service starts. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.Daily">
            <summary>
            Schedule is evaluated daily. This has special handling for sub-day types; see the
            FrequencySubDayTypes enum above that let the schedule run on a second/minute/hour
            basis during a single day. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.Monthly">
            <summary>
            Schedule is evaluated monthly. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.MonthlyRelative">
            <summary>
            Schedule is evaluated relative to a part of a month, such as the second week. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.OneTime">
            <summary>
            Scheduled activity will occur once at a scheduled time or event. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.OnIdle">
            <summary>
            SQL Server Agent service will schedule the activity for any time during which the processor is idle. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.Unknown">
            <summary>
            No schedule frequency, or frequency not applicable. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.FrequencyTypes.Weekly">
            <summary>
            Schedule is evaluated weekly. </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.Executing">
               
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.WaitingForWorkerThread">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.BetweenRetries">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.Idle">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.Suspended">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.WaitingForStepToFinish">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobExecutionStatus.PerformingCompletionAction">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome.Cancelled">
            <summary>
            Execution canceled by user action. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome.Failed">
            <summary>
            Execution failed. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome.InProgress">
            <summary>
            Job or job step is executing. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome.Succeeded">
            <summary>
            Execution succeeded. </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobOutcome.Unknown">
            <summary>
            Unable to determine execution state. </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.JobServerType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobServerType.Standalone">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobServerType.Tsx">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobServerType.Msx">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags">
            <summary>
            controls parts of the behavior of the job step
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.AppendToLogFile">
            <summary>
            Appends the job output (if any) to the log file, if any log file 
            has been specified. If not set, the log file is overwritten
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.AppendToJobHistory">
            <summary>
            appends step output to the job history table (sysjobhistory)
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.LogToTableWithOverwrite">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.AppendToTableLog">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.AppendAllCmdExecOutputToJobHistory">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobStepFlags.ProvideStopProcessEvent">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.JobType">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobType.Local">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.JobType.MultiServer">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods.None">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods.NotifyEmail">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods.Pager">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods.NetSend">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.NotifyMethods.NotifyAll">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority">
            <summary>
            controls execution thread scheduling for job steps executing operating system tasks</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority.AboveNormal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority.BelowNormal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority.Idle">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority.Normal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.OSRunPriority.TimeCritical">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.StepCompletionAction">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.StepCompletionAction.QuitWithSuccess">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.StepCompletionAction.QuitWithFailure">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.StepCompletionAction.GoToNextStep">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.StepCompletionAction.GoToStep">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.TargetServerStatus">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.TargetServerStatus.Normal">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.TargetServerStatus.SuspectedOffline">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.TargetServerStatus.Blocked">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.WeekDays">
            Note that this enum's values MUST match the definition of enum SchDayOfWeek in native
            code, defined in qsched.h and used by SqlAgent.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Sunday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Monday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Tuesday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Wednesday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Thursday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Friday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.Saturday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.EveryDay">
            The native enum SchDayOfWeek ends with Saturday. The following values are not part of
            the native enum and are added to SMO as a convenience of AND'd bitfields.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.WeekDays">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.WeekDays.WeekEnds">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays">
            Note that this enum's values MUST match the definition of enum MonthRelativeTypes in native
            code, defined in qsched.h and used by SqlAgent.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Sunday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Monday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Tuesday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Wednesday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Thursday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Friday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.Saturday">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.EveryDay">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.WeekDays">
            
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Agent.MonthlyRelativeWeekDays.WeekEnds">
            
        </member>
        <member name="T:Microsoft.SqlServer.Management.Dmf.PolicyHealthState">
            <summary>
            This enum is used to represent the policy health states.
            Note: We only use Critical and Unknown for now.
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyHealthState.Unknown">
            Not enough information is available for this target.
        </member>
        <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyHealthState.Critical">
            The target is in violation of one or more policies
        </member>
        <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyHealthState.Healthy">
            The target is confirmed to be healthy
        </member>
        <member name="F:Microsoft.SqlServer.Management.Dmf.PolicyHealthState.NoPolicy">
            There is no policy that controls this target
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EventSetBase">
            <summary>
            Abstract class for all Event classes.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.#ctor">
             <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.#ctor(Microsoft.SqlServer.Management.Smo.EventSetBase)">
             <summary>
            copy constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.Copy">
             <summary>
            copy</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.SetBitAt(System.Int32,System.Boolean)">
             <summary>
            set bit at idx with value</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.GetBitAt(System.Int32)">
             <summary>
            get teh value of bit at idx</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.SetValue(Microsoft.SqlServer.Management.Smo.EventSetBase,System.Boolean)">
             <summary>
            set value</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.FitsMask(Microsoft.SqlServer.Management.Smo.EventSetBase)">
             <summary>
            true if fits the mask</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EventSetBase.HasCommonBits(Microsoft.SqlServer.Management.Smo.EventSetBase)">
            <summary>
            returns true if this and optCompare have common options that are set</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.EventSetBase.Storage">
             <summary>
            bit storage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.EventSetBase.NumberOfElements">
             <summary>
            number of elements</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ExecuteSql">
             <summary>
            this class is used to execute tsql 
            it is the only way tsql gets executed by the enumerator
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.#ctor(System.Object)">
             <summary>
            init connection trying to cast con
            to one of the supported connection types</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.#ctor(System.Object,System.String,System.Boolean)">
             <summary>
            init connection trying to cast con
            to one of the supported connection types</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.Connect">
             <summary>
            establish connection if not already connected</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.Disconnect">
             <summary>
            disconnect if the connection was initially disconnected</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.InitConnection(System.Object)">
             <summary>
            init connection trying to cast con
            to one of the supported connection types</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.StartCapture">
             <summary>
            start capturing messages</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.RecordMessage(System.Object,System.Data.SqlClient.SqlInfoMessageEventArgs)">
             <summary>
            record a message</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ClearCapture">
             <summary>
            stop capturing messages, return what was captured</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.TryToReconnect(Microsoft.SqlServer.Management.Common.ExecutionFailureException)">
             <summary>
             if execution failed with connection error try to reconnect
             try only once as MDAC resets the connection pool after a connection error
            so we are garanteed to make a genuine attempt to reconnect instead af taking an already 
            invalid connection from the pool
            return true if success</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteImmediate(System.String)">
             <summary>
            execute a query without results</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteWithResults(System.String)">
             <summary>
            excute a query and return a DataTable with the results</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDataReader(System.String,System.Data.SqlClient.SqlCommand@)">
            <summary>
            Execute a query and get a DataReader for the results.
            </summary>
            <param name="query">The query text before any parameterization or caching checks.</param>
            <param name="command">The SqlCommand to use in case cancelling remaining reader processing is needed.</param>
            <returns>The data reader.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDataReader(System.String)">
            <summary>
            Execute a query and get a DataReader for the results.
            </summary>
            <param name="query">The query text before any parameterization or caching checks.</param>
            <returns>The data reader.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetServerVersion">
             <summary>
            return the ServerVersion</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDatabaseEngineType">
             <summary>
            return the DatabaseEngineType</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDatabaseEngineEdition">
             <summary>
            return the DatabaseEngineEdition for the connection</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.IsContainedAuthentication">
             <summary>
            returns if authentication is contained</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteImmediateGetMessage(System.String,System.Object)">
             <summary>
            execute the sql for ther given connection without returning results
            but capturing the messages</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteImmediate(System.String,System.Object)">
             <summary>
            execute the sql for ther given connection without returning results</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteWithResults(System.String,System.Object)">
            <summary>
            Executes the specified query using the specified connection object
            </summary>
            <param name="query"></param>
            <param name="con"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteWithResults(System.String,System.Object,System.String,System.Boolean)">
            <summary>
            Executes the specified query against a target database using the specified connection. Optionally
            allows specifying whether connection pooling is used. 
            </summary>
            <param name="query"></param>
            <param name="con"></param>
            <param name="database"></param>
            <param name="poolConnection"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteWithResults(System.Collections.Specialized.StringCollection,System.Object,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
             <summary>
            execute the sql for ther given connection returning results in a DataTable
            this is a tsql for final results 
            StatementBuilder holds info for additional processing needs and formating information
            the first tsqls in the list are executed without resulst, results are taken only for the last tsql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDataProvider(System.Collections.Specialized.StringCollection,System.Object,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
             <summary>
            execute the sql for ther given connection returning results in a DataProvider
            this is a tsql for final results 
            StatementBuilder holds info for additional processing needs and formating information
            the first tsqls in the list are executed without resulst, 
             results are taken only for the last tsql		
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDataProvider(System.Collections.Specialized.StringCollection,System.Object,Microsoft.SqlServer.Management.Smo.StatementBuilder,Microsoft.SqlServer.Management.Smo.DataProvider.RetriveMode)">
             <summary>
            execute the sql for ther given connection returning results in a DataProvider
            this is a tsql for final results 
            StatementBuilder holds info for additional processing needs and formating information
            DataProvider.RetriveMode tells if the DataProvider must bring all rows 
             in a DataTable or be prepared to be used as a DataReader 
             the first tsqls in the list are executed without resulst, results are 
             taken only for the last tsql
             </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.ExecuteWithResults(System.Collections.Specialized.StringCollection,System.Object)">
             <summary>
            execute tsql for the given connection and return the results in the DataTable</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetServerVersion(System.Object)">
             <summary>
            return the server version for the server with the given connection</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDatabaseEngineType(System.Object)">
             <summary>
            return the database engine type for the server with the given connection</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetDatabaseEngineEdition(System.Object)">
             <summary>
            return the database engine edition for the given connection</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.IsContainedAuthentication(System.Object)">
            <summary>
            returns if the connection's authentication is contained or not.
            </summary>
            <param name="con"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ExecuteSql.GetIsDatabaseAccessibleNoThrow(System.Object,System.String)">
            <summary>
            Checks whether the specified database is accessible to the user. If an error occurs
            it will not throw - returning FALSE instead
            </summary>
            <param name="con">The connection object</param>
            <param name="databaseName">The name of the database to check</param>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabasePermissionSetValue">
            <summary>
             Enum containing all possible DatabasePermissions
             use sys.fn_builtin_permissions to see the latest values on new versions of SQL
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ObjectPermissionSetValue">
            <summary>enum containing all possible ObjectPermissions</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerPermissionSetValue">
            <summary>enum containing all possible ServerPermissions</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PermissionDecode">
            <summary>encapsulates functions that translate from sql codes into enum used to represent the permissions</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PermissionDecode.permissionTypeToEnumMapping">
            <summary>
            Used to cache the Permission Type -> enum values mappings. We're only caching this mapping because this one
            requires iterating through all of the values of the specified enum type and so can get expensive with all
            the reflection lookups. The other methods in this class work on a single instance of an enum value so the
            cost is much smaller and not worth the overhead of the caching. 
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PermissionDecode.ToPermissionSetValueEnum``1(System.String)">
            <summary>Translates a Permission Type name (from the type column in sys.database_permissions/sys.server_permissions)
             into the corresponding <see cref="T:Microsoft.SqlServer.Management.Smo.DatabasePermissionSetValue"/></summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PermissionDecode.PermissionCodeToPermissionName``1(System.Int32)">
            <summary>
            Converts a permission code (enum value) to the corresponding Permission Name
            </summary>
            <typeparam name="T"></typeparam>
            <param name="permissionCode"></param>
            <returns>The Permission Name if the enum value exists and has the attribute defined, throws an exception if not</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PermissionDecode.PermissionCodeToPermissionType``1(System.Int32)">
            <summary>
            Converts a permission code (enum value) to the corresponding Permission Type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="permissionCode"></param>
            <returns>The Permission Type if the enum value exists and has the attribute defined, String.Empty if not</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PermissionDecode.PermissionName``1(``0)">
            <summary>
            Gets the value of the PermissionName attribute for the specified enum value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="val"></param>
            <returns>The value of the PermissionName attribute, empty string if there is no such attribute</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PermissionDecode.PermissionType``1(``0)">
            <summary>
            Gets the value of the PermissionType attribute for the specified enum value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="val"></param>
            <returns>The value of the PermissionType attribute, empty string if there is no such attribute</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.StringValueAttribute">
            <summary>
            Simple attribute class for storing String Values
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StringValueAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.SqlServer.Management.Smo.StringValueAttribute"/> instance.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StringValueAttribute.Value">
            <summary>
            Gets the value.
            </summary>
            <value></value>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PermissionTypeAttribute">
            <summary>
            Attribute for marking the Permission type of the marked permission (the short code
            name from the type column in sys.database_permissions/sys.server_permissions, e.g. CO)
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PermissionNameAttribute">
            <summary>
            Attribute for marking the Permission "name" of the marked permission (the permission_name
            column in sys.database_permissions/sys.server_permissions)
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PostProcess">
             <summary>
            base class for the post process classes
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.#ctor">
             <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.HitFieldsCount">
             <summary>
            number of fields determined this post process to fire</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetIsFieldHit(System.String)">
             <summary>
            true is field caused this post process to fire</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.IsLookupInit">
             <summary>
            true if the lookup name-id has been init for triggered fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.CheckDataReaderSupport">
             <summary>
            throw exception if DataReader is not supported as the Request
            result type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.InitNameBasedLookup(Microsoft.SqlServer.Management.Smo.SqlObjectBase,System.Collections.Specialized.StringCollection)">
             <summary>
            init name-id lookup for triggered fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.UpdateFromNameBasedToOrdinalLookup(System.Collections.SortedList)">
             <summary>
            it assumes InitNameBasedLookup has already been called
            replaces AliasNames in m_triggeredColumnsIdLookup whit actual ordinal in the result set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.BinarySearch(System.Data.DataRowCollection,System.String,System.String)">
             <summary>
            use to find a row in the dataset base on an string id column</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.BinarySearchSetOnFirst(System.Data.DataRowCollection,System.String,System.String)">
             <summary>
            use to find a row in the dataset base on an string id column
            and positions on first record</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.IsNull(System.Object)">
             <summary>
            true us data is DBNull</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.IsNull(Microsoft.SqlServer.Management.Smo.DataProvider,System.Int32)">
             <summary>
            true if field i in dp is DBNull</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetTriggeredObject(Microsoft.SqlServer.Management.Smo.DataProvider,System.Int32)">
             <summary>
            get value for triggered column i as Object</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetTriggeredInt32(Microsoft.SqlServer.Management.Smo.DataProvider,System.Int32)">
             <summary>
            get value for triggered column i as Int32</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetTriggeredBool(Microsoft.SqlServer.Management.Smo.DataProvider,System.Int32)">
             <summary>
            get value for triggered column i as Bool</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetTriggeredString(Microsoft.SqlServer.Management.Smo.DataProvider,System.Int32)">
             <summary>
            get value for triggered column i as String</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.GetColumnData(System.String,System.Object,Microsoft.SqlServer.Management.Smo.DataProvider)">
             <summary>
            aplly post process for data
            receive column name, column curent value, DataProvider for the result set
            return the new column value
            called for every row</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcess.CleanRowData">
             <summary>
            clean any state that was constructed while the rowset was processed</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcess.ConnectionInfo">
             <summary>
            connection info</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcess.HitFields">
             <summary>
            list of fields determined this post process to fire</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcess.ObjectName">
             <summary>
            level name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcess.Request">
             <summary>
            the user request that we are servicing</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcess.SupportDataReader">
             <summary>
            true if this post process supports DataReader
            default is true</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessAuditProperties.GetMaximumFileSize(Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Return the MaximumFileSize value in the range 0 to 2^31-1
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessAuditProperties.GetMaximumFileSizeUnit(Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Gets and Sets the unit of MaximumFileSize in MB/GB/TB; 0=MB, 1=GB, 2=TB
            </summary>        
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessAuditProperties.GetMaximumFileSizeInMegaBytes(Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Gets MaximumFileSize in MB
            </summary>        
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessAuditProperties.GetMaxFileSizeValueInAcceptedRangeAndUnit(Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Gets Maximum File Size Value In Accepted Format and its unit from The Catalog value of maximum file size in Mega Bytes.
            </summary>
            <param name="dp"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessPermissionCode.GetSmoCodeFromSqlCode(System.String,System.Int32@)">
            <summary>
            Gets server or database permission code
            </summary>
            <param name="sqlCode"></param>
            <param name="smoCode"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessWithRowCaching.rowResults">
            <summary>
            The cached row results
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessWithRowCaching.dbIsAccessible">
            <summary>
            Whether the database we're querying is accessible to the user
            </summary>
            <remarks>Note we use a case-sensitive key comparer even though the database names may or may
            not be case-sensitive depending on the collation of the server. This is because SMO will use
            the same key for the same DB regardless so the case-sensitivity isn't going to change for a
            single DB within the context of SMO</remarks>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessWithRowCaching.rowsRetrieved">
            <summary>
            Whether we've retrieved the results already
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessWithRowCaching.GetCachedRowResultsForDatabase(Microsoft.SqlServer.Management.Smo.DataProvider,System.String)">
            <summary>
            Execute the query against the specified database, then caches the result until
            CleanRowData is called
            </summary>
            <param name="dp">The DataProvider for this request</param>
            <param name="databaseName">The database to execute the query against</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessWithRowCaching.CleanRowData">
            <summary>
            Clear cached results
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessDatabaseInsideAttribs.CleanRowData">
            <summary>
            Clean row collection per individual database property query.
            In batch query for HasMemoryOptimizedObjects, the initial query results are reused for the next database properties.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessDdlEvents.GetColumnData(System.String,System.Object,Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Returns the new value for column
            </summary>
            <param name="name">column name</param>
            <param name="data">data that is already present in the column</param>
            <param name="dp">stores the result that we are going to return
            as a value for this column. It abstracts the data source (DataReader or Data Table)</param>
            <returns>new column value</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties">
            <summary>
            A class that post processes the RemoteDataArchive properties for a database.
            </summary>
            <remarks>Post-Processing is necessary in this case because we need to run a query against the DB itself.
            The query generated from the Database.xml file runs in the context of the master DB so will not work.</remarks>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.remoteDataArchiveEndpoint">
            <summary>
            Name of RemoteDataArchiveEndpoint property
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.remoteDataArchiveDatabaseName">
            <summary>
            Name of RemoteDataArchiveDatabaseName property
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.remoteDataArchiveLinkedServer">
            <summary>
            Name of RemoteDataArchiveLinkedServer property
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.remoteDataArchiveFederatedServiceAccount">
            <summary>
            Name of FederatedServiceAccount property
            </summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.remoteDataArchiveCredential">
            <summary>
            Name of RemoteDataArchiveCredential property
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.IsStretchSmoSupportedOnVersion(System.Version)">
            <summary>
            Returns a boolean indicating if the current stretch queries
            will work on metadata views on the target server.
            
            The check is based on a version check of the server.
            The metaviews related to stretch were changed between ctp2.4 
            and ctp3.0
            
            The new queries added in ctp3.0 smo should not be allowed
            to run on ctp2.4 or lower server.
            </summary>
            <param name="sqlServerVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.GetColumnData(System.String,System.Object,Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Returns the value of required property
            </summary>
            <param name="name">Name of a table property</param>
            <param name="data">data</param>
            <param name="dp">data provider</param>
            <returns>Value of the property</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.PostProcessRemoteDataArchiveDatabaseProperties.SqlQuery">
            <summary>
            Build T-Sql queries to get values for PostProcess RemoteDataArchiveEndpoint, RemoteDataArchiveLinkedServer, RemoteDataArchiveDatabaseName
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PostProcessXmlToList">
            <summary>
            Given a Xml string of the format <root><row a="x"/><row a="y"/></root>
            return a List containing the strings "x" and "y"
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PostProcessTable">
            <summary>
            A class that post processes table properties    
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessTable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessTable.GetRowResults(Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Execute query to get values for table properties
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessTable.BuildQuery">
            <summary>
            Build T-Sql queries to get values for table properties.        
            </summary>        
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PostProcessTable.GetColumnData(System.String,System.Object,Microsoft.SqlServer.Management.Smo.DataProvider)">
            <summary>
            Returns the value of required property
            </summary>
            <param name="name">Name of a table property</param>
            <param name="data">data</param>
            <param name="dp">data provider</param>
            <returns>Value of the property</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.QueryIsolation">
            <summary>
            This class checks a registry key and adds prefix and postfix statements to the current query
            to set and restore isolation level if specified by the registry key
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.QueryIsolation.#cctor">
            <summary>
            the static constructor gives us atomic initialization.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.QueryIsolation.GetQueryPrefix">
            <summary>
            Returns a script to run before running the main query, or string.empty if no query is needed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.QueryIsolation.GetQueryPostfix">
            <summary>
            Returns a script to run after running the main query, or string.empty if no query is needed
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RequestParentSelect">
             <summary>
            encapsulates a request parent select
            basically the select that would give the results for the parent level ( without prefix/postfix)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RequestParentSelect.#ctor(Microsoft.SqlServer.Management.Smo.XmlRequestParentSelect)">
             <summary>
            initalize with xml reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RequestParentSelect.Fields">
             <summary>
            the fields that must be selected</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlConditionedStatement">
             <summary>
            a conditioned statement that inserts a chunck of tsql outside the main select</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatement.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement)">
             <summary>
            initialize with xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatement.GetLocalSql(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
             <summary>
            get the tsql witl link_mulitple resolved</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPrefix">
             <summary>
            encapsulates prefix</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPrefix.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement)">
             <summary>	
            initialize with xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPrefix.AddAll(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPrefix)">
             <summary>
            read all prefixes</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPrefix.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
             <summary>
            add hit for the field</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPostfix">
             <summary>
            encapsulates postfix</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPostfix.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement)">
             <summary>	
            initialize from xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPostfix.AddAll(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostfix)">
             <summary>
            read all postfixes</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementPostfix.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
             <summary>
            add hit for field</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementFailCondition">
             <summary>
            encapsulates a failed condition statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementFailCondition.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement)">
             <summary>	
            initialize with xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementFailCondition.AddAll(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementFailCondition)">
             <summary>
            add all fail conditions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlConditionedStatementFailCondition.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
             <summary>
            add hit for field</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlTypeConvert">
             <summary>
            assignes arbitrary numbers to level names ( db object types )
            the coresponding xpath from database level down</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlTypeConvert.#ctor(System.String,System.Int32,System.String)">
             <summary>
            constructor: name of level, assigned number path from database level</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlTypeConvert.Name">
             <summary>
            name of level</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlTypeConvert.No">
             <summary>
            assigned number</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlTypeConvert.Path">
             <summary>
            path from database level</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.IDKey">
             <summary>
            used to identify an object in the dependency list
            pair of object id and object type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.IDKey.#ctor(System.Int32,System.Int32)">
             <summary>
            constructor with object id and object type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.IDKey.CompareTo(System.Object)">
             <summary>
            compare to another IDKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.IDKey.id">
             <summary>
            object id</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.IDKey.type">
             <summary>
            object type</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName">
            <summary>
            Used to identify an object in the dependency list
            Contains information about the server, database, schema and name of object along with its type
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="serverName"></param>
            <param name="dbName"></param>
            <param name="schemaName"></param>
            <param name="name"></param>
            <param name="id"></param>
            <param name="type"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.StringComparer,System.StringComparer)">
            <summary>
            Constructor
            </summary>
            <param name="serverName"></param>
            <param name="dbName"></param>
            <param name="schemaName"></param>
            <param name="name"></param>
            <param name="id"></param>
            <param name="type"></param>
            <param name="dbComparer"></param>
            <param name="svrComparer"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.CompareTo(System.Object)">
            <summary>
            Compare one ServerDbSchemaName with another
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.ServerName">
            <summary>
            Server Name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.DatabaseName">
            <summary>
            Database name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.SchemaName">
            <summary>
            Schema name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.Name">
            <summary>
            Name of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.Id">
            <summary>
            Id of the object
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDbSchemaName.Type">
            <summary>
            Type of the object
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies">
             <summary>
            class that encapsulates the dependency discovery mechanism</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.#ctor">
             <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.TypeToNo(System.String)">
             <summary>
            converts from a level name to the assigned number</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.EnumDependencies(System.Object,Microsoft.SqlServer.Management.Sdk.Sfc.DependencyRequest)">
            <summary>
            Resolves a dependency request for the given connection to a DependencyChainCollection
            </summary>
            <param name="ci">connection object</param>
            <param name="rd">request</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.FindByNo(System.Int32)">
             <summary>
            find a SqlTypeConvert based on the assigned number</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.BuildResult(System.Data.DataTable)">
             <summary>
            build a DependencyChainCollection based on the result from the dependency discovery tsql</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.BuildIDKey(System.Data.DataRow,System.Boolean)">
             <summary>
            gets the IDKey for dependency the row
            it get get the id for either the object or the objects parent</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.BuildKey(System.Data.DataRow,System.Boolean)">
            <summary>
            Gets the ServerDbSchemaName for a datarow
            Gets the value for either the object or the parent
            </summary>
            <param name="row"></param>
            <param name="forParent"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.DumpRow(System.Data.DataRow)">
             <summary>
            function used only in debug to trace a dependency row</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.ResolveDeferredLinks(Microsoft.SqlServer.Management.Sdk.Sfc.DependencyChainCollection)">
             <summary>
            resolve links which were defered</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.GetUrnByQuery(Microsoft.SqlServer.Management.Smo.IDKey)">
             <summary>
            given an idkey get the urn for that object: 
            expensive, makes query to resolve the urn from id
            no longer used, replaced by the BuildUrn function</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.BuildUrn(System.Int32,System.Data.DataRow)">
             <summary>
            builds urn based on the data row returned from dependency discovery</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.GetUseString(System.String)">
             <summary>
            get use statement for the specified database</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumDependencies.TypeConvertTable">
             <summary>
            intializes o sorted list of the triplets: Level name, assigned number, path from database level
            the key is the assigned number</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlEnumResult">
             <summary>
            derives from the enumerator EnumResult too add sql extension specific functionality</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.#ctor(System.Object,Microsoft.SqlServer.Management.Sdk.Sfc.ResultType,Microsoft.SqlServer.Management.Common.DatabaseEngineType)">
             <summary>
            constructor, receives a StatementBuilder and a ResultType</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.AddSpecialQuery(System.String,System.String)">
             <summary>
            add the special query for the specified database</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.AddQueryHint(System.String)">
             <summary>
            add the special query for the specified database</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.GetSql(System.Data.DataRow,System.String)">
             <summary>
            build the tsql for a database</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.GetUse(System.Data.DataRow)">
             <summary>
            get the use statement for this database list row
             ( its a use in the rightmost database name )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.IsDatabaseListEqual(System.Data.DataRow,System.Data.DataRow)">
             <summary>
            compare all but the last element
            comparisons are made in the most restricted way , without collation because 
            the database names are all from sysdatabases , so they must mach exactly in order to be equal.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.BuildSql">
             <summary>
            return the tsql that will provide the result for the user</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumResult.GetSingleDatabaseSql">
             <summary>
            get the tsql the would be run in a single database, without 'use'</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.PostProcessFields">
             <summary>
            unused ????</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.NameProperties">
             <summary>
            property name for database used in DatabaseLevel</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.SchemaPrefixProperties">
            <summary>
            property name for schema used in the DatabaseLevel</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.SpecialQuery">
             <summary>
            special query</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.QueryHint">
             <summary>
            special query</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.LastDbLevelSet">
             <summary>
            no further procesing is necessary for the database level
            set in DatabaseLevel</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.StatementBuilder">
             <summary>
            get/set the StatementBuilder</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.Level">
             <summary>
            How many databases deep are we</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.Databases">
             <summary>
            list of databases trough which the query 
            must be executed can have multiple database levels</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.SchemaPrefixes">
            <summary>
            list of schemas that must be substituted into the query
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumResult.MultipleDatabases">
             <summary>
            true if the tsql will have to be run in more than one database</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlEnumStatementBuilderTestHook">
            <summary>
            Test hook for the statement builder
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumStatementBuilderTestHook.AddSqlStatementFragmentReplacement(System.String,System.String)">
            <summary>
            Add the sql statement fragment and its replacement
            </summary>
            <param name="originalString">The original string to look for</param>
            <param name="replacementString">The replacement</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlEnumStatementBuilderTestHook.Clear">
            <summary>
            Clear the fragments to be replaced
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumStatementBuilderTestHook.FragmentDictionary">
            <summary>
            Fragments dictionary
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlEnumStatementBuilderTestHook.SqlStatementFragmentsToBeReplaced">
            <summary>
            Gets the Fragments to be replaced
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LinkField">
             <summary>
            component of link multiple
            specifies the link fileld name, type and 
            value that is dynamically resoolved</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkField.Type">
             <summary>
            type of link field , see LinkFieldType enum</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkField.Field">
             <summary>
            link field name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkField.Value">
             <summary>
            place holder for the value calculated for this link field</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LinkMultiple">
             <summary>
            encapsulates a concept used in many constructs in the 
            xml configuration file: creating an expression based on one or more fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.LinkMultiple.Init(Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink)">
             <summary>
            init with xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.LinkMultiple.SetLinkFields(System.Collections.ArrayList)">
             <summary>
            set the list of link fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.LinkMultiple.GetSqlExpression(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
             <summary>
            calculate the tsql expression based on the format and on the link fields values</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.LinkMultiple.SetSqlExpression(System.String)">
             <summary>
            set the tsql expression to be expr</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkMultiple.HasLinkFields">
             <summary>
            true if it has link fields
             ( if false then we have a constant expression )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkMultiple.LinkFields">
             <summary>
            get the list of link fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.LinkMultiple.No">
             <summary>
            get the number of link fields</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlObjectProperty">
            	<summary>
            class ecapsulating information about a property </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadProperty)">
            	<summary>
            intialize from xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.GetValue(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            get the tsql value rendering the link multiple</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.GetTypeWithSize">
            	<summary>
            get the tsql type with the size specified</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.GetValueWithCast(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            get the tsql value with cast if needed</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.InitSessionValue(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            init a temporary value with the tsql representation of the type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.Add(Microsoft.SqlServer.Management.Smo.SqlObjectBase,System.Boolean)">
            	<summary>
            ad this property to the StatementBuilder
            isTriggered=true means that it was not requested by the user but is 
            necessary for a property requested by the user</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.LinkFields">
            	<summary>
            get the link fields 
            the links necessary to get the value for this property</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.Value">
            	<summary>
            get/set the tsql value for this property</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.SessionValue">
            	<summary>
            get set the temporary value</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.DBType">
            	<summary>
            get the tsql type without size</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.Size">
            	<summary>
            get the size</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlObjectProperty.Alias">
            	<summary>
            get the alias name for this property</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ParentLink">
            	<summary>
            encapsulates the link between this level and the parent level</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ParentLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadParentLink)">
            	<summary>
            intialize with xml reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ParentLink.Init(Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink)">
            	<summary>
            read a simple parent link</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ParentLink.LinkFields">
            	<summary>
            return the list of link fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ParentLink.LinkMultiple">
            	<summary>
            return the link multiple</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlPostProcess">
            	<summary>
            represents the need to execute post process for a particular field</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPostProcess.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess,System.Reflection.Assembly)">
            	<summary>
            initialize with xml reader, and asembly in which the class that knows to do the post process resides</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPostProcess.GetPostProcessInstance">
            	<summary>
            create a instance of a class that knows how to do the post process</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPostProcess.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            	<summary>
            add hit </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPostProcess.Register(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            register and prepare the post process for run</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPostProcess.AddAll(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess,System.Reflection.Assembly)">
            	<summary>
            read alll post_process tags from the configuration xml</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlPostProcess.TriggeredFields">
            	<summary>
            list of triggered fields for this post process
             ( fields that are needed to compute the value for the field requested by the user )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlPostProcess.AcceptsMultipleHits">
            	<summary>
            always true</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlPropertyLink">
            	<summary>
            class encapsulating a property_link
            used do indicate joins</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink)">
            	<summary>
            initialize with reader from xml
            by reading a property_link tag</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadProperty)">
            	<summary>
            initialize by reading a property tag ( attribute table )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlReadSettings)">
            	<summary>
            initialize by reading a setting tag ( attribute main_table )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.AddAll(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink)">
            	<summary>
            add all property_link tags</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.Add(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadProperty)">
            	<summary>
            add from a property tag</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.Add(Microsoft.SqlServer.Management.Smo.ConditionedSqlList,Microsoft.SqlServer.Management.Smo.XmlReadSettings)">
            	<summary>
            add from setting tag</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.GetTableNameWithAlias(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            get the table name with alias in tsql format</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.GetFilter(Microsoft.SqlServer.Management.Smo.SqlObjectBase)">
            	<summary>
            get the filter for the join</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.AddHit(System.String,Microsoft.SqlServer.Management.Smo.SqlObjectBase,Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            	<summary>
            add hit for this field 
            update the StatementBuilder</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlPropertyLink.Table">
            	<summary>
            get set the joined table name</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlRequest">
            	<summary>
            SqlRequest extends the enuemrator Request 
            with sql extension specific fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlRequest.#ctor">
            	<summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlRequest.#ctor(Microsoft.SqlServer.Management.Sdk.Sfc.Request)">
            	<summary>
            initialize from a Request</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlRequest.SetLinkFields(System.Collections.ArrayList)">
            	<summary>
            set a list of link fields ( will we need to be have thei value resolved )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlRequest.MergeLinkFileds(Microsoft.SqlServer.Management.Smo.SqlRequest)">
            	<summary>
            add the link fields fom another SqlRequest</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlRequest.ResolveDatabases">
            	<summary>
            if false the database level does not special processing</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlRequest.LinkFields">
            	<summary>
            get the list of link fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.SqlRequest.PrefixPostfixFields">
            	<summary>
            doesn't look to be used</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString">
            <summary>
            String class replacement that keeps its data encrypted in memory
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.#ctor(System.String)">
            <summary>
            Constructor for strings
            </summary>
            <param name="str">The string to encrypt</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.#ctor(System.Security.SecureString)">
            <summary>
            Constructpr for SecureStrings
            </summary>
            <param name="secureString">The SecureString to copy</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.#ctor(System.IntPtr,System.Int32)">
            <summary>
            Constructor for unmanaged BSTRs.  The BSTR is not freed in this call.
            </summary>
            <param name="bstr">The unmanaged BSTR to copy</param>
            <param name="length">The maximum number of characters to copy from the BSTR</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Dispose">
            <summary>
            Deletes the value and frees the resources of this object
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Clone">
            <summary>
            Returns a copy of this string
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Compares two SqlSecureString objects
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Boolean)">
            <summary>
            Compares two SqlSecureString objects, ignoring or honoring their case
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <param name="ignoreCase">Whether to perform a case-insensitive comparison (true indicates a case-insensitive comparison.)</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.StringComparison)">
            <summary>
            Compares two SqlSecureString objects.  A parameter specifies whether the comparison uses the current
            or invariant culture, honors or ignores case, and uses word or ordinal sort rules.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <param name="comparisonType">One of the System.StringComparison values</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Compares two SqlSecureString objects, ignoring or honoring case, and using culture-specific
            information to influence the comparison
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <param name="ignoreCase">Whether to perform a case-insensitive comparison (true indicates a case-insensitive comparison.)</param>
            <param name="cultureInfo">The CultureInfo object that supplies culture-specific comparison information</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,System.Int32)">
            <summary>
            Compares two SqlSecureString objects
            </summary>
            <param name="strA">The first string</param>
            <param name="indexA">The position of the substring within strA</param>
            <param name="strB">The second string</param>
            <param name="indexB">The position of the substring within strB</param>
            <param name="length">The maximum number of characters in the substrings to compare</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Compares two SqlSecureString objects
            </summary>
            <param name="strA">The first string</param>
            <param name="indexA">The position of the substring within strA</param>
            <param name="strB">The second string</param>
            <param name="indexB">The position of the substring within strB</param>
            <param name="length">The maximum number of characters in the substrings to compare</param>
            <param name="ignoreCase">Whether to perform a case-insensitive comparison (true indicates a case-insensitive comparison.)</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,System.Int32,System.StringComparison)">
            <summary>
            Compares two SqlSecureString objects
            </summary>
            <param name="strA">The first string</param>
            <param name="indexA">The position of the substring within strA</param>
            <param name="strB">The second string</param>
            <param name="indexB">The position of the substring within strB</param>
            <param name="length">The maximum number of characters in the substrings to compare</param>
            <param name="comparisonType">One of the System.StringComparison values</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Compare(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Compares two SqlSecureString objects
            </summary>
            <param name="strA">The first string</param>
            <param name="indexA">The position of the substring within strA</param>
            <param name="strB">The second string</param>
            <param name="indexB">The position of the substring within strB</param>
            <param name="length">The maximum number of characters in the substrings to compare</param>
            <param name="ignoreCase">Whether to perform a case-insensitive comparison (true indicates a case-insensitive comparison.)</param>
            <param name="cultureInfo">The CultureInfo object that supplies culture-specific comparison information</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.CompareOrdinal(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Performs a binary comparison of two strings by evaluating the numeric values
            of the corresponding char objects in each string.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.CompareOrdinal(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Int32,System.Int32)">
            <summary>
            Performs a binary comparison of two strings by evaluating the numeric values
            of the corresponding char objects in each string.
            </summary>
            <param name="strA">The first string</param>
            <param name="indexA">The position of the substring within strA</param>
            <param name="strB">The second string</param>
            <param name="indexB">The position of the substring within strB</param>
            <param name="length">The maximum number of characters in the substrings to compare</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.CompareTo(System.Object)">
            <summary>
            Compares this instance with a specified object.
            </summary>
            <param name="obj">An object that evaluates to a string</param>
            <returns>
            less than zero if this is less than obj, 
            zero if this equals obj, 
            greater than zero if this is greater than obj
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.CompareTo(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Compares this instance with a specified string object.
            </summary>
            <param name="other">Another SqlSecureString</param>
            <returns>
            less than zero if strA is less than strB, 
            zero if strA equals strB, 
            greater than zero if strA is greater than strB
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Concat(System.Object)">
            <summary>
            Concatenates the string representations of the values of one or more objects.
            </summary>
            <param name="obj">The object to convert to a SqlSecureString</param>
            <returns>A SqlSecureString containing the string representation of obj</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Concat(System.Object[])">
            <summary>
            Concatenates the string representations of the values of one or more objects.
            </summary>
            <param name="args">The objects to concatenate</param>
            <returns>A SqlSecureString containing the concatenation of the string representations of the args</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Contains(System.String)">
            <summary>
            Returns a value indicating whether the specified string occurs within this instance
            </summary>
            <param name="value">The string to seek</param>
            <returns>true if value occurs within this instance, or if value is the empty string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Contains(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Returns a value indicating whether the specified string occurs within this instance
            </summary>
            <param name="value">The string to seek</param>
            <returns>true if value occurs within this instance, or if value is the empty string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Copy">
            <summary>
            Create a copy of the SqlSecureString
            </summary>
            <returns>The copy of the SqlSecureString</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.EndsWith(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the end of the SqlSecureString matches the specified string
            </summary>
            <param name="value">The string to compare</param>
            <returns>true if value matches the end of the string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.EndsWith(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the end of the SqlSecureString matches the specified string
            </summary>
            <param name="value">The string to compare</param>
            <param name="ignoreCase">Whether to perform a case-insensitive comparison (true indicates a case-insensitive comparison.)</param>
            <param name="cultureInfo">The CultureInfo object that supplies culture-specific comparison information</param>
            <returns>true if value matches the end of the string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Equals(System.Object)">
            <summary>
            Determines whether this instance of SqlSecureString and a specified object
            have the same string representation
            </summary>
            <param name="obj">The object to compare</param>
            <returns>true if the object's string representation matches this string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Equals(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether this instance and another SqlSecureString have the same binary value
            </summary>
            <param name="other">The SqlSecureString to compare</param>
            <returns>true if the values are the same; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Equals(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether this instance and another SqlSecureString have the same value
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>true if the values are the same; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Equals(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.StringComparison)">
            <summary>
            Determines whether this instance and another SqlSecureString have the same binary value
            </summary>
            <param name="other">The SqlSecureString to compare</param>
            <param name="comparisonType">One of the System.StringComparison values</param>
            <returns>true if the values are the same; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Equals(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.StringComparison)">
            <summary>
            Determines whether this instance and another SqlSecureString have the same value
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <param name="comparisonType">One of the System.StringComparison values</param>
            <returns>true if the values are the same; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Format(System.String,System.Object[])">
            <summary>
            Replaces each format item in the specified string with the text equivalent
            of a corresponding object's value
            </summary>
            <param name="format">A string containing zero or more format items</param>
            <param name="arguments">An object array containing zero or more objects to format</param>
            <returns>
            A copy of format in which the format items have been replace by the string
            equivalent of the corresponding instances of object in arguments
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Format(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Replaces each format item in the specified string with the text equivalent
            of a corresponding object's value
            </summary>
            <param name="formatProvider">An IFormatProvider that supplies culture-specific formatting information</param>
            <param name="format">A string containing zero or more format items</param>
            <param name="arguments">An object array containing zero or more objects to format</param>
            <returns>
            A copy of format in which the format items have been replace by the string
            equivalent of the corresponding instances of object in arguments
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.GetHashCode">
            <summary>
            Returns the hash code for the instance
            </summary>
            <returns>The hash code</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.Char)">
            <summary>
            Reports the index of the first occurance of the specified character in this instance.
            </summary>
            <param name="value">The character to seek</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.String)">
            <summary>
            Reports the index of the first occurance of the specified string in this instance.
            </summary>
            <param name="value">The stringharacter to seek</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is 0.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.Char,System.Int32)">
            <summary>
            Reports the index of the first occurance of the specified character in this instance.
            The search starts at a specified character position.
            </summary>
            <param name="value">The character to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.String,System.Int32)">
            <summary>
            Reports the index of the first occurance of the specified string in this instance.
            The search starts at a specified character position.
            </summary>
            <param name="value">The string to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.Char,System.Int32,System.Int32)">
            <summary>
            Reports the index of the first occurance of the specified character in this instance.
            The search starts at a specified character position and examines a specified
            number of character positions.
            </summary>
            <param name="value">The character to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOf(System.String,System.Int32,System.Int32)">
            <summary>
            Reports the index of the first occurance of the specified string in this instance.
            The search starts at a specified character position and examines a specified
            number of character positions.
            </summary>
            <param name="value">The string to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOfAny(System.Char[])">
            <summary>
            Reports the index of the first occurance in this instance of any character
            in a specified array of characters.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOfAny(System.Char[],System.Int32)">
            <summary>
            Reports the index of the first occurance in this instance of any character
            in a specified array of characters.  The search starts at a specified 
            character position.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.IndexOfAny(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reports the index of the first occurance in this instance of any character
            in a specified array of characters.  The search starts at a specified 
            character position and examines a specified number of character positions.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Insert(System.Int32,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Inserts a specified instance of SqlSecureString at a specified index position
            in this instance
            </summary>
            <param name="startIndex">The index position of the insertion</param>
            <param name="value">The SqlSecureString to insert</param>
            <returns>
            The new SqlSecureString equivalent to this instance but with
            value inserted at position startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Insert(System.Int32,System.String)">
            <summary>
            Inserts a specified instance of String at a specified index position
            in this instance
            </summary>
            <param name="startIndex">The index position of the insertion</param>
            <param name="value">The String to insert</param>
            <returns>
            The new SqlSecureString equivalent to this instance but with
            value inserted at position startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Join(System.Object,System.Object[])">
            <summary>
            Concatenates a specified separator string between each element of a
            specified string array, yielding a single contatenated string.
            </summary>
            <param name="separator">The object whose string representation will be used to separate the values</param>
            <param name="value">The array of objects whose string representations will be joined</param>
            <returns>A SqlSecureString consisting of the elements of value interspersed with the separator string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Join(System.Object,System.Object[],System.Int32,System.Int32)">
            <summary>
            Concatenates a specified separator string between each element of a
            specified string array, yielding a single contatenated string.
            </summary>
            <param name="separator">The object whose string representation will be used to separate the values</param>
            <param name="value">The array of objects whose string representations will be joined</param>
            <param name="startIndex">The first array element in value to use</param>
            <param name="count">The number of elements of value to use</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.Char)">
            <summary>
            Reports the index of the last occurance of the specified character in this instance.
            </summary>
            <param name="value">The character to seek</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.String)">
            <summary>
            Reports the index of the last occurance of the specified string in this instance.
            </summary>
            <param name="value">The stringharacter to seek</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is 0.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.Char,System.Int32)">
            <summary>
            Reports the index of the last occurance of the specified character in this instance.
            The search starts at a specified character position.
            </summary>
            <param name="value">The character to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.String,System.Int32)">
            <summary>
            Reports the index of the last occurance of the specified string in this instance.
            The search starts at a specified character position.
            </summary>
            <param name="value">The string to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.Char,System.Int32,System.Int32)">
            <summary>
            Reports the index of the last occurance of the specified character in this instance.
            The search starts at a specified character position and examines a specified
            number of character positions.
            </summary>
            <param name="value">The character to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of value if that character is found, or -1 if it is not.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOf(System.String,System.Int32,System.Int32)">
            <summary>
            Reports the index of the last occurance of the specified string in this instance.
            The search starts at a specified character position and examines a specified
            number of character positions.
            </summary>
            <param name="value">The string to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of value if that string is found, or -1 if it is not.
            If value is Empty, the return value is startIndex.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOfAny(System.Char[])">
            <summary>
            Reports the index of the last occurance in this instance of any character
            in a specified array of characters.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOfAny(System.Char[],System.Int32)">
            <summary>
            Reports the index of the last occurance in this instance of any character
            in a specified array of characters.  The search starts at a specified 
            character position.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <param name="startIndex">The search starting position</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reports the index of the last occurance in this instance of any character
            in a specified array of characters.  The search starts at a specified 
            character position and examines a specified number of character positions.
            </summary>
            <param name="anyOf">The character array containing one or more characters to seek</param>
            <param name="startIndex">The search starting position</param>
            <param name="count">The number of character positions to examine</param>
            <returns>
            The index position of the first occurance in this instance where any character of anyOf
            was found; otherwise, -1 if no character of anyOf was found.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Equality(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the decrypted strings have the same value.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are equal; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Equality(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Object)">
            <summary>
            Determines whether the decrypted strings have the same value.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are equal; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Equality(System.Object,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the decrypted strings have the same value.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are equal; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Inequality(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the decrypted strings have different values.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are different; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Inequality(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Object)">
            <summary>
            Determines whether the decrypted strings have different values.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are different; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Inequality(System.Object,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the decrypted strings have different values.  This is a
            binary comparison of the characters of the strings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>True if the strings are different; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Addition(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Concatenates two SqlSecureStrings.
            </summary>
            <param name="strA">The first string</param>
            <param name="strB">The second string</param>
            <returns>The concatenation of the two strings</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.PadLeft(System.Int32)">
            <summary>
            Right-aligns the charactes in this instance, padding with spaces on the left
            for a specified total length.
            </summary>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>
            A new SqlSecureString that is equivalent to this instance, but right-aligned and
            padded on the left with as many spaces as needed to create a length of totalWidth.
            -or- If totalWidth is less than the length of this instance, a new SqlSecureString
            that is identical to this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.PadLeft(System.Int32,System.Char)">
            <summary>
            Right-aligns the charactes in this instance, padding with a specified character 
            on the left for a specified total length.
            </summary>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">The padding character</param>
            <returns>
            A new SqlSecureString that is equivalent to this instance, but right-aligned and
            padded on the left with as many padding characters as needed to create a length 
            of totalWidth. -or- If totalWidth is less than the length of this instance, a new 
            SqlSecureString that is identical to this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.PadRight(System.Int32)">
            <summary>
            Left-aligns the charactes in this instance, padding with spaces on the right
            for a specified total length.
            </summary>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <returns>
            A new SqlSecureString that is equivalent to this instance, but left-aligned and
            padded on the right with as many spaces as needed to create a length of totalWidth.
            -or- If totalWidth is less than the length of this instance, a new SqlSecureString
            that is identical to this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.PadRight(System.Int32,System.Char)">
            <summary>
            Left-aligns the charactes in this instance, padding with a specified character 
            on the right for a specified total length.
            </summary>
            <param name="totalWidth">The number of characters in the resulting string.</param>
            <param name="paddingChar">The padding character</param>
            <returns>
            A new SqlSecureString that is equivalent to this instance, but left-aligned and
            padded on the right with as many padding characters as needed to create a length 
            of totalWidth. -or- If totalWidth is less than the length of this instance, a new 
            SqlSecureString that is identical to this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Remove(System.Int32)">
            <summary>
            Deletes characters from this instance beginning at a specified position.
            </summary>
            <param name="startIndex">The position to start deleting characters</param>
            <returns>A SqlSecureString that is equivalent to this instance less the removed characters</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Remove(System.Int32,System.Int32)">
            <summary>
            Deletes a specified number of characters from this instance beginning at a specified position.
            </summary>
            <param name="startIndex">The position to start deleting characters</param>
            <param name="count">The number of characters to delete</param>
            <returns>A SqlSecureString that is equivalent to this instance less the removed characters</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Replace(System.Char,System.Char)">
            <summary>
            Replaces all occurances of a specified character with another specified character
            </summary>
            <param name="oldChar">The character to be replaced</param>
            <param name="newChar">The character to replace all occurrences of oldChar</param>
            <returns>
            The SqlSecureString equivalent of this instance but with all instances
            of oldChar replace with newChar.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Replace(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Replaces all occurances of a specified string with another specified string
            </summary>
            <param name="oldValue">The string to be replaced</param>
            <param name="newValue">The string to replace all occurrences of oldValue</param>
            <returns>
            The SqlSecureString equivalent of this instance but with all instances
            of oldValue replaced with newValue.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.Char[])">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by a specific character array
            </summary>
            <param name="separator">The array of delimiter characters, an empty array, or null</param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the characters in separator.
            -or- An array of substrings, if this instance is delimited by one or more characters in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter characters.
            
            An empty SqlSecureString is returned for any substring in which two delimiters are adjacent,
            or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.Char[],System.Int32)">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by a specific character array
            </summary>
            <param name="separator">The array of delimiter characters, an empty array, or null</param>
            <param name="count">The maximum number of substrings to return</param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the characters in separator.
            -or- An array of substrings, if this instance is delimited by one or more characters in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter characters.
            
            An empty SqlSecureString is returned for any substring in which two delimiters are adjacent,
            or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.Char[],System.StringSplitOptions)">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by a specific character array
            </summary>
            <param name="separator">The array of delimiter characters, an empty array, or null</param>
            <param name="options">
            RemoveEmptyEntries to omit empty elements from the array returned;
            None to include empty array elements in the array returned
            </param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the characters in separator.
            -or- An array of substrings, if this instance is delimited by one or more characters in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter characters.
            
            If options is None, an empty SqlSecureString is returned for any substring in which two delimiters 
            are adjacent, or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.Char[],System.Int32,System.StringSplitOptions)">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by a specific character array
            </summary>
            <param name="separator">The array of delimiter characters, an empty array, or null</param>
            <param name="count">The maximum number of substrings to return</param>
            <param name="options">
            RemoveEmptyEntries to omit empty elements from the array returned;
            None to include empty array elements in the array returned
            </param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the characters in separator.
            -or- An array of substrings, if this instance is delimited by one or more characters in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter characters.
            
            If options is None, an empty SqlSecureString is returned for any substring in which two delimiters 
            are adjacent, or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.String[],System.StringSplitOptions)">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by elements of a specified string array
            </summary>
            <param name="separator">
            The array of strings that delimit the substrings of this instance, 
            an empty array, or null
            </param>
            <param name="options">
            RemoveEmptyEntries to omit empty elements from the array returned;
            None to include empty array elements in the array returned
            </param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the strings in separator.
            -or- An array of substrings, if this instance is delimited by one or more of the strings in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter strings.
            -or- An empty array, if options is RemoveEmptyEntries and the length of this instance is zero.
            
            If options is None, an empty SqlSecureString is returned for any substring in which two delimiters 
            are adjacent, or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Split(System.String[],System.Int32,System.StringSplitOptions)">
            <summary>
            Returns a SqlSecureString array containing the substrings of this instance
            that are delimited by elements of a specified string array
            </summary>
            <param name="separator">
            The array of strings that delimit the substrings of this instance, 
            an empty array, or null
            </param>
            <param name="count">The maximum number of substrings to return</param>
            <param name="options">
            RemoveEmptyEntries to omit empty elements from the array returned;
            None to include empty array elements in the array returned
            </param>
            <returns>
            An array consisting for a single element that contains a copy of this instance, if this
            instance contains none of the strings in separator.
            -or- An array of substrings, if this instance is delimited by one or more of the strings in separator.
            -or- An array of the substrings of this instance that are delimited by white space
            characters, if those characters occur in this instance and separator is null or contains
            no delimiter strings.
            -or- An empty array, if options is RemoveEmptyEntries and the length of this instance is zero.
            
            If options is None, an empty SqlSecureString is returned for any substring in which two delimiters 
            are adjacent, or if a delimiter is found at the beginning or end of this instance.  Delimiter
            characters are not included in the substrings.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.StartsWith(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)">
            <summary>
            Determines whether the beginning of this instance matches the specified string.
            </summary>
            <param name="value">The string to compare</param>
            <returns>True if value matches the beginning of this string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.StartsWith(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the beginning of this instance matches the specified string.
            </summary>
            <param name="value">The string to compare</param>
            <param name="ignoreCase">true to ignore case when comparing this instance and value; false to honor case</param>
            <param name="culture">Cultural information that determines how this instance and value are compared</param>
            <returns>True if value matches the beginning of this string; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.StringArrayToSqlSecureStringArray(System.String[])">
            <summary>
            Convert an array of strings to an array of SqlSecureStrings
            </summary>
            <param name="array">The array of strings to convert</param>
            <returns>The equivalent array of SqlSecureStrings</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Substring(System.Int32)">
            <summary>
            Retrieves a substring from this instance.
            </summary>
            <param name="startIndex">The character position of the beginning of the substring in this instance</param>
            <returns>
            The SqlSecureString equivalent to the substring that begins at startIndex, -or-
            an empty SqlSecureString if startIndex is equal to the length of this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Substring(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from this instance.
            </summary>
            <param name="startIndex">The character position of the beginning of the substring in this instance</param>
            <param name="length">The number of characters in the substring</param>
            <returns>
            The SqlSecureString equivalent to the substring of length length that begins at startIndex, -or-
            an empty SqlSecureString if startIndex is equal to the length of this instance.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToBstr">
            <summary>
            Returns a native BSTR containing the decrypted data in this instance.  Callers must
            call Marshal.ZeroFreeBSTR() to clear and release the BSTR memory.
            </summary>
            <returns>A pointer to a native BSTR containing the decrypted string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToLower">
            <summary>
            Returns a copy of this string converted to lowercase.
            </summary>
            <returns>The SqlSecureString equivalent to this instance in lowercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToLower(System.Globalization.CultureInfo)">
            <summary>
            Returns a copy of this string converted to lowercase using the rules of
            a particular culture.
            </summary>
            <param name="culture">A CultureInfo object that supplies the culture-specific casing rules</param>
            <returns>The SqlSecureString equivalent to this instance in lowercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToLowerInvariant">
            <summary>
            Returns a copy of this string converted to lowercase using the rules of
            the invariant culture.
            </summary>
            <returns>The SqlSecureString equivalent to this instance in lowercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToSecureString">
            <summary>
            Returns a System.Security.SecureString copy of this instance's data.
            </summary>
            <returns>The SecureString equivalent to this instance.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToString">
            <summary>
            Returns a System.String containing the decrypted text of this instance.
            Callers should set the string object receiving the plaintext secret to
            null as soon as possible after they are done using the data.
            </summary>
            <returns>The plaintext secret stored in this instance</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToUpper">
            <summary>
            Returns a copy of this string converted to uppercase.
            </summary>
            <returns>The SqlSecureString equivalent to this instance in uppercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToUpper(System.Globalization.CultureInfo)">
            <summary>
            Returns a copy of this string converted to uppercase using the rules of
            a particular culture.
            </summary>
            <param name="culture">A CultureInfo object that supplies the culture-specific casing rules</param>
            <returns>The SqlSecureString equivalent to this instance in uppercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.ToUpperInvariant">
            <summary>
            Returns a copy of this string converted to uppercase using the rules of
            the invariant culture.
            </summary>
            <returns>The SqlSecureString equivalent to this instance in uppercase.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Trim">
            <summary>
            Returns a copy of this string with all whitespace characters removed from
            the beginning and end of this instance.
            </summary>
            <returns>
            The SqlSecureString equivalent to this instance with whitespace removed 
            from the beginning and the end.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Trim(System.Char[])">
            <summary>
            Returns a copy of this string with all occurrences of a set of characters 
            specified in an arry removed from the beginning and end of this instance.
            </summary>
            <returns>
            The SqlSecureString equivalent to this instance with the specified characters
            removed from the beginning and the end.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.TrimEnd(System.Char[])">
            <summary>
            Returns a copy of this string with all occurrences of a set of characters 
            specified in an arry removed from the end of this instance.
            </summary>
            <returns>
            The SqlSecureString equivalent to this instance with the specified characters
            removed from the end.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.TrimStart(System.Char[])">
            <summary>
            Returns a copy of this string with all occurrences of a set of characters 
            specified in an arry removed from the beginning of this instance.
            </summary>
            <returns>
            The SqlSecureString equivalent to this instance with the specified characters
            removed from the beginning.
            </returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Explicit(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)~System.String">
            <summary>
            Implicitly convert a SqlSecureString to a String containing
            the decrypted secred stored in the SqlSecureString.  Callers
            should set the returned string to null as soon as possible after
            the secret data is no longer being used.
            </summary>
            <param name="sqlSecureString">The SqlSecureString to decrypt</param>
            <returns>The String containing the plaintext secret</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Implicit(System.String)~Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString">
            <summary>
            Implicitly convert a String to a SqlSecureString.  The secret in the
            string is encrypted in the process.  The input string should be set
            to null as soon as possible after this operation.
            </summary>
            <param name="str">The plaintext secret to encrypt</param>
            <returns>The SqlSecureString containing the encrypted secret</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Implicit(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)~System.Security.SecureString">
            <summary>
            Implicitly convert a SqlSecureString to a System.Security.SecureString.
            </summary>
            <param name="sqlSecureString">The SqlSecureString to convert</param>
            <returns>A SecureString containing the encrypted secret</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Implicit(System.Security.SecureString)~Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString">
            <summary>
            Implicitly convert a System.Security.SecureString to a SqlSecureString.
            </summary>
            <param name="secureString">The SecureString to convert</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Explicit(Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString)~System.Data.SqlTypes.SqlString">
            <summary>
            Implicitly convert a SqlSecureString to a SqlString containing
            the decrypted secred stored in the SqlSecureString.  Callers
            should set the returned string to null as soon as possible after
            the secret data is no longer being used.
            </summary>
            <param name="sqlSecureString">The SqlSecureString to decrypt</param>
            <returns>The SqlString containing the plaintext secret</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.op_Implicit(System.Data.SqlTypes.SqlString)~Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString">
            <summary>
            Implicitly convert a SqlString to a SqlSecureString.  The secret in the
            string is encrypted in the process.  The input string should be set
            to null as soon as possible after this operation.
            </summary>
            <param name="str">The plaintext secret to encrypt</param>
            <returns>The SqlSecureString containing the encrypted secret</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Item(System.Int32)">
            <summary>
            Gets the decrypted character at a specified character position in this instance
            </summary>
            <param name="index">The index of the character</param>
            <returns>The decrypted character</returns>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Empty">
            <summary>
            Represents the empty string
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Internal.SqlSecureString.Length">
            <summary>
            Gets the number of characters in the instance
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.SqlSupport">
            	<summary>
            conatins support functions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlSupport.#ctor">
            	<summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.SqlSupport.GetCompareOptionsFromCollation(System.String)">
            	<summary>
            translates the collation characteristics into CompareOptions</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.StatementBuilder">
            	<summary>
            constructs the tsql that will get the data	
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.#ctor">
            	<summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.SetInternalSelect(System.Text.StringBuilder)">
            	<summary>
            set the select statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.IsEmpty(System.Text.StringBuilder)">
            	<summary>
            returns true if s is empty</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddElement(System.Text.StringBuilder,System.String,System.String,System.String,System.String)">
            	<summary>
            adds value to a string builder using the specified delimiters</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddUrn(System.String)">
            	<summary>
            add to URN</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddPrefix(System.String)">
            <summary>
            add to PREFIX</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddCondition(System.String)">
            <summary>
            add a CONDITION which if is true will make the result set be empty</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddPostfix(System.String)">
            	<summary>
            add to POSTFIX</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddFields(System.String)">
            	<summary>
            add to the SELECT fields list</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddFrom(System.String)">
            	<summary>
            add a clasic join to the FROM clause</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddJoin(System.String)">
            	<summary>
            add a new syntax join to the FROM clause</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddWhere(System.String)">
            	<summary>
            add to the WHERE clause using AND</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddOrderBy(System.String)">
            	<summary>
            add to the ORDER BY clause</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddOrderBy(System.String,Microsoft.SqlServer.Management.Sdk.Sfc.OrderBy.Direction)">
            	<summary>
            add to the ORDER BY clause spcifying direction</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddOrderBy(System.String,System.String,Microsoft.SqlServer.Management.Sdk.Sfc.OrderBy.Direction)">
            	<summary>
            add to ODER BY clause by name if the property apears in the SELECT list
             if not add it by value</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddProperty(System.String,System.String)">
            	<summary>
            add property to the SELECT list with alias</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddPostProcess(System.String,Microsoft.SqlServer.Management.Smo.PostProcess)">
            	<summary>
            add a post process needed to resolve the field property</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddQueryHint(System.String)">
            	<summary>
            add a query hint</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.Merge(Microsoft.SqlServer.Management.Smo.StatementBuilder)">
            	<summary>
            merge two StatementBuilder instances</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.InternalSelect">
            	<summary>
            compute the select statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.ClearPrefixPostfix">
            	<summary>
            clear the prefix and the postfix statements</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.MakeCopy">
            	<summary>
            make a copy of this StatementBuilder</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.StoreParentProperty(Microsoft.SqlServer.Management.Smo.SqlObjectProperty,System.Boolean)">
            	<summary>
            add a property that is requested in the SELECT
             if bTriggered is true thanm the property is not directly requested by the user
             but is needed to resolve one of the properties requested by the user</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.GetSqlNoPrefixPostfix">
            <summary>
            clear the prefix and postfix and get the remaining sql statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddStoredProperties">
            	<summary>
            add the internally stored properties in the SELECT clause</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.GetOrderBy">
            	<summary>
            get the order by statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.ClearOrderBy">
            	<summary>
            clear the order by statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.GetCreateTemporaryTableSqlConnect(System.String)">
            	<summary>
            sql that creates a temporary table that can hold the requested properties for 
             this object-> it can only be asked for the last object in xpath</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.AddColumn(System.Text.StringBuilder,Microsoft.SqlServer.Management.Smo.SqlObjectProperty,System.Boolean@,System.Boolean)">
            	<summary>
            add a column in the create temporary table statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.SelectAndDrop(System.String,System.String)">
            	<summary>
            generate tsql to select from the specified temporary table and then drop it</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.StatementBuilder.ClearFailCondition">
            	<summary>
            clear the CONDITION which if true makes the result be enpty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.ParentProperties">
            	<summary>
            list of properties selected</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.NonTriggeredProperties">
            	<summary>
            position from where the triggered ( not requested by user ) 
             properties start</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.PostProcessList">
            	<summary>
            list of prost processes that must be run</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.Distinct">
            	<summary>
            the select must be distinct</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.TopN">
            	<summary>
            the select must return Top N rows
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.IsFirstJoin">
            	<summary>
            this is the first table added to the from clause</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.From">
            	<summary>
            returns the FROM clause</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.SqlStatement">
            	<summary>
            compute the whole sql statement ( including prefix / postfix )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.StatementBuilder.SqlPostfix">
            	<summary>
            get the postfix statement</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LocDisplayNameAttribute">
            <summary>
            Attribute class that is used in converters below to convert Enum to Resource strings
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.TsqlSyntaxStringAttribute">
            <summary>
            Attribute class that is used in converters below to convert Enum to culture invariant TSQL Strings.
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter">
            <summary>
             Converts the specified value object to an enumeration object.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.#ctor(System.Type)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
             Converts the specified value object to an enumeration object.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">An optional System.Globalization.CultureInfo. If not supplied, the current culture is assumed.</param>
            <param name="value"> The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.EnumValueToLocString(System.String,System.Type)">
            <summary>
            Helper method that converts the given value object to string.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.EnumValueToTsqlSyntax(System.String,System.Type)">
            <summary>
            Helper method that converts enum, to the equivalent TSQL Syntax string if it exists, null otherwise.
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.EnumToDisplayNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">An optional System.Globalization.CultureInfo. If not supplied, the current culture is assumed.</param>
            <param name="value">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.JobExecutionStatusConverter">
            <summary>
            Type converter for JobExecutionStatus
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.JobExecutionStatusConverter.#ctor">
            <summary>
            ctor for Type converter for JobExecutionStatus
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ContainmentTypeConverter">
            <summary>
            Type converter for ContainmentType
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ContainmentTypeConverter.#ctor">
            <summary>
            ctor for Type converter for ContainmentType
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RecoveryModelConverter">
            <summary>
            Type converter for RecoveryModel
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RecoveryModelConverter.#ctor">
            <summary>
            ctor for Type converter for RecoveryModel
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.MirroringStatusConverter">
            <summary>
            Type converter for MirroringStatus
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.MirroringStatusConverter.#ctor">
            <summary>
            ctor for Type converter for MirroringStatus
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationStateConverter">
            <summary>
            Type converter for AvailabilityGroupRollupSynchronizationState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityGroupRollupSynchronizationStateConverter.#ctor">
            <summary>
            ctor for the AvailabilityReplicaRollupSynchronizationStateConverter class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalStateConverter">
            <summary>
            Type converter for AvailabilityReplicaOperationalState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaOperationalStateConverter.#ctor">
            <summary>
            ctor for the AvailabilityReplicaOperationalStateConverter class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryStateConverter">
            <summary>
            Type converter for AvailabilityReplicaRollupRecoveryState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupRecoveryStateConverter.#ctor">
            <summary>
            ctor for the AvailabilityReplicaRollupRecoveryStateConverter class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationStateConverter">
            <summary>
            Type converter for AvailabilityReplicaRollupSynchronizationState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRollupSynchronizationStateConverter.#ctor">
            <summary>
            ctor for the AvailabilityReplicaRollupSynchronizationStateConverter class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRoleConverter">
            <summary>
            Type converter for AvailabilityReplicaRole
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaRoleConverter.#ctor">
            <summary>
            ctor for Type converter for AvailabilityReplicaRole
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionStateConverter">
            <summary>
            Type converter for AvailabilityReplicaConnectionState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionStateConverter.#ctor">
            <summary>
            ctor for Type converter for AvailabilityReplicaConnectionState
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRoleConverter">
            <summary>
            Type converter for AvailabilityReplicaConnectionModeInSecondaryRole enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInSecondaryRoleConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaSeedingModeConverter">
            <summary>
            Type converter for AvailabilityReplicaSeedingMode enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaSeedingModeConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRoleConverter">
            <summary>
            Type converter for AvailabilityReplicaConnectionModeInPrimaryRole enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaConnectionModeInPrimaryRoleConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityModeConverter">
            <summary>
            Type converter for AvailabilityReplicaAvailabilityMode enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaAvailabilityModeConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverModeConverter">
            <summary>
            Type converter for AvailabilityReplicaFailoverMode enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaFailoverModeConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinStateConverter">
            <summary>
            Type converter for AvailabilityReplicaJoinState enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityReplicaJoinStateConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationStateConverter">
            <summary>
            Type converter for AvailabilityDatabaseSynchronizationState enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityDatabaseSynchronizationStateConverter.#ctor">
            <summary>
            ctor for Type converter for AvailabilityDatabaseSynchronizationState
            ctor for the AvailabilityReplicaRollupSynchronizationStateConverter class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPStateConverter">
            <summary>
            Type converter for AvailabilityGroupListenerIPState
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.AvailabilityGroupListenerIPStateConverter.#ctor">
            <summary>
            ctor for the AvailabilityGroupListenerIPState class
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseReplicaSuspendReasonConverter">
            <summary>
            Type converter for DatabaseReplicaSuspendReason enum
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.HADRManagerStatusConverter">
            <summary>
            Type converter for HADRMangerStatus enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.HADRManagerStatusConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterQuorumTypeConverter">
            <summary>
            Type converter for the ClusterQuorumType enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ClusterQuorumTypeConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterQuorumStateConverter">
            <summary>
            Type converter for the ClusterQuorumState enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ClusterQuorumStateConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterMemberTypeConverter">
            <summary>
            Type converter for the ClusterMemberType enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ClusterMemberTypeConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ClusterMemberStateConverter">
            <summary>
            Type converter for the ClusterMemberState enum
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ClusterMemberStateConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupAutomatedBackupPreferenceConverter">
            <summary>
            Type converter for the AvailabilityGroupAutomatedBackupPreference enum
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupFailureConditionLevelConverter">
            <summary>
            Type converter for the AvailabilityGroupFailureConditionLevel enum
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.AvailabilityGroupClusterTypeConverter">
            <summary>
            Type converter for the AvailabilityGroupClusterType enum
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Util">
            <summary>
            Contains common utility functions
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Util.DbTypeToClrType(System.String)">
            <summary>
            Convert a database type name to the equivalent CLS type
            </summary>
            <param name="strDBType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Util.TransformToRequest(System.Data.DataSet,Microsoft.SqlServer.Management.Sdk.Sfc.ResultType)">
            <summary>
            Transform a dataset into the expected enumeration result type
            </summary>
            <param name="ds"></param>
            <param name="res"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Util.EscapeString(System.String,System.Char)">
            <summary>
            Escape a particular character in a string
            </summary>
            <param name="value">The string</param>
            <param name="escapeCharacter">The character to escape</param>
            <returns>The equivalent string with the character escaped</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Util.IsNullOrWhiteSpace(System.String)">
            <summary>
            To be removed with transition to .NET 4.0 since it is implemented in Framework
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PathType">
            <summary>
            Denotes the type of file path for PathWrapper methods
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.PathWrapper">
            <summary>
            Helper class to deal with Path manipulation and handles XI paths as well.
            We could take ServerConnection as a parameter and get the PathSeparator from it but these might be used in offline
            situations too
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.PathSeparatorFromServerConnection(Microsoft.SqlServer.Management.Common.ServerConnection)">
            <summary>
            Returns the appropriate path separator string for the given server connection
            </summary>
            <param name="serverConnection"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.Combine(System.String,System.String)">
            <summary>
            Combine 2 path strings. Needed to handle XI path as well.
            </summary>
            <param name="path1">First string.</param>
            <param name="path2">Second string</param>
            <returns>combined path string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.Combine(System.String,System.String,Microsoft.SqlServer.Management.Smo.PathType)">
            <summary>
            Combine 2 path strings. Needed to handle XI path as well.
            </summary>
            <param name="path1">First string.</param>
            <param name="path2">Second string</param>
            <param name="pathType">type of path. If Unspecified, the function will use Linux if s1 starts with /, Windows otherwise </param>
            <returns>combined path string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.GetDirectoryName(System.String)">
            <summary>
            Returns the directory string given a path. Handles XI path. It is a simple
            wrapper so it will be Garbage-In|Garbage-out. 
            </summary>
            <param name="s1">Original path.</param>
            <returns>directory string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.GetDirectoryName(System.String,Microsoft.SqlServer.Management.Smo.PathType)">
            <summary>
            Returns the directory string given a path. Handles XI path. It is a simple
            wrapper so it will be Garbage-In|Garbage-out. 
            </summary>
            <param name="s1">Original path.</param>
            <param name="pathType">type of path. If Unspecified, the function will use Linux if s1 starts with /, Windows otherwise </param>        
            <returns>directory string</returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.IsXIPath(System.String)">
            <summary>
            Given a path returns true if the path is a XI path
            </summary>
            <param name="s1">Original path.</param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.IsRooted(System.String)">
            <summary>
            Determines if the path includes a root, such as a UNC path or a drive
            letter on Windows, or begins with / on Linux
            If the path starts with / the path is treated as a Linux path, otherwise as a Windows path
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.PathWrapper.IsRooted(System.String,Microsoft.SqlServer.Management.Smo.PathType)">
            <summary>
            Determines if the path includes a root, such as a UNC path or a drive
            letter on Windows, or begins with / on Linux
            </summary>
            <param name="path"></param>
            <param name="pathType">The type of path. If set to Unspecified - if the path starts with / the path is treated as a Linux path, otherwise as a Windows path
            </param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlRead">
             <summary>
            base class for parsing a xml configuration file</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>
            intialize from another XmlReader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.#ctor">
             <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.Close">
             <summary>
            finish parsing this element; step until the next element</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.Skip">
             <summary>
            skip this element</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.IsElementWithCheckVersion(System.String)">
            <summary>
            Check if the current Element has the specified name, skipping any
            version elements along the way for which the version requirements
            aren't met
            </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.GetAliasString(System.String)">
             <summary>
            apply the alias on the string str and return the result</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.GetFields(System.String)">
             <summary>
            read a 'fields' entry ( list of fields separated by '#' )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRead.GetTextOfElement">
             <summary>
            reads the text of the current element if available
            it assumes the curent element is empty or has inside it either a text node or 
            an element node. probably a link_multiple.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.Reader">
             <summary>
            get the XmlTextReader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.Closed">
             <summary>
            true if the current element has been fully read</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.DatabaseEngineType">
             <summary>
            get database engine type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.Version">
             <summary>
            get server version</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.DatabaseEngineEdition">
            <summary>
            The DatabaseEngineEdition for the server connection
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRead.Alias">
             <summary>
            an alias that is to be used when parsing the file</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadRepeated">
             <summary>
            read an element that is repated more then once
             ( e.g. a list of property tags )</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadRepeated.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with the reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadRepeated.#ctor">
             <summary>
            default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadRepeated.Next">
             <summary>
            step to the next element
            return false if there are no more siblings</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadRepeated.Next(System.String)">
             <summary>
            step to the next element with the given name</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadDoc">
             <summary>
            read an xml configuration file</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadDoc.#ctor(Microsoft.SqlServer.Management.Common.ServerVersion,System.String,Microsoft.SqlServer.Management.Common.DatabaseEngineType,Microsoft.SqlServer.Management.Common.DatabaseEngineEdition)">
             <summary>
            initialize server version and alias</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadDoc.LoadFile(System.Reflection.Assembly,System.String)">
             <summary>
            load the file attached as a resource to the assembly</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadDoc.LoadXml(System.IO.Stream)">
            <summary>
            Initializes ReadXml from the given Stream. Ownership of the Stream is taken over by the XmlReadDoc
            </summary>
            <param name="xmlStream"></param>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadDoc.Close">
             <summary>
            close the reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadDoc.ReadUnion">
             <summary>
            try to read an UNION tag, return true if succesfull</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadDoc.Settings">
             <summary>
            read a SETTINGS tag</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadDoc.Properties">
             <summary>
            read a PROPERTIES tag</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadProperties">
             <summary>
            class for reading a list of properties</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadProperties.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>
            intialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperties.Property">
             <summary>
            get a PROPERTY</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperties.Include">
             <summary>
            get an INCLUDE</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadInclude">
             <summary>
            class for reading an INCLUDE</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadInclude.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>
            intialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadInclude.File">
             <summary>
            get attribute - file to be included</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadInclude.TableAlias">
             <summary>
            get attribute - alias to be used</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadInclude.RequestedFields">
             <summary>
            get attribute - fields to be loaded</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadInclude.ROAfterCreation">
             <summary>
            get attribute - fields to be loaded</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadProperty">
             <summary>
            class for reading a property</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadProperty.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Name">
             <summary>
            get attribute - property name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.ReadOnly">
             <summary>
            get attribute - property is readonly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.ClrType">
             <summary>
            get the clr type for this property</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.ExtendedType">
             <summary>
            get attribute - if it is extended</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.DbType">
             <summary>
            get attribute - database type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Expensive">
             <summary>
            get attribute - if it is expensive</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.ReadOnlyAfterCreation">
             <summary>
            get attribute - if it is read only after creation</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.KeyIndex">
             <summary>
            get attribute - if it is key</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.PropertyMode">
            <summary>
            get attribute - mode of the property
            </summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Cast">
             <summary>
            get attribute - if it requires cast</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Hidden">
             <summary>
            get attribute - if it should be hidden from the user</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Usage">
             <summary>
            get attribute - whre can this property be used ( request, filter, order by)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Value">
             <summary>
            get attribute - tsql representation</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Table">
             <summary>
            required table</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Link">
             <summary>
            get attribute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.Size">
             <summary>
            get attribute - size if it is a string for example</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.HasPropertyLink">
             <summary>
            has lik to other properties</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadProperty.MultipleLink">
             <summary>
            read a multiple link</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadSettings">
             <summary>
            class to read the SETTING tag</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadSettings.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.MainTable">
             <summary>
            get attribute - main table ( not used anymore )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.AdditionalFilter">
             <summary>
            get attribute - filter ( not used anymore )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.Distinct">
             <summary>
            get attribute - the select is distinct</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.HasPropertyLink">
             <summary>
            main table or filter has been set</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.ParentLink">
             <summary>
            read the parent link</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.FailCondition">
             <summary>
            read the fail condition</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.RequestParentSelect">
             <summary>
            read the request_parent_select</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.Include">
             <summary>
            read the include</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.PropertyLink">
             <summary>
            read the property link</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.Prefix">
             <summary>
            read prefix</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.Postfix">
             <summary>
            read postfix</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.PostProcess">
             <summary>
            read post_process</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.OrderByRedirect">
             <summary>
            read order_by_redirect</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSettings.SpecialQuery">
             <summary>
            read special query</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadParentLink">
             <summary>
            class to read a parent link</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadParentLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initalize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadParentLink.SimpleParentLink">
             <summary>
            read a simple parent link</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadParentLink.MultipleLink">
             <summary>
            read a multiple_link</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelect">
             <summary>
            class to read a request_parent_select</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelect.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelect.Field">
             <summary>
            get attribute - field</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink">
             <summary>
            class to read a simple parent linkd</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink.Next">
             <summary>
            go to the next local-parent pair ( link tag )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink.Local">
             <summary>
            get the local property</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSimpleParentLink.Parent">
             <summary>
            get the parent property</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelectField">
             <summary>
            claa to read a parent select field</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelectField.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelectField.Next">
             <summary>
            go to the next field</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlRequestParentSelectField.Name">
             <summary>
            get attribute - name</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink">
             <summary>
            class to read a multiple link</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink.No">
             <summary>
            get attribute - number of links</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink.Expression">
             <summary>
            get attribute - link expression</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadMultipleLink.LinkFields">
             <summary>
            read the link_fileds</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.LinkFieldType">
             <summary>
            type of the field in link</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LinkFieldType.Parent">
             <summary>   
            parent property</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LinkFieldType.Local">
             <summary>       
            local property</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LinkFieldType.Computed">
             <summary>
            computed property</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.LinkFieldType.Filter">
             <summary>
            property is deduced from filter</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadLinkFields">
             <summary>
            class to read link_fields</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadLinkFields.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadLinkFields.Type">
             <summary>
            get attribute - link filed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadLinkFields.Field">
             <summary>
            get attribute - field name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadLinkFields.DefaultValue">
             <summary>
            get attribute - default value if it cannot be deduced from the filter</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink">
             <summary>
            class to read a property link</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.Next">
             <summary>
            get attribute - get the next property link</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.Fields">
             <summary>
            get attribute - list of triggering fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.Table">
             <summary>
            get attribute - table name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.TableAlias">
             <summary>
            get attribute - table alias in the query</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.InnerJoin">
             <summary>
            get attribute - join table name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.ExpressionIsForTableName">
             <summary>
            get attribute - expression is not for the filter by it is the actuall table name 
            ( used to create the table name with multiple link )</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.LeftJoin">
             <summary>
            get attribute - read the left join table</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.Filter">
             <summary>
            get attribute - read the filter</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadPropertyLink.MultipleLink">
             <summary>
            get a multiple_link</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement">
             <summary>
            class to read a conditioned statement</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement.Sql">
             <summary>
            get attribute - tsql</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement.Fields">
             <summary>
            get attribute - list of triggering fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatement.MultipleLink">
             <summary>
            read multiple_link</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPrefix">
             <summary>
            class to read a prefix tag</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPrefix.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPrefix.Next">
             <summary>
            go to the next prefix</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementFailCondition">
             <summary>
            class to read a fail_condition</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementFailCondition.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementFailCondition.Next">
             <summary>
            go to the next fail_condition</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostfix">
             <summary>
            class to read postfix</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostfix.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostfix.Next">
             <summary>
            get next postfix</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess">
             <summary>
            class to read a post_process</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess.Next">
             <summary>
            get the next post process</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess.ClassName">
             <summary>
            get attribute - post process clr class name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess.Fields">
             <summary>
            get attribute - list of triggering fields</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadConditionedStatementPostProcess.TriggeredFields">
             <summary>
            get attribute - list of triggered fields</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadOrderByRedirect">
             <summary>
            read an redirect_orderby</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadOrderByRedirect.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadOrderByRedirect.Next">
             <summary>
            get next redirect_orderby</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadOrderByRedirect.Field">
             <summary>
            get attribute - field for which to redirect</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadOrderByRedirect.RedirectFields">
             <summary>
            get attribute - list of redirect fields</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.XmlReadSpecialQuery">
             <summary>
            class to read a special query</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.XmlReadSpecialQuery.#ctor(Microsoft.SqlServer.Management.Smo.XmlRead)">
             <summary>   
            initialize with reader</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSpecialQuery.Database">
             <summary>
            get attribute - database name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSpecialQuery.Query">
             <summary>
            get attribute - query</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.XmlReadSpecialQuery.Hint">
            <summary>
            Used to get attribute 'query hint'
            for the query being generated.
            For example:
            SELECT (...)  OPTION (FORCE ORDER)
            Here, 'FORCE ORDER' is the query hint text
            used within 'special_tag' in table.xml
            </summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventValues">
            <summary>enum for ServerDdlTriggerEvent</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent">
            <summary> ServerDdlTriggerEvent</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.#ctor(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventValues)">
            <summary>constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.op_Implicit(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)~Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet">
            <summary>cast operator</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.op_Addition(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>add to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.Add(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>add to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.op_BitwiseOr(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>'or' to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.BitwiseOr(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>'or' to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.ToString">
            <summary>event string representation</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.Value">
            <summary>get value</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AddRoleMember">
            <summary>define static property for AddRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AddServerRoleMember">
            <summary>define static property for AddServerRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AddSignature">
            <summary>define static property for AddSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AddSignatureSchemaObject">
            <summary>define static property for AddSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterApplicationRole">
            <summary>define static property for AlterApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAssembly">
            <summary>define static property for AlterAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAsymmetricKey">
            <summary>define static property for AlterAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAudit">
            <summary>define static property for AlterAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAuthorizationDatabase">
            <summary>define static property for AlterAuthorizationDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAuthorizationServer">
            <summary>define static property for AlterAuthorizationServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterAvailabilityGroup">
            <summary>define static property for AlterAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterBrokerPriority">
            <summary>define static property for AlterBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterCertificate">
            <summary>define static property for AlterCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterColumnEncryptionKey">
            <summary>define static property for AlterColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterCredential">
            <summary>define static property for AlterCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterCryptographicProvider">
            <summary>define static property for AlterCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterDatabase">
            <summary>define static property for AlterDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterDatabaseAuditSpecification">
            <summary>define static property for AlterDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterDatabaseEncryptionKey">
            <summary>define static property for AlterDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterEndpoint">
            <summary>define static property for AlterEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterEventSession">
            <summary>define static property for AlterEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterExtendedProperty">
            <summary>define static property for AlterExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterFulltextCatalog">
            <summary>define static property for AlterFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterFulltextIndex">
            <summary>define static property for AlterFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterFulltextStoplist">
            <summary>define static property for AlterFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterFunction">
            <summary>define static property for AlterFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterIndex">
            <summary>define static property for AlterIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterInstance">
            <summary>define static property for AlterInstance</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterLinkedServer">
            <summary>define static property for AlterLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterLogin">
            <summary>define static property for AlterLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterMasterKey">
            <summary>define static property for AlterMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterMessage">
            <summary>define static property for AlterMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterMessageType">
            <summary>define static property for AlterMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterPartitionFunction">
            <summary>define static property for AlterPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterPartitionScheme">
            <summary>define static property for AlterPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterPlanGuide">
            <summary>define static property for AlterPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterProcedure">
            <summary>define static property for AlterProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterQueue">
            <summary>define static property for AlterQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterRemoteServer">
            <summary>define static property for AlterRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterRemoteServiceBinding">
            <summary>define static property for AlterRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterResourceGovernorConfig">
            <summary>define static property for AlterResourceGovernorConfig</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterResourcePool">
            <summary>define static property for AlterResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterRole">
            <summary>define static property for AlterRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterRoute">
            <summary>define static property for AlterRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterSchema">
            <summary>define static property for AlterSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterSearchPropertyList">
            <summary>define static property for AlterSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterSecurityPolicy">
            <summary>define static property for AlterSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterSequence">
            <summary>define static property for AlterSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterServerAudit">
            <summary>define static property for AlterServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterServerAuditSpecification">
            <summary>define static property for AlterServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterServerRole">
            <summary>define static property for AlterServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterService">
            <summary>define static property for AlterService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterServiceMasterKey">
            <summary>define static property for AlterServiceMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterSymmetricKey">
            <summary>define static property for AlterSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterTable">
            <summary>define static property for AlterTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterTrigger">
            <summary>define static property for AlterTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterUser">
            <summary>define static property for AlterUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterView">
            <summary>define static property for AlterView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterWorkloadGroup">
            <summary>define static property for AlterWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.AlterXmlSchemaCollection">
            <summary>define static property for AlterXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.BindDefault">
            <summary>define static property for BindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.BindRule">
            <summary>define static property for BindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateApplicationRole">
            <summary>define static property for CreateApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateAssembly">
            <summary>define static property for CreateAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateAsymmetricKey">
            <summary>define static property for CreateAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateAudit">
            <summary>define static property for CreateAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateAvailabilityGroup">
            <summary>define static property for CreateAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateBrokerPriority">
            <summary>define static property for CreateBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateCertificate">
            <summary>define static property for CreateCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateColumnEncryptionKey">
            <summary>define static property for CreateColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateColumnMasterKey">
            <summary>define static property for CreateColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateContract">
            <summary>define static property for CreateContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateCredential">
            <summary>define static property for CreateCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateCryptographicProvider">
            <summary>define static property for CreateCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateDatabase">
            <summary>define static property for CreateDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateDatabaseAuditSpecification">
            <summary>define static property for CreateDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateDatabaseEncryptionKey">
            <summary>define static property for CreateDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateDefault">
            <summary>define static property for CreateDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateEndpoint">
            <summary>define static property for CreateEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateEventNotification">
            <summary>define static property for CreateEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateEventSession">
            <summary>define static property for CreateEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateExtendedProcedure">
            <summary>define static property for CreateExtendedProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateExtendedProperty">
            <summary>define static property for CreateExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateFulltextCatalog">
            <summary>define static property for CreateFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateFulltextIndex">
            <summary>define static property for CreateFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateFulltextStoplist">
            <summary>define static property for CreateFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateFunction">
            <summary>define static property for CreateFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateIndex">
            <summary>define static property for CreateIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateLinkedServer">
            <summary>define static property for CreateLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateLinkedServerLogin">
            <summary>define static property for CreateLinkedServerLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateLogin">
            <summary>define static property for CreateLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateMasterKey">
            <summary>define static property for CreateMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateMessage">
            <summary>define static property for CreateMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateMessageType">
            <summary>define static property for CreateMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreatePartitionFunction">
            <summary>define static property for CreatePartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreatePartitionScheme">
            <summary>define static property for CreatePartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreatePlanGuide">
            <summary>define static property for CreatePlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateProcedure">
            <summary>define static property for CreateProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateQueue">
            <summary>define static property for CreateQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateRemoteServer">
            <summary>define static property for CreateRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateRemoteServiceBinding">
            <summary>define static property for CreateRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateResourcePool">
            <summary>define static property for CreateResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateRole">
            <summary>define static property for CreateRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateRoute">
            <summary>define static property for CreateRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateRule">
            <summary>define static property for CreateRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSchema">
            <summary>define static property for CreateSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSearchPropertyList">
            <summary>define static property for CreateSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSecurityPolicy">
            <summary>define static property for CreateSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSequence">
            <summary>define static property for CreateSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateServerAudit">
            <summary>define static property for CreateServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateServerAuditSpecification">
            <summary>define static property for CreateServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateServerRole">
            <summary>define static property for CreateServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateService">
            <summary>define static property for CreateService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSpatialIndex">
            <summary>define static property for CreateSpatialIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateStatistics">
            <summary>define static property for CreateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSymmetricKey">
            <summary>define static property for CreateSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateSynonym">
            <summary>define static property for CreateSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateTable">
            <summary>define static property for CreateTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateTrigger">
            <summary>define static property for CreateTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateType">
            <summary>define static property for CreateType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateUser">
            <summary>define static property for CreateUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateView">
            <summary>define static property for CreateView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateWorkloadGroup">
            <summary>define static property for CreateWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateXmlIndex">
            <summary>define static property for CreateXmlIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.CreateXmlSchemaCollection">
            <summary>define static property for CreateXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DenyDatabase">
            <summary>define static property for DenyDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DenyServer">
            <summary>define static property for DenyServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropApplicationRole">
            <summary>define static property for DropApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropAssembly">
            <summary>define static property for DropAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropAsymmetricKey">
            <summary>define static property for DropAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropAudit">
            <summary>define static property for DropAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropAvailabilityGroup">
            <summary>define static property for DropAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropBrokerPriority">
            <summary>define static property for DropBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropCertificate">
            <summary>define static property for DropCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropColumnEncryptionKey">
            <summary>define static property for DropColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropColumnMasterKey">
            <summary>define static property for DropColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropContract">
            <summary>define static property for DropContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropCredential">
            <summary>define static property for DropCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropCryptographicProvider">
            <summary>define static property for DropCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropDatabase">
            <summary>define static property for DropDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropDatabaseAuditSpecification">
            <summary>define static property for DropDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropDatabaseEncryptionKey">
            <summary>define static property for DropDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropDefault">
            <summary>define static property for DropDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropEndpoint">
            <summary>define static property for DropEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropEventNotification">
            <summary>define static property for DropEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropEventSession">
            <summary>define static property for DropEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropExtendedProcedure">
            <summary>define static property for DropExtendedProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropExtendedProperty">
            <summary>define static property for DropExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropFulltextCatalog">
            <summary>define static property for DropFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropFulltextIndex">
            <summary>define static property for DropFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropFulltextStoplist">
            <summary>define static property for DropFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropFunction">
            <summary>define static property for DropFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropIndex">
            <summary>define static property for DropIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropLinkedServer">
            <summary>define static property for DropLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropLinkedServerLogin">
            <summary>define static property for DropLinkedServerLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropLogin">
            <summary>define static property for DropLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropMasterKey">
            <summary>define static property for DropMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropMessage">
            <summary>define static property for DropMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropMessageType">
            <summary>define static property for DropMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropPartitionFunction">
            <summary>define static property for DropPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropPartitionScheme">
            <summary>define static property for DropPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropPlanGuide">
            <summary>define static property for DropPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropProcedure">
            <summary>define static property for DropProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropQueue">
            <summary>define static property for DropQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRemoteServer">
            <summary>define static property for DropRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRemoteServiceBinding">
            <summary>define static property for DropRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropResourcePool">
            <summary>define static property for DropResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRole">
            <summary>define static property for DropRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRoleMember">
            <summary>define static property for DropRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRoute">
            <summary>define static property for DropRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropRule">
            <summary>define static property for DropRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSchema">
            <summary>define static property for DropSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSearchPropertyList">
            <summary>define static property for DropSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSecurityPolicy">
            <summary>define static property for DropSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSequence">
            <summary>define static property for DropSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropServerAudit">
            <summary>define static property for DropServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropServerAuditSpecification">
            <summary>define static property for DropServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropServerRole">
            <summary>define static property for DropServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropServerRoleMember">
            <summary>define static property for DropServerRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropService">
            <summary>define static property for DropService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSignature">
            <summary>define static property for DropSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSignatureSchemaObject">
            <summary>define static property for DropSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropStatistics">
            <summary>define static property for DropStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSymmetricKey">
            <summary>define static property for DropSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropSynonym">
            <summary>define static property for DropSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropTable">
            <summary>define static property for DropTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropTrigger">
            <summary>define static property for DropTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropType">
            <summary>define static property for DropType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropUser">
            <summary>define static property for DropUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropView">
            <summary>define static property for DropView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropWorkloadGroup">
            <summary>define static property for DropWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.DropXmlSchemaCollection">
            <summary>define static property for DropXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.GrantDatabase">
            <summary>define static property for GrantDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.GrantServer">
            <summary>define static property for GrantServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.Logon">
            <summary>define static property for Logon</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.Rename">
            <summary>define static property for Rename</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.RevokeDatabase">
            <summary>define static property for RevokeDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.RevokeServer">
            <summary>define static property for RevokeServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.UnbindDefault">
            <summary>define static property for UnbindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.UnbindRule">
            <summary>define static property for UnbindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent.UpdateStatistics">
            <summary>define static property for UpdateStatistics</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet">
            <summary>class ServerDdlTriggerEventSet </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#ctor">
            <summary>default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet)">
            <summary>copy constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>constructor initialize with an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent[])">
            <summary>constructor initialize with a list of events</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#ctor(System.Collections.BitArray)">
            <summary>initialize from BitArray</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Copy">
            <summary>copy</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.SetBit(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>set bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ResetBit(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>reset bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Add(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>set bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Remove(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>reset bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.op_Addition(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>add an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Add(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>add an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.op_Subtraction(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>remove an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Subtract(Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEvent)">
            <summary>remove an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ToString">
            <summary>return string representation</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.#cctor">
            <summary>static constructor
             init here all the static composite bitflags, because we do not want 
             to recreate it every time we will do an operation with it.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlauthorizationservereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlavailabilitygroupeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlcredentialeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlcryptographicprovidereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddldatabaseeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlendpointeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddleventsessioneventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlextendedprocedureeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlgdrservereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddllinkedservereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddllinkedserverlogineventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddllogineventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlmessageeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlremoteservereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlresourcegovernoreventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlworkloadgroupevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlresourcepoolevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlserverauditeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlserverauditspecificationeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlserverleveleventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlserversecurityeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.ddlservicemasterkeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.NumberOfElements">
            <summary>return number of elements</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Dirty">
            <summary>true if the event set has been modified</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AddRoleMember">
            <summary>define property for AddRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AddServerRoleMember">
            <summary>define property for AddServerRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AddSignature">
            <summary>define property for AddSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AddSignatureSchemaObject">
            <summary>define property for AddSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterApplicationRole">
            <summary>define property for AlterApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAssembly">
            <summary>define property for AlterAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAsymmetricKey">
            <summary>define property for AlterAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAudit">
            <summary>define property for AlterAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAuthorizationDatabase">
            <summary>define property for AlterAuthorizationDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAuthorizationServer">
            <summary>define property for AlterAuthorizationServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterAvailabilityGroup">
            <summary>define property for AlterAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterBrokerPriority">
            <summary>define property for AlterBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterCertificate">
            <summary>define property for AlterCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterColumnEncryptionKey">
            <summary>define property for AlterColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterCredential">
            <summary>define property for AlterCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterCryptographicProvider">
            <summary>define property for AlterCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterDatabase">
            <summary>define property for AlterDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterDatabaseAuditSpecification">
            <summary>define property for AlterDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterDatabaseEncryptionKey">
            <summary>define property for AlterDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterEndpoint">
            <summary>define property for AlterEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterEventSession">
            <summary>define property for AlterEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterExtendedProperty">
            <summary>define property for AlterExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterFulltextCatalog">
            <summary>define property for AlterFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterFulltextIndex">
            <summary>define property for AlterFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterFulltextStoplist">
            <summary>define property for AlterFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterFunction">
            <summary>define property for AlterFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterIndex">
            <summary>define property for AlterIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterInstance">
            <summary>define property for AlterInstance</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterLinkedServer">
            <summary>define property for AlterLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterLogin">
            <summary>define property for AlterLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterMasterKey">
            <summary>define property for AlterMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterMessage">
            <summary>define property for AlterMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterMessageType">
            <summary>define property for AlterMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterPartitionFunction">
            <summary>define property for AlterPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterPartitionScheme">
            <summary>define property for AlterPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterPlanGuide">
            <summary>define property for AlterPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterProcedure">
            <summary>define property for AlterProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterQueue">
            <summary>define property for AlterQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterRemoteServer">
            <summary>define property for AlterRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterRemoteServiceBinding">
            <summary>define property for AlterRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterResourceGovernorConfig">
            <summary>define property for AlterResourceGovernorConfig</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterResourcePool">
            <summary>define property for AlterResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterRole">
            <summary>define property for AlterRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterRoute">
            <summary>define property for AlterRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterSchema">
            <summary>define property for AlterSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterSearchPropertyList">
            <summary>define property for AlterSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterSecurityPolicy">
            <summary>define property for AlterSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterSequence">
            <summary>define property for AlterSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterServerAudit">
            <summary>define property for AlterServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterServerAuditSpecification">
            <summary>define property for AlterServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterServerRole">
            <summary>define property for AlterServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterService">
            <summary>define property for AlterService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterServiceMasterKey">
            <summary>define property for AlterServiceMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterSymmetricKey">
            <summary>define property for AlterSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterTable">
            <summary>define property for AlterTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterTrigger">
            <summary>define property for AlterTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterUser">
            <summary>define property for AlterUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterView">
            <summary>define property for AlterView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterWorkloadGroup">
            <summary>define property for AlterWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.AlterXmlSchemaCollection">
            <summary>define property for AlterXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.BindDefault">
            <summary>define property for BindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.BindRule">
            <summary>define property for BindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateApplicationRole">
            <summary>define property for CreateApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateAssembly">
            <summary>define property for CreateAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateAsymmetricKey">
            <summary>define property for CreateAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateAudit">
            <summary>define property for CreateAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateAvailabilityGroup">
            <summary>define property for CreateAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateBrokerPriority">
            <summary>define property for CreateBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateCertificate">
            <summary>define property for CreateCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateColumnEncryptionKey">
            <summary>define property for CreateColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateColumnMasterKey">
            <summary>define property for CreateColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateContract">
            <summary>define property for CreateContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateCredential">
            <summary>define property for CreateCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateCryptographicProvider">
            <summary>define property for CreateCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateDatabase">
            <summary>define property for CreateDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateDatabaseAuditSpecification">
            <summary>define property for CreateDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateDatabaseEncryptionKey">
            <summary>define property for CreateDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateDefault">
            <summary>define property for CreateDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateEndpoint">
            <summary>define property for CreateEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateEventNotification">
            <summary>define property for CreateEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateEventSession">
            <summary>define property for CreateEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateExtendedProcedure">
            <summary>define property for CreateExtendedProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateExtendedProperty">
            <summary>define property for CreateExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateFulltextCatalog">
            <summary>define property for CreateFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateFulltextIndex">
            <summary>define property for CreateFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateFulltextStoplist">
            <summary>define property for CreateFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateFunction">
            <summary>define property for CreateFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateIndex">
            <summary>define property for CreateIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateLinkedServer">
            <summary>define property for CreateLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateLinkedServerLogin">
            <summary>define property for CreateLinkedServerLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateLogin">
            <summary>define property for CreateLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateMasterKey">
            <summary>define property for CreateMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateMessage">
            <summary>define property for CreateMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateMessageType">
            <summary>define property for CreateMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreatePartitionFunction">
            <summary>define property for CreatePartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreatePartitionScheme">
            <summary>define property for CreatePartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreatePlanGuide">
            <summary>define property for CreatePlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateProcedure">
            <summary>define property for CreateProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateQueue">
            <summary>define property for CreateQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateRemoteServer">
            <summary>define property for CreateRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateRemoteServiceBinding">
            <summary>define property for CreateRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateResourcePool">
            <summary>define property for CreateResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateRole">
            <summary>define property for CreateRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateRoute">
            <summary>define property for CreateRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateRule">
            <summary>define property for CreateRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSchema">
            <summary>define property for CreateSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSearchPropertyList">
            <summary>define property for CreateSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSecurityPolicy">
            <summary>define property for CreateSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSequence">
            <summary>define property for CreateSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateServerAudit">
            <summary>define property for CreateServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateServerAuditSpecification">
            <summary>define property for CreateServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateServerRole">
            <summary>define property for CreateServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateService">
            <summary>define property for CreateService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSpatialIndex">
            <summary>define property for CreateSpatialIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateStatistics">
            <summary>define property for CreateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSymmetricKey">
            <summary>define property for CreateSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateSynonym">
            <summary>define property for CreateSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateTable">
            <summary>define property for CreateTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateTrigger">
            <summary>define property for CreateTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateType">
            <summary>define property for CreateType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateUser">
            <summary>define property for CreateUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateView">
            <summary>define property for CreateView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateWorkloadGroup">
            <summary>define property for CreateWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateXmlIndex">
            <summary>define property for CreateXmlIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.CreateXmlSchemaCollection">
            <summary>define property for CreateXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DenyDatabase">
            <summary>define property for DenyDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DenyServer">
            <summary>define property for DenyServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropApplicationRole">
            <summary>define property for DropApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropAssembly">
            <summary>define property for DropAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropAsymmetricKey">
            <summary>define property for DropAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropAudit">
            <summary>define property for DropAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropAvailabilityGroup">
            <summary>define property for DropAvailabilityGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropBrokerPriority">
            <summary>define property for DropBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropCertificate">
            <summary>define property for DropCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropColumnEncryptionKey">
            <summary>define property for DropColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropColumnMasterKey">
            <summary>define property for DropColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropContract">
            <summary>define property for DropContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropCredential">
            <summary>define property for DropCredential</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropCryptographicProvider">
            <summary>define property for DropCryptographicProvider</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropDatabase">
            <summary>define property for DropDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropDatabaseAuditSpecification">
            <summary>define property for DropDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropDatabaseEncryptionKey">
            <summary>define property for DropDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropDefault">
            <summary>define property for DropDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropEndpoint">
            <summary>define property for DropEndpoint</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropEventNotification">
            <summary>define property for DropEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropEventSession">
            <summary>define property for DropEventSession</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropExtendedProcedure">
            <summary>define property for DropExtendedProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropExtendedProperty">
            <summary>define property for DropExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropFulltextCatalog">
            <summary>define property for DropFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropFulltextIndex">
            <summary>define property for DropFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropFulltextStoplist">
            <summary>define property for DropFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropFunction">
            <summary>define property for DropFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropIndex">
            <summary>define property for DropIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropLinkedServer">
            <summary>define property for DropLinkedServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropLinkedServerLogin">
            <summary>define property for DropLinkedServerLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropLogin">
            <summary>define property for DropLogin</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropMasterKey">
            <summary>define property for DropMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropMessage">
            <summary>define property for DropMessage</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropMessageType">
            <summary>define property for DropMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropPartitionFunction">
            <summary>define property for DropPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropPartitionScheme">
            <summary>define property for DropPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropPlanGuide">
            <summary>define property for DropPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropProcedure">
            <summary>define property for DropProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropQueue">
            <summary>define property for DropQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRemoteServer">
            <summary>define property for DropRemoteServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRemoteServiceBinding">
            <summary>define property for DropRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropResourcePool">
            <summary>define property for DropResourcePool</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRole">
            <summary>define property for DropRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRoleMember">
            <summary>define property for DropRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRoute">
            <summary>define property for DropRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropRule">
            <summary>define property for DropRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSchema">
            <summary>define property for DropSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSearchPropertyList">
            <summary>define property for DropSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSecurityPolicy">
            <summary>define property for DropSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSequence">
            <summary>define property for DropSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropServerAudit">
            <summary>define property for DropServerAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropServerAuditSpecification">
            <summary>define property for DropServerAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropServerRole">
            <summary>define property for DropServerRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropServerRoleMember">
            <summary>define property for DropServerRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropService">
            <summary>define property for DropService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSignature">
            <summary>define property for DropSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSignatureSchemaObject">
            <summary>define property for DropSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropStatistics">
            <summary>define property for DropStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSymmetricKey">
            <summary>define property for DropSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropSynonym">
            <summary>define property for DropSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropTable">
            <summary>define property for DropTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropTrigger">
            <summary>define property for DropTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropType">
            <summary>define property for DropType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropUser">
            <summary>define property for DropUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropView">
            <summary>define property for DropView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropWorkloadGroup">
            <summary>define property for DropWorkloadGroup</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DropXmlSchemaCollection">
            <summary>define property for DropXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.GrantDatabase">
            <summary>define property for GrantDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.GrantServer">
            <summary>define property for GrantServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Logon">
            <summary>define property for Logon</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.Rename">
            <summary>define property for Rename</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.RevokeDatabase">
            <summary>define property for RevokeDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.RevokeServer">
            <summary>define property for RevokeServer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.UnbindDefault">
            <summary>define property for UnbindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.UnbindRule">
            <summary>define property for UnbindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.UpdateStatistics">
            <summary>define property for UpdateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlAuthorizationServerEventsEvents">
            <summary>get/set all events for ddlauthorizationservereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlAvailabilityGroupEventsEvents">
            <summary>get/set all events for ddlavailabilitygroupeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlCredentialEventsEvents">
            <summary>get/set all events for ddlcredentialeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlCryptographicProviderEventsEvents">
            <summary>get/set all events for ddlcryptographicprovidereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlDatabaseEventsEvents">
            <summary>get/set all events for ddldatabaseeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlEndpointEventsEvents">
            <summary>get/set all events for ddlendpointeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlEventSessionEventsEvents">
            <summary>get/set all events for ddleventsessioneventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlExtendedProcedureEventsEvents">
            <summary>get/set all events for ddlextendedprocedureeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlGdrServerEventsEvents">
            <summary>get/set all events for ddlgdrservereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlLinkedServerEventsEvents">
            <summary>get/set all events for ddllinkedservereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlLinkedServerLoginEventsEvents">
            <summary>get/set all events for ddllinkedserverlogineventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlLoginEventsEvents">
            <summary>get/set all events for ddllogineventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlMessageEventsEvents">
            <summary>get/set all events for ddlmessageeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlRemoteServerEventsEvents">
            <summary>get/set all events for ddlremoteservereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlResourceGovernorEventsEvents">
            <summary>get/set all events for ddlresourcegovernoreventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlWorkloadGroupEvents">
            <summary>get/set all events for ddlworkloadgroupevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlResourcePoolEvents">
            <summary>get/set all events for ddlresourcepoolevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlServerAuditEventsEvents">
            <summary>get/set all events for ddlserverauditeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlServerAuditSpecificationEventsEvents">
            <summary>get/set all events for ddlserverauditspecificationeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlServerLevelEventsEvents">
            <summary>get/set all events for ddlserverleveleventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlServerSecurityEventsEvents">
            <summary>get/set all events for ddlserversecurityeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.ServerDdlTriggerEventSet.DdlServiceMasterKeyEventsEvents">
            <summary>get/set all events for ddlservicemasterkeyeventsevents</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventValues">
            <summary>enum for DatabaseDdlTriggerEvent</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent">
            <summary> DatabaseDdlTriggerEvent</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.#ctor(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventValues)">
            <summary>constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.op_Implicit(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)~Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet">
            <summary>cast operator</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.op_Addition(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>add to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.Add(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>add to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.op_BitwiseOr(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>'or' to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.BitwiseOr(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>'or' to events resulting an event set</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.ToString">
            <summary>event string representation</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.Value">
            <summary>get value</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AddRoleMember">
            <summary>define static property for AddRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AddSignature">
            <summary>define static property for AddSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AddSignatureSchemaObject">
            <summary>define static property for AddSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterApplicationRole">
            <summary>define static property for AlterApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterAssembly">
            <summary>define static property for AlterAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterAsymmetricKey">
            <summary>define static property for AlterAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterAudit">
            <summary>define static property for AlterAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterAuthorizationDatabase">
            <summary>define static property for AlterAuthorizationDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterBrokerPriority">
            <summary>define static property for AlterBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterCertificate">
            <summary>define static property for AlterCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterColumnEncryptionKey">
            <summary>define static property for AlterColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterDatabaseAuditSpecification">
            <summary>define static property for AlterDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterDatabaseEncryptionKey">
            <summary>define static property for AlterDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterExtendedProperty">
            <summary>define static property for AlterExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterFulltextCatalog">
            <summary>define static property for AlterFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterFulltextIndex">
            <summary>define static property for AlterFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterFulltextStoplist">
            <summary>define static property for AlterFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterFunction">
            <summary>define static property for AlterFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterIndex">
            <summary>define static property for AlterIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterMasterKey">
            <summary>define static property for AlterMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterMessageType">
            <summary>define static property for AlterMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterPartitionFunction">
            <summary>define static property for AlterPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterPartitionScheme">
            <summary>define static property for AlterPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterPlanGuide">
            <summary>define static property for AlterPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterProcedure">
            <summary>define static property for AlterProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterQueue">
            <summary>define static property for AlterQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterRemoteServiceBinding">
            <summary>define static property for AlterRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterRole">
            <summary>define static property for AlterRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterRoute">
            <summary>define static property for AlterRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterSchema">
            <summary>define static property for AlterSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterSearchPropertyList">
            <summary>define static property for AlterSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterSecurityPolicy">
            <summary>define static property for AlterSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterSequence">
            <summary>define static property for AlterSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterService">
            <summary>define static property for AlterService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterSymmetricKey">
            <summary>define static property for AlterSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterTable">
            <summary>define static property for AlterTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterTrigger">
            <summary>define static property for AlterTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterUser">
            <summary>define static property for AlterUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterView">
            <summary>define static property for AlterView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.AlterXmlSchemaCollection">
            <summary>define static property for AlterXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.BindDefault">
            <summary>define static property for BindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.BindRule">
            <summary>define static property for BindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateApplicationRole">
            <summary>define static property for CreateApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateAssembly">
            <summary>define static property for CreateAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateAsymmetricKey">
            <summary>define static property for CreateAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateAudit">
            <summary>define static property for CreateAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateBrokerPriority">
            <summary>define static property for CreateBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateCertificate">
            <summary>define static property for CreateCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateColumnEncryptionKey">
            <summary>define static property for CreateColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateColumnMasterKey">
            <summary>define static property for CreateColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateContract">
            <summary>define static property for CreateContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateDatabaseAuditSpecification">
            <summary>define static property for CreateDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateDatabaseEncryptionKey">
            <summary>define static property for CreateDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateDefault">
            <summary>define static property for CreateDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateEventNotification">
            <summary>define static property for CreateEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateExtendedProperty">
            <summary>define static property for CreateExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateFulltextCatalog">
            <summary>define static property for CreateFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateFulltextIndex">
            <summary>define static property for CreateFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateFulltextStoplist">
            <summary>define static property for CreateFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateFunction">
            <summary>define static property for CreateFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateIndex">
            <summary>define static property for CreateIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateMasterKey">
            <summary>define static property for CreateMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateMessageType">
            <summary>define static property for CreateMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreatePartitionFunction">
            <summary>define static property for CreatePartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreatePartitionScheme">
            <summary>define static property for CreatePartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreatePlanGuide">
            <summary>define static property for CreatePlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateProcedure">
            <summary>define static property for CreateProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateQueue">
            <summary>define static property for CreateQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateRemoteServiceBinding">
            <summary>define static property for CreateRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateRole">
            <summary>define static property for CreateRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateRoute">
            <summary>define static property for CreateRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateRule">
            <summary>define static property for CreateRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSchema">
            <summary>define static property for CreateSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSearchPropertyList">
            <summary>define static property for CreateSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSecurityPolicy">
            <summary>define static property for CreateSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSequence">
            <summary>define static property for CreateSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateService">
            <summary>define static property for CreateService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSpatialIndex">
            <summary>define static property for CreateSpatialIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateStatistics">
            <summary>define static property for CreateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSymmetricKey">
            <summary>define static property for CreateSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateSynonym">
            <summary>define static property for CreateSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateTable">
            <summary>define static property for CreateTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateTrigger">
            <summary>define static property for CreateTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateType">
            <summary>define static property for CreateType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateUser">
            <summary>define static property for CreateUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateView">
            <summary>define static property for CreateView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateXmlIndex">
            <summary>define static property for CreateXmlIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.CreateXmlSchemaCollection">
            <summary>define static property for CreateXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DenyDatabase">
            <summary>define static property for DenyDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropApplicationRole">
            <summary>define static property for DropApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropAssembly">
            <summary>define static property for DropAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropAsymmetricKey">
            <summary>define static property for DropAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropAudit">
            <summary>define static property for DropAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropBrokerPriority">
            <summary>define static property for DropBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropCertificate">
            <summary>define static property for DropCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropColumnEncryptionKey">
            <summary>define static property for DropColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropColumnMasterKey">
            <summary>define static property for DropColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropContract">
            <summary>define static property for DropContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropDatabaseAuditSpecification">
            <summary>define static property for DropDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropDatabaseEncryptionKey">
            <summary>define static property for DropDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropDefault">
            <summary>define static property for DropDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropEventNotification">
            <summary>define static property for DropEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropExtendedProperty">
            <summary>define static property for DropExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropFulltextCatalog">
            <summary>define static property for DropFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropFulltextIndex">
            <summary>define static property for DropFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropFulltextStoplist">
            <summary>define static property for DropFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropFunction">
            <summary>define static property for DropFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropIndex">
            <summary>define static property for DropIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropMasterKey">
            <summary>define static property for DropMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropMessageType">
            <summary>define static property for DropMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropPartitionFunction">
            <summary>define static property for DropPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropPartitionScheme">
            <summary>define static property for DropPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropPlanGuide">
            <summary>define static property for DropPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropProcedure">
            <summary>define static property for DropProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropQueue">
            <summary>define static property for DropQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropRemoteServiceBinding">
            <summary>define static property for DropRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropRole">
            <summary>define static property for DropRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropRoleMember">
            <summary>define static property for DropRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropRoute">
            <summary>define static property for DropRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropRule">
            <summary>define static property for DropRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSchema">
            <summary>define static property for DropSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSearchPropertyList">
            <summary>define static property for DropSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSecurityPolicy">
            <summary>define static property for DropSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSequence">
            <summary>define static property for DropSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropService">
            <summary>define static property for DropService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSignature">
            <summary>define static property for DropSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSignatureSchemaObject">
            <summary>define static property for DropSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropStatistics">
            <summary>define static property for DropStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSymmetricKey">
            <summary>define static property for DropSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropSynonym">
            <summary>define static property for DropSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropTable">
            <summary>define static property for DropTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropTrigger">
            <summary>define static property for DropTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropType">
            <summary>define static property for DropType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropUser">
            <summary>define static property for DropUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropView">
            <summary>define static property for DropView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.DropXmlSchemaCollection">
            <summary>define static property for DropXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.GrantDatabase">
            <summary>define static property for GrantDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.Rename">
            <summary>define static property for Rename</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.RevokeDatabase">
            <summary>define static property for RevokeDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.UnbindDefault">
            <summary>define static property for UnbindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.UnbindRule">
            <summary>define static property for UnbindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent.UpdateStatistics">
            <summary>define static property for UpdateStatistics</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet">
            <summary>class DatabaseDdlTriggerEventSet </summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#ctor">
            <summary>default constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet)">
            <summary>copy constructor</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>constructor initialize with an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#ctor(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent[])">
            <summary>constructor initialize with a list of events</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#ctor(System.Collections.BitArray)">
            <summary>initialize from BitArray</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Copy">
            <summary>copy</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.SetBit(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>set bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ResetBit(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>reset bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Add(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>set bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Remove(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>reset bit for an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.op_Addition(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>add an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Add(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>add an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.op_Subtraction(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>remove an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Subtract(Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet,Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEvent)">
            <summary>remove an event</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ToString">
            <summary>return string representation</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.#cctor">
            <summary>static constructor
             init here all the static composite bitflags, because we do not want 
             to recreate it every time we will do an operation with it.</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlapplicationroleeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlassemblyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlasymmetrickeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlauthorizationdatabaseeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlremoteservicebindingeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlcertificateeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlcolumnencryptionkeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlcolumnmasterkeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlcontracteventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlcryptosignatureeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldatabaseleveleventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldatabaseauditeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldatabaseauditspecificationeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlmasterkeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldatabasesecurityeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldefaulteventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddldatabaseencryptionkeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddleventnotificationeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlextendedpropertyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlfulltextcatalogeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlfulltextstoplisteventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlfunctioneventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlgdrdatabaseeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlindexeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlmessagetypeeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlsymmetrickeyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlpartitioneventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlplanguideeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlbrokerpriorityeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlsearchpropertylisteventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlpartitionfunctioneventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlpartitionschemeeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlqueueeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlroleeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlrouteeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlruleeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlschemaeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlsecuritypolicyeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlsequenceeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlserviceeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlssbeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlstatisticseventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlprocedureeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlsynonymeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddltableeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddltablevieweventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddltriggereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddltypeeventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlusereventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlvieweventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.ddlxmlschemacollectioneventsevents">
            <summary>define event set for name</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.NumberOfElements">
            <summary>return number of elements</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Dirty">
            <summary>true if the event set has been modified</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AddRoleMember">
            <summary>define property for AddRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AddSignature">
            <summary>define property for AddSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AddSignatureSchemaObject">
            <summary>define property for AddSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterApplicationRole">
            <summary>define property for AlterApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterAssembly">
            <summary>define property for AlterAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterAsymmetricKey">
            <summary>define property for AlterAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterAudit">
            <summary>define property for AlterAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterAuthorizationDatabase">
            <summary>define property for AlterAuthorizationDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterBrokerPriority">
            <summary>define property for AlterBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterCertificate">
            <summary>define property for AlterCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterColumnEncryptionKey">
            <summary>define property for AlterColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterDatabaseAuditSpecification">
            <summary>define property for AlterDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterDatabaseEncryptionKey">
            <summary>define property for AlterDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterExtendedProperty">
            <summary>define property for AlterExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterFulltextCatalog">
            <summary>define property for AlterFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterFulltextIndex">
            <summary>define property for AlterFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterFulltextStoplist">
            <summary>define property for AlterFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterFunction">
            <summary>define property for AlterFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterIndex">
            <summary>define property for AlterIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterMasterKey">
            <summary>define property for AlterMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterMessageType">
            <summary>define property for AlterMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterPartitionFunction">
            <summary>define property for AlterPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterPartitionScheme">
            <summary>define property for AlterPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterPlanGuide">
            <summary>define property for AlterPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterProcedure">
            <summary>define property for AlterProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterQueue">
            <summary>define property for AlterQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterRemoteServiceBinding">
            <summary>define property for AlterRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterRole">
            <summary>define property for AlterRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterRoute">
            <summary>define property for AlterRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterSchema">
            <summary>define property for AlterSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterSearchPropertyList">
            <summary>define property for AlterSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterSecurityPolicy">
            <summary>define property for AlterSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterSequence">
            <summary>define property for AlterSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterService">
            <summary>define property for AlterService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterSymmetricKey">
            <summary>define property for AlterSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterTable">
            <summary>define property for AlterTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterTrigger">
            <summary>define property for AlterTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterUser">
            <summary>define property for AlterUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterView">
            <summary>define property for AlterView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.AlterXmlSchemaCollection">
            <summary>define property for AlterXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.BindDefault">
            <summary>define property for BindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.BindRule">
            <summary>define property for BindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateApplicationRole">
            <summary>define property for CreateApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateAssembly">
            <summary>define property for CreateAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateAsymmetricKey">
            <summary>define property for CreateAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateAudit">
            <summary>define property for CreateAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateBrokerPriority">
            <summary>define property for CreateBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateCertificate">
            <summary>define property for CreateCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateColumnEncryptionKey">
            <summary>define property for CreateColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateColumnMasterKey">
            <summary>define property for CreateColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateContract">
            <summary>define property for CreateContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateDatabaseAuditSpecification">
            <summary>define property for CreateDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateDatabaseEncryptionKey">
            <summary>define property for CreateDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateDefault">
            <summary>define property for CreateDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateEventNotification">
            <summary>define property for CreateEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateExtendedProperty">
            <summary>define property for CreateExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateFulltextCatalog">
            <summary>define property for CreateFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateFulltextIndex">
            <summary>define property for CreateFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateFulltextStoplist">
            <summary>define property for CreateFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateFunction">
            <summary>define property for CreateFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateIndex">
            <summary>define property for CreateIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateMasterKey">
            <summary>define property for CreateMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateMessageType">
            <summary>define property for CreateMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreatePartitionFunction">
            <summary>define property for CreatePartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreatePartitionScheme">
            <summary>define property for CreatePartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreatePlanGuide">
            <summary>define property for CreatePlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateProcedure">
            <summary>define property for CreateProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateQueue">
            <summary>define property for CreateQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateRemoteServiceBinding">
            <summary>define property for CreateRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateRole">
            <summary>define property for CreateRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateRoute">
            <summary>define property for CreateRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateRule">
            <summary>define property for CreateRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSchema">
            <summary>define property for CreateSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSearchPropertyList">
            <summary>define property for CreateSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSecurityPolicy">
            <summary>define property for CreateSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSequence">
            <summary>define property for CreateSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateService">
            <summary>define property for CreateService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSpatialIndex">
            <summary>define property for CreateSpatialIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateStatistics">
            <summary>define property for CreateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSymmetricKey">
            <summary>define property for CreateSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateSynonym">
            <summary>define property for CreateSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateTable">
            <summary>define property for CreateTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateTrigger">
            <summary>define property for CreateTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateType">
            <summary>define property for CreateType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateUser">
            <summary>define property for CreateUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateView">
            <summary>define property for CreateView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateXmlIndex">
            <summary>define property for CreateXmlIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.CreateXmlSchemaCollection">
            <summary>define property for CreateXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DenyDatabase">
            <summary>define property for DenyDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropApplicationRole">
            <summary>define property for DropApplicationRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropAssembly">
            <summary>define property for DropAssembly</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropAsymmetricKey">
            <summary>define property for DropAsymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropAudit">
            <summary>define property for DropAudit</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropBrokerPriority">
            <summary>define property for DropBrokerPriority</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropCertificate">
            <summary>define property for DropCertificate</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropColumnEncryptionKey">
            <summary>define property for DropColumnEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropColumnMasterKey">
            <summary>define property for DropColumnMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropContract">
            <summary>define property for DropContract</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropDatabaseAuditSpecification">
            <summary>define property for DropDatabaseAuditSpecification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropDatabaseEncryptionKey">
            <summary>define property for DropDatabaseEncryptionKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropDefault">
            <summary>define property for DropDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropEventNotification">
            <summary>define property for DropEventNotification</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropExtendedProperty">
            <summary>define property for DropExtendedProperty</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropFulltextCatalog">
            <summary>define property for DropFulltextCatalog</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropFulltextIndex">
            <summary>define property for DropFulltextIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropFulltextStoplist">
            <summary>define property for DropFulltextStoplist</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropFunction">
            <summary>define property for DropFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropIndex">
            <summary>define property for DropIndex</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropMasterKey">
            <summary>define property for DropMasterKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropMessageType">
            <summary>define property for DropMessageType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropPartitionFunction">
            <summary>define property for DropPartitionFunction</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropPartitionScheme">
            <summary>define property for DropPartitionScheme</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropPlanGuide">
            <summary>define property for DropPlanGuide</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropProcedure">
            <summary>define property for DropProcedure</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropQueue">
            <summary>define property for DropQueue</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropRemoteServiceBinding">
            <summary>define property for DropRemoteServiceBinding</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropRole">
            <summary>define property for DropRole</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropRoleMember">
            <summary>define property for DropRoleMember</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropRoute">
            <summary>define property for DropRoute</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropRule">
            <summary>define property for DropRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSchema">
            <summary>define property for DropSchema</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSearchPropertyList">
            <summary>define property for DropSearchPropertyList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSecurityPolicy">
            <summary>define property for DropSecurityPolicy</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSequence">
            <summary>define property for DropSequence</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropService">
            <summary>define property for DropService</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSignature">
            <summary>define property for DropSignature</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSignatureSchemaObject">
            <summary>define property for DropSignatureSchemaObject</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropStatistics">
            <summary>define property for DropStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSymmetricKey">
            <summary>define property for DropSymmetricKey</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropSynonym">
            <summary>define property for DropSynonym</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropTable">
            <summary>define property for DropTable</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropTrigger">
            <summary>define property for DropTrigger</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropType">
            <summary>define property for DropType</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropUser">
            <summary>define property for DropUser</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropView">
            <summary>define property for DropView</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DropXmlSchemaCollection">
            <summary>define property for DropXmlSchemaCollection</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.GrantDatabase">
            <summary>define property for GrantDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.Rename">
            <summary>define property for Rename</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.RevokeDatabase">
            <summary>define property for RevokeDatabase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.UnbindDefault">
            <summary>define property for UnbindDefault</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.UnbindRule">
            <summary>define property for UnbindRule</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.UpdateStatistics">
            <summary>define property for UpdateStatistics</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlApplicationRoleEventsEvents">
            <summary>get/set all events for ddlapplicationroleeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlAssemblyEventsEvents">
            <summary>get/set all events for ddlassemblyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlAsymmetricKeyEventsEvents">
            <summary>get/set all events for ddlasymmetrickeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlAuthorizationDatabaseEventsEvents">
            <summary>get/set all events for ddlauthorizationdatabaseeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlRemoteServiceBindingEventsEvents">
            <summary>get/set all events for ddlremoteservicebindingeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlCertificateEventsEvents">
            <summary>get/set all events for ddlcertificateeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlColumnEncryptionKeyEventsEvents">
            <summary>get/set all events for ddlcolumnencryptionkeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlColumnMasterKeyEventsEvents">
            <summary>get/set all events for ddlcolumnmasterkeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlContractEventsEvents">
            <summary>get/set all events for ddlcontracteventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlCryptoSignatureEventsEvents">
            <summary>get/set all events for ddlcryptosignatureeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDatabaseLevelEventsEvents">
            <summary>get/set all events for ddldatabaseleveleventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDatabaseAuditEventsEvents">
            <summary>get/set all events for ddldatabaseauditeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDatabaseAuditSpecificationEventsEvents">
            <summary>get/set all events for ddldatabaseauditspecificationeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlMasterKeyEventsEvents">
            <summary>get/set all events for ddlmasterkeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDatabaseSecurityEventsEvents">
            <summary>get/set all events for ddldatabasesecurityeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDefaultEventsEvents">
            <summary>get/set all events for ddldefaulteventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlDatabaseEncryptionKeyEventsEvents">
            <summary>get/set all events for ddldatabaseencryptionkeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlEventNotificationEventsEvents">
            <summary>get/set all events for ddleventnotificationeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlExtendedPropertyEventsEvents">
            <summary>get/set all events for ddlextendedpropertyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlFulltextCatalogEventsEvents">
            <summary>get/set all events for ddlfulltextcatalogeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlFulltextStoplistEventsEvents">
            <summary>get/set all events for ddlfulltextstoplisteventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlFunctionEventsEvents">
            <summary>get/set all events for ddlfunctioneventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlGdrDatabaseEventsEvents">
            <summary>get/set all events for ddlgdrdatabaseeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlIndexEventsEvents">
            <summary>get/set all events for ddlindexeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlMessageTypeEventsEvents">
            <summary>get/set all events for ddlmessagetypeeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSymmetricKeyEventsEvents">
            <summary>get/set all events for ddlsymmetrickeyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlPartitionEventsEvents">
            <summary>get/set all events for ddlpartitioneventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlPlanGuideEventsEvents">
            <summary>get/set all events for ddlplanguideeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlBrokerPriorityEventsEvents">
            <summary>get/set all events for ddlbrokerpriorityeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSearchPropertyListEventsEvents">
            <summary>get/set all events for ddlsearchpropertylisteventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlPartitionFunctionEventsEvents">
            <summary>get/set all events for ddlpartitionfunctioneventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlPartitionSchemeEventsEvents">
            <summary>get/set all events for ddlpartitionschemeeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlQueueEventsEvents">
            <summary>get/set all events for ddlqueueeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlRoleEventsEvents">
            <summary>get/set all events for ddlroleeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlRouteEventsEvents">
            <summary>get/set all events for ddlrouteeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlRuleEventsEvents">
            <summary>get/set all events for ddlruleeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSchemaEventsEvents">
            <summary>get/set all events for ddlschemaeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSecurityPolicyEventsEvents">
            <summary>get/set all events for ddlsecuritypolicyeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSequenceEventsEvents">
            <summary>get/set all events for ddlsequenceeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlServiceEventsEvents">
            <summary>get/set all events for ddlserviceeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSsbEventsEvents">
            <summary>get/set all events for ddlssbeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlStatisticsEventsEvents">
            <summary>get/set all events for ddlstatisticseventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlProcedureEventsEvents">
            <summary>get/set all events for ddlprocedureeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlSynonymEventsEvents">
            <summary>get/set all events for ddlsynonymeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlTableEventsEvents">
            <summary>get/set all events for ddltableeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlTableViewEventsEvents">
            <summary>get/set all events for ddltablevieweventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlTriggerEventsEvents">
            <summary>get/set all events for ddltriggereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlTypeEventsEvents">
            <summary>get/set all events for ddltypeeventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlUserEventsEvents">
            <summary>get/set all events for ddlusereventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlViewEventsEvents">
            <summary>get/set all events for ddlvieweventsevents</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.DatabaseDdlTriggerEventSet.DdlXmlSchemaCollectionEventsEvents">
            <summary>get/set all events for ddlxmlschemacollectioneventsevents</summary>
        </member>
    </members>
</doc>
